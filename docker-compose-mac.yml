services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    networks:
      - frontend_network

  backend:
    command: "poetry run uvicorn app.main:app --reload --port 9090"
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "9090:9090"
      - "11436:11434"
    depends_on:
      - redis
      - database
    env_file:
      - .env
    networks:
      - backend_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend_network

  caddy:
    container_name: caddy_reverse_proxy
    image: caddy:alpine
    ports:
      - "80:80" # TODO: Disable once HTTPS is enabled
      - "8000:8000"
      - "443:443"
    env_file: ".env"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - frontend_network
      - backend_network

  database:
    image: ankane/pgvector:v0.4.1
    restart: always
    env_file:
      - .env
    user: root
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./scripts/create_dbs.sql:/docker-entrypoint-initdb.d/create_dbs.sql
    ports:
      - "5432:5432"
    networks:
      - backend_network
      - crawler_network

  minio:
    image: minio/minio
    ports:
      - "9002:9002"
      - "9001:9001"
    volumes:
      - minio_data:/data
    env_file:
      - .env
    command: server /data --console-address ":9001" --address ":9002"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backend_network
      - crawler_network

  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./scripts/init_minio.sh:/scripts/init_minio.sh
    entrypoint: >
      /bin/sh -c "chmod +x /scripts/init_minio.sh && /scripts/init_minio.sh"
    networks:
      - backend_network

  crawler:
    platform: linux/arm64
    command: "poetry run crawler"
    build:
      context: .
      dockerfile: crawler/Dockerfile
    depends_on:
      - database
    env_file:
      - .env
    networks:
      - crawler_network
      - backend_network
    ports:
      - "11435:11434"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      resources:
        limits:
          cpus: "0.000"
        reservations:
          cpus: "0.000"

  crawler-scheduler:
    image: mcuadros/ofelia:latest
    depends_on:
      - crawler
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-run.crawl-job.schedule: "@every 168h"
      ofelia.job-run.crawl-job.container: "crawler"
    networks:
      - crawler_network

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  minio_data:
  ollama_data:

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
  crawler_network:
    driver: bridge
