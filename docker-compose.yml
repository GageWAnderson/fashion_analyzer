services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env

  backend:
    command: "poetry run uvicorn app.main:app --reload --port 9090"
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      - redis
      - db
      - chroma
    env_file:
      - ./backend/.env

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  caddy:
    container_name: caddy_reverse_proxy
    image: caddy:alpine
    ports:
      - "80:80"
      - "8000:8000"
      - "443:443"
    env_file: ".env"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8080:8000"
    volumes:
      - chroma_data:/chroma/chroma

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"

  crawler:
    command: "poetry run crawler"
    build: 
      context: .
      dockerfile: crawler/Dockerfile
    depends_on:
      - chroma
    environment:
      - CHROMA_HOST=${CHROMA_HOST}
      - CHROMA_PORT=${CHROMA_PORT}
      - OLLAMA_URL=${OLLAMA_URL}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    volumes:
      - ./crawler_data:/app/data

  crawler-scheduler:
    image: mcuadros/ofelia:latest
    depends_on:
      - crawler
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-run.crawl-job.schedule: "@every 168h"
      ofelia.job-run.crawl-job.container: "crawler"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  chroma_data:
  minio_data: