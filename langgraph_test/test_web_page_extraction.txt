Search result: <!DOCTYPE html>
<html class="no-js t-hasfindinstore" lang="en" dir="ltr" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema">
  <head>
	<script type="text/javascript" src="https://www.gucci.com/static/0ff02ae18594f05c60ad3b5f0ef2bf8454a63794300564" async ></script><script>
    function logError(e, errorMessage) {
        try {
            console.error(errorMessage, e);
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({
                "event": "csrfError",
                "error": errorMessage + ": " + e
            });
        } catch(e) {
            console.error(e);
        }
    }

    try {
        window.hybris =  window.hybris ?  window.hybris : {};
        window.hybris.CSRFTokenUpdate = {};

        window.hybris.CSRFTokenUpdate.update = function(token) {
            function updateDom() {
                var csrfInputs = document.querySelectorAll("input[name*='CSRFToken']");
                if (csrfInputs.length > 0) {
                    Array.from(csrfInputs).forEach(function (csrfInput) {
                        csrfInput.value = token;
                    });
                }
            }

            try {
                // Update window variable
                window.hybris.CSRFToken = token;
                window.hybris.csrfIsValid = true;

                // Update form inputs
                document.addEventListener("DOMContentLoaded", updateDom);
                updateDom();

                // Update localStorage
                var expireTimeInMs = 10 * 60 * 1000; // 10 minutes
                var expiration = new Date(Date.now() + expireTimeInMs).getTime();
                var newToken = {token: token, expiresAt: expiration};
                window.localStorage.setItem("csrfToken", JSON.stringify(newToken));
                console.log("CSRF token updated.");
            } catch (e) {
                logError(e, "Error calling CSRFUpdate.updateToken");
            }
        };

        window.hybris.CSRFTokenUpdate.refreshCSRFToken = function (useCache = true) {
            // if we receive this in server, then we know there was error in fetching CSRF
            var token = "monitor-csrf-sentinel";

            try {
                var now = Date.now();
                if (useCache) {
                    var existingToken = window.localStorage.getItem("csrfToken");
                    if (existingToken !== null) {
                        var tokenData = JSON.parse(existingToken);
                        if (now < tokenData.expiresAt) {
                            window.hybris.CSRFTokenUpdate.update(tokenData.token);
                            return tokenData.token;
                        }
                    }
                }

                var xhr = new XMLHttpRequest();
                xhr.open("GET", "/csrf?key=" + now, false);
                xhr.onload = function () {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        token = JSON.parse(xhr.responseText);
                        window.hybris.CSRFTokenUpdate.update(token);
                    } else {
                        logError(xhr.statusText, "Error calling CSRF endpoint");
                        return window.hybris.CSRFToken
                    }
                };
                xhr.onerror = function (e) {
                    logError(e, "Error calling CSRF endpoint");
                    return window.hybris.CSRFToken
                };
                xhr.send(null);
            } catch (e) {
                logError(e, "Error calling CSRFUpdate.updateToken");
                return window.hybris.CSRFToken
            }
            return token
        };

        // First update will not use cache
        window.hybris.CSRFTokenUpdate.refreshCSRFToken(false);

    } catch (e) {
        logError(e, "Error refreshing CSRF token");
    }
</script>

<!-- OneTrust Cookies Consent Notice start for gucci.com.
		Please note this is a LEGAL requirement. Be careful before modifying
		-->
		<script src="https://cdn.cookielaw.org/consent/ea4d164f-5092-4add-8ec6-40003298824f/otSDKStub.js"
				data-document-language="true" type="text/javascript" charset="UTF-8" data-domain-script="ea4d164f-5092-4add-8ec6-40003298824f" ></script>
		<script type="text/javascript">
			var gucciOneTrustConsents = window.OptanonActiveGroups;
			var oneTrustLoaded = false;
			var isApplePayEnabledForUser = undefined;

			function oneTrustDispatchEvent(eventName) {
				if (typeof Event === "function") {
					window.dispatchEvent(new Event(eventName));
				} else {
					var event = document.createEvent("Event");
					event.initEvent(eventName, true, true);
					window.dispatchEvent(event);
				}
			}
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_section_class = 'clothing-section'
    sections = soup.find_all(class_=clothing_section_class)
    for section in sections:
        clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: function OptanonWrapper() {
				var eventDispatcherInitialised = false;
				if (!eventDispatcherInitialised) {
					window.OneTrust.OnConsentChanged(function() {
						["C0002", "C0003", "C0004", "C0005", "GCC01"].forEach(function(category) {
							var isEnabled = window.OptanonActiveGroups.indexOf(category) > -1;
							var wasEnabledBefore = gucciOneTrustConsents.indexOf(category) > -1;

							if (isEnabled && !wasEnabledBefore) {
								var eventName = "cookie-category-" + category + "-enabled";
								oneTrustDispatchEvent(eventName);
							}
							if (!isEnabled && wasEnabledBefore) {
								var eventName = "cookie-category-" + category + "-disabled";
								oneTrustDispatchEvent(eventName);
							}
						});
						gucciOneTrustConsents = window.OptanonActiveGroups;
					});
					eventDispatcherInitialised = true;
				}
				var cookiePolicyLinkNodes = document.querySelectorAll('a.custom-one-trust-cookie-policy-link:not([data-one-trust-cookie-policy-link-fixed])');
				[].forEach.call(
					cookiePolicyLinkNodes,
					function(link) {
						var locale = window.location.pathname.split('/').slice(0,3).join('/');
						var cookiePolicyUrl = "/st/privacy-landing#q17"
						link.setAttribute('href', window.location.origin + locale + cookiePolicyUrl);
						link.setAttribute('data-one-trust-cookie-policy-link-fixed', '');
					}
				);
				if (oneTrustLoaded === false) {
					var eventName = 'oneTrustReady';
					oneTrustDispatchEvent(eventName);
					oneTrustLoaded = true;
					gucciOneTrustConsents = window.OptanonActiveGroups;
				}
			}
		</script>
		<!-- OneTrust Cookies Consent Notice end for gucci.com -->
	<link rel="preload" href="/_ui/responsive/common/js/libs/modernizr/modernizr-3.7.1.min.js" as="script" />
	<link rel="preload" href="/_ui/responsive/common/js/libs/require/require-2.1.11.min.js" as="script" />
	<link rel="preload" href="/_ui/responsive/common/js/hybris.js?v=20241015053847" as="script" />

	<link href="/_ui/responsive/common/node_modules/@gucci-private/ui-kit/dist/index.min.css?v=20241015053847" rel="stylesheet" />
	<link rel="preconnect" href="https://cdn-pci.optimizely.com" />
	<!--<link rel="preconnect" href="https://imgdev.edge.regiongold.com" />
	<link rel="preconnect" href="https://connect.facebook.net" />-->

	<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">

		<meta name="title" content="Gucci for Men | Men's New Arrivals  | GUCCI® US" />

		<meta name="description" content="Discover the New Arrivals Men's Collection at GUCCI.com. Shop Ready-To-Wear, Shoes & Luggage. Enjoy Free Shipping, Returns & Complimentary Gift Wrapping." />

        <link rel="canonical" href="https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men" />
		<meta name="google-site-verification" content="ksYa9TvpNN-TuxT8PI2svoKQ_DivdiKiTGmK76abt6M" />

		<meta property="fb:app_id" content="1598811487063882"/>
		<meta property="og:type" content="website"/>
		<!-- Technical specification provided with story GUC-433 -->
		<meta property="og:title" content="Gucci for Men | Men's New Arrivals  | GUCCI® US" />
			<meta property="og:description" content="Discover the New Arrivals Men's Collection at GUCCI.com. Shop Ready-To-Wear, Shoes & Luggage. Enjoy Free Shipping, Returns & Complimentary Gift Wrapping." />
			<meta property="og:url" content="https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men" />

		<meta property="og:image:type" content="image/jpeg" />
			<meta property="og:image" content="https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg" />
			<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content="@gucci" />
		<meta name="twitter:creator" content="@gucci" />
		<meta name="twitter:domain" content="gucci.com" />
		<meta name="twitter:title" content="Gucci for Men | Men's New Arrivals  | GUCCI® US" />
		<meta name="twitter:description" content="Discover the New Arrivals Men's Collection at GUCCI.com. Shop Ready-To-Wear, Shoes & Luggage. Enjoy Free Shipping, Returns & Complimentary Gift Wrapping." />
		<meta name="twitter:image0" content="https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg" />
		<meta name="viewport" content="initial-scale=1, minimum-scale=1, maximum-scale=5, user-scalable=yes, width=device-width" />
		<meta name="format-detection" content="telephone=no" />
		<meta name="apple-mobile-web-app-capable" content="yes" />
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    meta_tags = soup.find_all('meta', attrs={'name': True, 'property': True})
    clothing_keywords = ['clothing', 'apparel', 'wear', 'fashion', 'collection']
    for tag in meta_tags:
        content = tag.get('content', '').lower()
        if any((keyword in content for keyword in clothing_keywords)):
            clothing_sections.append(content)
    return clothing_sections
Results: []
Search result: <link rel="apple-touch-icon" href="https://www.gucci.com/_ui/responsive/common/images/GG_Icon_iOS_57.png" sizes="57x57">
			<link rel="apple-touch-icon" href="https://www.gucci.com/_ui/responsive/common/images/GG_Icon_iOS_72.png" sizes="72x72">
			<link rel="apple-touch-icon" href="https://www.gucci.com/_ui/responsive/common/images/GG_Icon_iOS_114.png" sizes="114x114">
			<link rel="apple-touch-icon" href="https://www.gucci.com/_ui/responsive/common/images/GG_Icon_iOS_144.png" sizes="144x144">
		<link rel="next" href="https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men/1/" />
			<link rel="shortcut icon" href="/_ui/responsive/common/images/favicon.png" >


	<title>
		Gucci for Men | Men's New Arrivals  | GUCCI® US</title>
	<!-- Google Tag Manager -->
<script>
  dataLayer = [];

  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}

  var adStorageConsent = 'denied';
  var analyticsConsent = 'denied';
  var chatConsent = 'denied';
  var functionalConsent = 'denied';

  function setUpGTag(status) {
    // performance
    analyticsConsent = window.OnetrustActiveGroups.indexOf('C0002') !== -1 ? 'granted' : 'denied';
    // targeting
    adStorageConsent = window.OnetrustActiveGroups.indexOf('C0004') !== -1 ? 'granted' : 'denied';
    // chat
    chatConsent = window.OnetrustActiveGroups.indexOf('GCC01') !== -1 ? 'granted' : 'denied';
    // functional
    functionalConsent = window.OnetrustActiveGroups.indexOf('C0003') !== -1 ? 'granted' : 'denied';

    gtag('consent', status, {
      'ad_storage': adStorageConsent,
      'analytics_storage': analyticsConsent,
      'chat_storage': chatConsent,
      'functionality_storage': functionalConsent,
      'ad_personalization': adStorageConsent,
      'ad_user_data': analyticsConsent,
    });

    if (status === "default") {
      // load GTM only when oneTrust is ready
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.data=true;j.setAttributeNode(d.createAttribute('data-ot-ignore'));j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-NQ9L24L');
    }
  }

  window.addEventListener("oneTrustReady", function () {
    setUpGTag('default');
  });

/*
  window.addEventListener("cookie-category-C0002-enabled", function () {
    setUpGTag('update');
  });

  window.addEventListener("cookie-category-C0003-enabled", function () {
      setUpGTag('update');
  });

  window.addEventListener("cookie-category-C0004-enabled", function () {
    setUpGTag('update');
  });

  window.addEventListener("cookie-category-GCC01-enabled", function () {
      setUpGTag('update');
  });

  window.addEventListener("cookie-category-C0002-disabled", function () {
    setUpGTag('update');
  });

  window.addEventListener("cookie-category-C0003-disabled", function () {
      setUpGTag('update');
  });

  window.addEventListener("cookie-category-C0004-disabled", function () {
    setUpGTag('update');
  });

  window.addEventListener("cookie-category-GCC01-disabled", function () {
      setUpGTag('update');
  });
*/
</script>

<!-- End Google Tag Manager -->
<link href="/_ui/responsive/common/20241015053847/css/main.css" as="style" rel="preload"/><link href="/_ui/responsive/common/20241015053847/css/main.css" rel="stylesheet"/><script type="application/javascript">
		var newExperienceHeaderOn = true;
		var funhouseHeaderOn = true;
	</script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    title_tag = soup.find('title')
    if title_tag and ('Men' in title_tag.text or 'New Arrivals' in title_tag.text):
        clothing_sections.append(title_tag.text.strip())
    return clothing_sections
Results: ["Gucci for Men | Men's New Arrivals  | GUCCI® US"]
Raw res: clothing_items=[ClothingItem(id=None, name=None, brand='Gucci', category=None, subcategory=None, price=None, original_price=None, image_url=None, color=None, sizes=None, material=None, gender="men's", season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Parsed results: clothing_items=[ClothingItem(id=None, name=None, brand='Gucci', category=None, subcategory=None, price=None, original_price=None, image_url=None, color=None, sizes=None, material=None, gender="men's", season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Search result: <script type="text/javascript">
        var luxConfig = {};
        LUX=(function(){var a=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMarks)?LUX.gaMarks:[]);var d=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMeasures)?LUX.gaMeasures:[]);var h="LUX_start";var j=window.performance;var k=("undefined"!==typeof(LUX)&&LUX.ns?LUX.ns:(Date.now?Date.now():+(new Date())));if(j&&j.timing&&j.timing.navigationStart){k=j.timing.navigationStart}function e(){if(j){if(j.now){return j.now()}else{if(j.webkitNow){return j.now()}else{if(j.msNow){return j.now()}else{if(j.mozNow){return j.now()}}}}}var m=Date.now?Date.now():+(new Date());return m-k}function b(m){if(j){if(j.mark){return j.mark(m)}else{if(j.webkitMark){return j.webkitMark(m)}}}a.push({name:m,entryType:"mark",startTime:e(),duration:0});return}function l(o,s,m){if("undefined"===typeof(s)&&g(h)){s=h}if(j){if(j.measure){if(s){if(m){return j.measure(o,s,m)}else{return j.measure(o,s)}}else{return j.measure(o)}}else{if(j.webkitMeasure){return j.webkitMeasure(o,s,m)}}}var q=0,n=e();if(s){var r=g(s);if(r){q=r.startTime}else{if(j&&j.timing&&j.timing[s]){q=j.timing[s]-j.timing.navigationStart}else{return}}}if(m){var p=g(m);if(p){n=p.startTime}else{if(j&&j.timing&&j.timing[m]){n=j.timing[m]-j.timing.navigationStart}else{return}}}d.push({name:o,entryType:"measure",startTime:q,duration:(n-q)});return}function g(m){return c(m,f())}function c(p,o){for(i=o.length-1;i>=0;i--){var n=o[i];if(p===n.name){return n}}return undefined}function f(){if(j){if(j.getEntriesByType){return j.getEntriesByType("mark")}else{if(j.webkitGetEntriesByType){return j.webkitGetEntriesByType("mark")}}}return a}return{mark:b,measure:l,gaMarks:a,gaMeasures:d}})();LUX.ns=(Date.now?Date.now():+(new Date()));LUX.ac=[];LUX.cmd=function(a){LUX.ac.push(a)};LUX.init=function(){LUX.cmd(["init"])};LUX.send=function(){LUX.cmd(["send"])};LUX.addData=function(a,b){LUX.cmd(["addData",a,b])};
    </script>

    <script  type="text/plain" src="https://cdn.speedcurve.com/js/lux.js?id=111210459" async defer class="optanon-category-C0002"></script>
    <script>

        LUX = window.LUX || {};

        LUX.samplerate = 40; // decrease to stay in your budget
        var luxConfig = {};
        luxConfig.urlArray = window.location.href.split('/');
        luxConfig.country = luxConfig.urlArray[3];
        luxConfig.language = luxConfig.urlArray[4];
        LUX.label = 'Not Defined';

        luxConfig.getTemplate = function(url){
        if( RegExp('/pr/').test(url) ) return "Product Page";
        if( RegExp('/lo/').test(url) && RegExp('-p-').test(url) ) return "Looks Detail Page";
        if( RegExp('/lo/').test(url) && RegExp('-c-').test(url) ) return "Looks Grid";
        if( RegExp('^/'+luxConfig.country+'/'+luxConfig.language+'/ca/').test(url) ) return "Category Page";
        if( RegExp('/wishlist/saved-items').test(url) ) return "Wishlist";
        if( RegExp('/checkout/orderConfirmation/').test(url) ) return "Order Confirmation";
        if( RegExp('/checkout').test(url) ) return "Checkout";
        if( RegExp('/st/capsule').test(url) ) return "Capsule";
        if( RegExp('/search').test(url) ) return "Search";
        if( RegExp('/newsearchpage').test(url) ) return "Algolia search";
        if( RegExp('^/'+luxConfig.country+'/'+luxConfig.language+'/store').test(url) ) return "Store";
        if( RegExp('/my-account').test(url) ) return "My Account";
        if( RegExp('/cart').test(url) ) return "Shopping Bag";
        if( RegExp('/stories').test(url) && !RegExp('/st/stories/article/video_how_to_shop_on_gucci_website').test(url) ) return "Stories";
        if( RegExp('/'+luxConfig.country+'/'+luxConfig.language+'/?$').test(url) ) return "Home Page";
        };
        luxConfig.template = luxConfig.getTemplate(window.location);
        LUX.label = luxConfig.template ;
        //
        if (luxConfig.template==="Order Confirmation") {
        LUX.addData('purchase', 'yes');
        }

    </script>
<script src="/_ui/responsive/common/js/libs/modernizr/modernizr-3.7.1.min.js"></script>
    <script data-ot-ignore crossorigin="anonymous" type="text/javascript" src="https://componentsfront.guccidigital.io/gde_activator/index.js" async defer ></script>
	<script type="text/javascript">
    window.analyticsSdk = {
        tracking: {
            sendEvent: function({ name: name, event: event }) {
				console.log("event:  missed because ran before loading analytics/index.umd.js")
            },
			asyncSendEvent: function({ name: name, event: event }) {
				console.log("async event:  missed because ran before loading analytics/index.umd.js")
			}
        }
    }
    </script>
	<script type="text/javascript" src="/web/analytics/index.umd.js?v=2024102901"></script>

	<span data-module="userTrackingInfo"></span>
<script>
	analyticsEvent = function() {}; analyticsSocial = function() {}; analyticsVPV = function() {}; analyticsForm = function() {};
	var pageType = "CATEGORY";
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['Product Page', 'Looks Detail Page', 'Looks Grid', 'Category Page', 'Wishlist', 'Order Confirmation', 'Checkout', 'Capsule', 'Search', 'Algolia search', 'Store', 'My Account', 'Shopping Bag', 'Stories', 'Home Page']
    scripts = soup.find_all('script')
    for script in scripts:
        if script.string:
            for keyword in clothing_keywords:
                if keyword in script.string:
                    clothing_sections.append(script.string)
                    break
    return clothing_sections
Results: ['\n\n        LUX = window.LUX || {};\n\n        LUX.samplerate = 40; // decrease to stay in your budget\n        var luxConfig = {};\n        luxConfig.urlArray = window.location.href.split(\'/\');\n        luxConfig.country = luxConfig.urlArray[3];\n        luxConfig.language = luxConfig.urlArray[4];\n        LUX.label = \'Not Defined\';\n\n        luxConfig.getTemplate = function(url){\n        if( RegExp(\'/pr/\').test(url) ) return "Product Page";\n        if( RegExp(\'/lo/\').test(url) && RegExp(\'-p-\').test(url) ) return "Looks Detail Page";\n        if( RegExp(\'/lo/\').test(url) && RegExp(\'-c-\').test(url) ) return "Looks Grid";\n        if( RegExp(\'^/\'+luxConfig.country+\'/\'+luxConfig.language+\'/ca/\').test(url) ) return "Category Page";\n        if( RegExp(\'/wishlist/saved-items\').test(url) ) return "Wishlist";\n        if( RegExp(\'/checkout/orderConfirmation/\').test(url) ) return "Order Confirmation";\n        if( RegExp(\'/checkout\').test(url) ) return "Checkout";\n        if( RegExp(\'/st/capsule\').test(url) ) return "Capsule";\n        if( RegExp(\'/search\').test(url) ) return "Search";\n        if( RegExp(\'/newsearchpage\').test(url) ) return "Algolia search";\n        if( RegExp(\'^/\'+luxConfig.country+\'/\'+luxConfig.language+\'/store\').test(url) ) return "Store";\n        if( RegExp(\'/my-account\').test(url) ) return "My Account";\n        if( RegExp(\'/cart\').test(url) ) return "Shopping Bag";\n        if( RegExp(\'/stories\').test(url) && !RegExp(\'/st/stories/article/video_how_to_shop_on_gucci_website\').test(url) ) return "Stories";\n        if( RegExp(\'/\'+luxConfig.country+\'/\'+luxConfig.language+\'/?$\').test(url) ) return "Home Page";\n        };\n        luxConfig.template = luxConfig.getTemplate(window.location);\n        LUX.label = luxConfig.template ;\n        //\n        if (luxConfig.template==="Order Confirmation") {\n        LUX.addData(\'purchase\', \'yes\');\n        }\n\n    ']
Raw res: clothing_items=[ClothingItem(id='1', name='Gucci T-Shirt', brand='Gucci', category='Tops', subcategory='T-Shirt', price=450.0, original_price=500.0, image_url='https://example.com/gucci-tshirt.jpg', color='Black', sizes=['S', 'M', 'L', 'XL'], material='Cotton', gender='Unisex', season='All-season', style='Casual', description='A stylish Gucci T-shirt made from high-quality cotton.', care_instructions='Machine wash cold, tumble dry low.', availability='In stock', average_rating=4.5, num_reviews=120, tags=['Gucci', 'T-Shirt', 'Casual', 'Unisex'], dimensions=None, weight=0.3, release_date=datetime.date(2023, 5, 1), sustainability_info='Made with organic cotton.'), ClothingItem(id='2', name='Gucci Leather Jacket', brand='Gucci', category='Outerwear', subcategory='Jacket', price=2500.0, original_price=3000.0, image_url='https://example.com/gucci-leather-jacket.jpg', color='Brown', sizes=['M', 'L'], material='Leather', gender="Men's", season='Winter', style='Formal', description='A luxurious leather jacket from Gucci, perfect for winter.', care_instructions='Dry clean only.', availability='Pre-order', average_rating=4.8, num_reviews=85, tags=['Gucci', 'Leather', 'Jacket', 'Formal'], dimensions=None, weight=1.5, release_date=datetime.date(2023, 9, 15), sustainability_info='Ethically sourced leather.')]
Parsed results: clothing_items=[ClothingItem(id='1', name='Gucci T-Shirt', brand='Gucci', category='Tops', subcategory='T-Shirt', price=450.0, original_price=500.0, image_url='https://example.com/gucci-tshirt.jpg', color='Black', sizes=['S', 'M', 'L', 'XL'], material='Cotton', gender='Unisex', season='All-season', style='Casual', description='A stylish Gucci T-shirt made from high-quality cotton.', care_instructions='Machine wash cold, tumble dry low.', availability='In stock', average_rating=4.5, num_reviews=120, tags=['Gucci', 'T-Shirt', 'Casual', 'Unisex'], dimensions=None, weight=0.3, release_date=datetime.date(2023, 5, 1), sustainability_info='Made with organic cotton.'), ClothingItem(id='2', name='Gucci Leather Jacket', brand='Gucci', category='Outerwear', subcategory='Jacket', price=2500.0, original_price=3000.0, image_url='https://example.com/gucci-leather-jacket.jpg', color='Brown', sizes=['M', 'L'], material='Leather', gender="Men's", season='Winter', style='Formal', description='A luxurious leather jacket from Gucci, perfect for winter.', care_instructions='Dry clean only.', availability='Pre-order', average_rating=4.8, num_reviews=85, tags=['Gucci', 'Leather', 'Jacket', 'Formal'], dimensions=None, weight=1.5, release_date=datetime.date(2023, 9, 15), sustainability_info='Ethically sourced leather.')]
Search result: var gtmData = {};
		
					dataLayer.push ({});
				

	dataLayer.push({ isOrchestrator: false });
</script>

<script type="text/javascript">
  var TroqTracking = {
    'tagid': '6557215-5833cb09afc2483c8126ae6f71a84ab8',
    'rtgidcountry': 'us',
    'rtglanguage': 'en'
  };
  window._troq = window._troq || [];
  _troq.push(['tagid', TroqTracking.tagid]);
  _troq.push(['rtgidcountry', TroqTracking.rtgidcountry ]);
  _troq.push(['rtglanguage', TroqTracking.rtglanguage ]);

</script>



  <script type="text/javascript">

    TroqTracking._track_on_load = true;

    // it is tracked in header-update.js

  </script>
<script data-ot-ignore src="https://cdn-pci.optimizely.com/js/5016740305.js"></script>
	<!-- PDL SCHEMA -->

<script type="application/ld+json">
{
        "@context": "http://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
                {
                "@type": "ListItem",
                "position": 1,
                "item": {
                        "@id": "https://www.gucci.com/us/en/ca/whats-new/new-in-c-new-in",
                        "name": "New In"
                }
        },
                {
                "@type": "ListItem",
                "position": 2,
                "item": {
                        "@id": "https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men",
                        "name": "This Week: Men"
                }
                }]
}
</script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for script in soup.find_all('script', type='application/ld+json'):
        try:
            data = json.loads(script.string)
            if data.get('@type') == 'BreadcrumbList':
                for item in data.get('itemListElement', []):
                    if 'men' in item['item']['name'].lower() or 'women' in item['item']['name'].lower() or 'clothing' in item['item']['name'].lower():
                        clothing_sections.append(item['item'])
        except (json.JSONDecodeError, TypeError):
            continue
    return clothing_sections
Results: [{'@id': 'https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men', 'name': 'This Week: Men'}]
Raw res: clothing_items=[ClothingItem(id='https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men', name='This Week: Men', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Parsed results: clothing_items=[ClothingItem(id='https://www.gucci.com/us/en/ca/whats-new/new-in/this-week-men-c-new-men', name='This Week: Men', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Search result: <script type="application/ld+json">
    {
        "@context":"http://schema.org",
        "@type":"ItemList",
        "itemListElement":[
        
          {
            "@type":"ListItem",
            "position":1,
            "url":"https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/denim-for-men/denim-tops-for-men/lasered-denim-jacket-p-789129XDC0F4447",
            "name": "Lasered denim jacket",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":2,
            "url":"https://www.gucci.com/us/en/pr/men/shoes-for-men/sneakers-for-men/low-top-sneakers-for-men/mens-gucci-re-web-sneaker-p-787476AADHW9552",
            "name": "Men's Gucci Re-Web sneaker",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1721839533/787476_AADHW_9552_001_100_0000_Light-Mens-Gucci-Re-Web-sneaker.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":3,
            "url":"https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/pants-and-shorts-for-men/long-pants-for-men/tapered-denim-pant-with-web-p-789232XDC244447",
            "name": "Tapered denim pant with Web",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542652/789232_XDC24_4447_001_100_0000_Light-Tapered-denim-pant-with-Web.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":4,
            "url":"https://www.gucci.com/us/en/pr/men/accessories-for-men/hats-and-gloves-for-men/beanies-for-men/rib-knit-wool-hat-p-8113444G2004000",
            "name": "Rib knit wool hat",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1727434842/811344_4G200_4000_001_100_0000_Light-Rib-knit-wool-hat.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":5,
            "url":"https://www.gucci.com/us/en/pr/jewelry-watches/watches/watches-for-women/g-timeless-watch-38mm-p-808893IDVA08461",
            "name": "G-Timeless watch, 38mm",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1727250307/808893_IDVA0_8461_001_100_0000_Light-G-Timeless-watch-38mm.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":6,
            "url":"https://www.gucci.com/us/en/pr/men/accessories-for-men/eyewear-for-men/sunglasses-for-men/square-rectangle-sunglasses-for-men/square-frame-sunglasses-p-797502J07402312",
            "name": "Square frame sunglasses",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1717172236/797502_J0740_2312_001_100_0000_Light-Square-frame-sunglasses.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":7,
            "url":"https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/knitwear-for-men/crewnecks-for-men/wool-sweater-with-gucci-intarsia-p-795834XKD7K4594",
            "name": "Wool sweater with Gucci intarsia",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1711388799/795834_XKD7K_4594_001_100_0000_Light-Wool-sweater-with-Gucci-intarsia.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":8,
            "url":"https://www.gucci.com/us/en/pr/men/shoes-for-men/loafers-for-men/mens-horsebit-1953-loafer-p-307929BLM001000",
            "name": "Men's Horsebit 1953 loafer",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1659723303/307929_BLM00_1000_001_100_0000_Light-Mens-Horsebit-1953-loafer.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":9,
            "url":"https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/pants-and-shorts-for-men/long-pants-for-men/polyester-gg-jacquard-pant-with-web-p-791166ZAORH4036",
            "name": "Polyester GG jacquard pant with Web",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1713457876/791166_ZAORH_4036_001_100_0000_Light-Polyester-GG-jacquard-pant-with-Web.jpg" 
          } ,
          {
            "@type":"ListItem",
            "position":10,
            "url":"https://www.gucci.com/us/en/pr/jewelry-watches/gold-jewelry/gold-rings/icon-18k-gg-thin-ring-p-804335J85008000",
            "name": "Icon 18k GG thin ring",
            "image":"https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1724342431/804335_J8500_8000_001_100_0000_Light-Icon-18k-GG-thin-ring.jpg" 
          } 
        ]
    }
    </script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    script_tag = soup.find('script', type='application/ld+json')
    if not script_tag:
        return []
    data = json.loads(script_tag.string)
    clothing_items = []
    for item in data.get('itemListElement', []):
        name = item.get('name', '').lower()
        if any((keyword in name for keyword in ['jacket', 'sweater', 'pant', 'hat', 'denim'])):
            clothing_items.append({'position': item.get('position'), 'url': item.get('url'), 'name': item.get('name'), 'image': item.get('image')})
    return clothing_items
Results: [{'position': 1, 'url': 'https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/denim-for-men/denim-tops-for-men/lasered-denim-jacket-p-789129XDC0F4447', 'name': 'Lasered denim jacket', 'image': 'https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg'}, {'position': 3, 'url': 'https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/pants-and-shorts-for-men/long-pants-for-men/tapered-denim-pant-with-web-p-789232XDC244447', 'name': 'Tapered denim pant with Web', 'image': 'https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542652/789232_XDC24_4447_001_100_0000_Light-Tapered-denim-pant-with-Web.jpg'}, {'position': 4, 'url': 'https://www.gucci.com/us/en/pr/men/accessories-for-men/hats-and-gloves-for-men/beanies-for-men/rib-knit-wool-hat-p-8113444G2004000', 'name': 'Rib knit wool hat', 'image': 'https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1727434842/811344_4G200_4000_001_100_0000_Light-Rib-knit-wool-hat.jpg'}, {'position': 7, 'url': 'https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/knitwear-for-men/crewnecks-for-men/wool-sweater-with-gucci-intarsia-p-795834XKD7K4594', 'name': 'Wool sweater with Gucci intarsia', 'image': 'https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1711388799/795834_XKD7K_4594_001_100_0000_Light-Wool-sweater-with-Gucci-intarsia.jpg'}, {'position': 9, 'url': 'https://www.gucci.com/us/en/pr/men/ready-to-wear-for-men/pants-and-shorts-for-men/long-pants-for-men/polyester-gg-jacquard-pant-with-web-p-791166ZAORH4036', 'name': 'Polyester GG jacquard pant with Web', 'image': 'https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1713457876/791166_ZAORH_4036_001_100_0000_Light-Polyester-GG-jacquard-pant-with-Web.jpg'}]
Raw res: clothing_items=[ClothingItem(id=None, name='Lasered denim jacket', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Tapered denim pant with Web', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542652/789232_XDC24_4447_001_100_0000_Light-Tapered-denim-pant-with-Web.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Rib knit wool hat', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1727434842/811344_4G200_4000_001_100_0000_Light-Rib-knit-wool-hat.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Wool sweater with Gucci intarsia', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1711388799/795834_XKD7K_4594_001_100_0000_Light-Wool-sweater-with-Gucci-intarsia.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Polyester GG jacquard pant with Web', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1713457876/791166_ZAORH_4036_001_100_0000_Light-Polyester-GG-jacquard-pant-with-Web.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Parsed results: clothing_items=[ClothingItem(id=None, name='Lasered denim jacket', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542647/789129_XDC0F_4447_001_100_0000_Light-Lasered-denim-jacket.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Tapered denim pant with Web', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1720542652/789232_XDC24_4447_001_100_0000_Light-Tapered-denim-pant-with-Web.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Rib knit wool hat', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1727434842/811344_4G200_4000_001_100_0000_Light-Rib-knit-wool-hat.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Wool sweater with Gucci intarsia', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1711388799/795834_XKD7K_4594_001_100_0000_Light-Wool-sweater-with-Gucci-intarsia.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id=None, name='Polyester GG jacquard pant with Web', brand=None, category=None, subcategory=None, price=None, original_price=None, image_url='https://media.gucci.com/style/DarkGray_Center_0_0_600x314/1713457876/791166_ZAORH_4036_001_100_0000_Light-Polyester-GG-jacquard-pant-with-Web.jpg', color=None, sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Search result: <script src="https://microfrontend-commons.guccidigital.io/vendors.js"></script>
<script>
        (function(d) {
            var e = d.createElement('script');
            e.src = d.location.protocol + '//tag.wknd.ai/' + 4494 + '/i.js';
            e.async = true;
            e.type = "text/plain";
            e.className = "optanon-category-C0004";
            d.getElementsByTagName("head")[0].appendChild(e);
        }(document));
    </script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_classes = ['clothing', 'apparel', 'fashion']
    for clothing_class in clothing_classes:
        sections = soup.find_all(class_=clothing_class)
        for section in sections:
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: <script>(window.BOOMR_mq=window.BOOMR_mq||[]).push(["addVar",{"rua.upush":"false","rua.cpush":"false","rua.upre":"false","rua.cpre":"true","rua.uprl":"false","rua.cprl":"false","rua.cprf":"false","rua.trans":"SJ-7f18bc89-f574-46db-8c54-07bf4b37df24","rua.cook":"true","rua.ims":"false","rua.ufprl":"false","rua.cfprl":"false","rua.isuxp":"false","rua.texp":"norulematch","rua.ceh":"false","rua.ueh":"false","rua.ieh.st":"0"}]);</script>
<script>!function(){function o(n,i){if(n&&i)for(var r in i)i.hasOwnProperty(r)&&(void 0===n[r]?n[r]=i[r]:n[r].constructor===Object&&i[r].constructor===Object?o(n[r],i[r]):n[r]=i[r])}try{var n=decodeURIComponent("%7B%0A%20%20%20%20%22RT%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22cookie%22%3A%20%22%22%0A%20%20%20%20%7D%0A%7D");if(n.length>0&&window.JSON&&"function"==typeof window.JSON.parse){var i=JSON.parse(n);void 0!==window.BOOMR_config?o(window.BOOMR_config,i):window.BOOMR_config=i}}catch(r){window.console&&"function"==typeof window.console.error&&console.error("mPulse: Could not parse configuration",r)}}();</script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('div', class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: <script>!function(e){var n="https://s.go-mpulse.net/boomerang/";if("True"=="True")e.BOOMR_config=e.BOOMR_config||{},e.BOOMR_config.PageParams=e.BOOMR_config.PageParams||{},e.BOOMR_config.PageParams.pci=!0,n="https://s2.go-mpulse.net/boomerang/";if(window.BOOMR_API_key="S9ASQ-G4N32-5WU5H-GLJH3-YANFZ",function(){function e(){if(!r){var e=document.createElement("script");e.id="boomr-scr-as",e.src=window.BOOMR.url,e.async=!0,o.appendChild(e),r=!0}}function t(e){r=!0;var n,t,a,i,d=document,O=window;if(window.BOOMR.snippetMethod=e?"if":"i",t=function(e,n){var t=d.createElement("script");t.id=n||"boomr-if-as",t.src=window.BOOMR.url,BOOMR_lstart=(new Date).getTime(),e=e||d.body,e.appendChild(t)},!window.addEventListener&&window.attachEvent&&navigator.userAgent.match(/MSIE [67]\./))return window.BOOMR.snippetMethod="s",void t(o,"boomr-async");a=document.createElement("IFRAME"),a.src="about:blank",a.title="",a.role="presentation",a.loading="eager",i=(a.frameElement||a).style,i.width=0,i.height=0,i.border=0,i.display="none",o.appendChild(a);try{O=a.contentWindow,d=O.document.open()}catch(_){n=document.domain,a.src="javascript:var d=document.open();d.domain='"+n+"';void 0;",O=a.contentWindow,d=O.document.open()}if(n)d._boomrl=function(){this.domain=n,t()},d.write("<bo"+"dy onload='document._boomrl();'>");else if(O._boomrl=function(){t()},O.addEventListener)O.addEventListener("load",O._boomrl,!1);else if(O.attachEvent)O.attachEvent("onload",O._boomrl);d.close()}function a(e){window.BOOMR_onload=e&&e.timeStamp||(new Date).getTime()}if(!window.BOOMR||!window.BOOMR.version&&!window.BOOMR.snippetExecuted){window.BOOMR=window.BOOMR||{},window.BOOMR.snippetStart=(new Date).getTime(),window.BOOMR.snippetExecuted=!0,window.BOOMR.snippetVersion=14,window.BOOMR.url=n+"S9ASQ-G4N32-5WU5H-GLJH3-YANFZ";var i=document.currentScript||document.getElementsByTagName("script")[0],o=i.parentNode,r=!1,d=document.createElement("link");if(d.relList&&"function"==typeof d.relList.supports&&d.relList.supports("preload")&&"as"in d)window.BOOMR.snippetMethod="p",d.href=window.BOOMR.url,d.rel="preload",d.as="script",d.addEventListener("load",e),d.addEventListener("error",function(){t(!0)}),setTimeout(function(){if(!r)t(!0)},3e3),BOOMR_lstart=(new Date).getTime(),o.appendChild(d);else t(!1);if(window.addEventListener)window.addEventListener("load",a,!1);else if(window.attachEvent)window.attachEvent("onload",a)}}(),"".length>0)if(e&&"performance"in e&&e.performance&&"function"==typeof e.performance.setResourceTimingBufferSize)e.performance.setResourceTimingBufferSize();!function(){if(BOOMR=e.BOOMR||{},BOOMR.plugins=BOOMR.plugins||{},!BOOMR.plugins.AK){var n="true"=="true"?1:0,t="cookiepresent",a="z5qexmaxeeuiozzaigpa-f-58f2f98bd-clientnsv4-s.akamaihd.net",i="false"=="true"?2:1,o={"ak.v":"39","ak.cp":"77754","ak.ai":parseInt("487174",10),"ak.ol":"0","ak.cr":12,"ak.ipv":4,"ak.proto":"h2","ak.rid":"1513dcd5","ak.r":43454,"ak.a2":n,"ak.m":"dscx","ak.n":"essl","ak.bpcip":"207.96.75.0","ak.cport":61676,"ak.gh":"23.33.41.218","ak.quicv":"","ak.tlsv":"tls1.3","ak.0rtt":"","ak.0rtt.ed":"","ak.csrc":"-","ak.acc":"","ak.t":"1730167198","ak.ak":"hOBiQwZUYzCg5VSAfCLimQ==CIbl8T0NAHi2oZNPBeMT4XSs269JOogpu5sfxJdKstRoQ0sHHteAvDoK1h4VaRb7kGEhwoY6w4RXxJ0uL6977UjJBK4gREJMlrH3BrMm/QfLAPzlY2PmUETeubLewF7TV3ADbWM5EtNGHasHiGdJ3l+Tjp11euFdRj9QnvEEZC5HwytYMLR/MbKH1IRxA49uG+ETppaH8wvL603ekdQC6j86IY0NW1p6kqI1TJoN0XjidMUlXsrw0usZmETxiBnZdNLchPcmarsqJ0aDUO/3QBMqg4r52ovnz4ZRuU1wG96MF+UAF1a4aj9FhToCy4nleEJhZyNO/UrZqN19jTjfIN4pBCp86kYu+Utq2zabbrfrUSjWNMzJPTj7pEqn3fzopcMsWdyPjYFhJaDCbetZw+7LEv+RdZs7924l42LyVmU=","ak.pv":"282","ak.dpoabenc":"","ak.tf":i};if(""!==t)o["ak.ruds"]=t;var r={i:!1,av:function(n){var t="http.initiator";if(n&&(!n[t]||"spa_hard"===n[t]))o["ak.feo"]=void 0!==e.aFeoApplied?1:0,BOOMR.addVar(o)},rv:function(){var e=["ak.bpcip","ak.cport","ak.cr","ak.csrc","ak.gh","ak.ipv","ak.m","ak.n","ak.ol","ak.proto","ak.quicv","ak.tlsv","ak.0rtt","ak.0rtt.ed","ak.r","ak.acc","ak.t","ak.tf"];BOOMR.removeVar(e)}};BOOMR.plugins.AK={akVars:o,akDNSPreFetchDomain:a,init:function(){if(!r.i){var e=BOOMR.subscribe;e("before_beacon",r.av,null,null),e("onbeacon",r.rv,null,null),r.i=!0}return this},is_complete:function(){return!0}}}}()}(window);</script></head>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(['div', 'section'], class_='clothing'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: <body class="new-design  funhouseHeaderFooter  country-US page-PG-US pageType-CategoryPage template-pages-product-productGridPage   language-en"
    data-module="keysNavigation,keysNavigationOverlay,overlaySwitchsite,gtmCustomTracking,headerUpdate,gucciApp"
    data-switchsite="/us/en/ajax/overlay" data-is-user-logged="false">
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: <!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NQ9L24L"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<!-- gucciGoogleAnalytics -->
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_classes = ['clothing-section', 'apparel', 'fashion']
    for clothing_class in clothing_classes:
        sections = soup.find_all(class_=clothing_class)
        for section in sections:
            clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: <svg id="svg-icons" style="position:absolute;left:-9999px;width:0;height:0;visibility:hidden;"><defs><style>.cls-1{fill:#e5dfd9;}</style> <style> .cls-1 { fill: #4b4b4b; } </style> </defs><symbol viewBox="0 0 45 35" id="svg-icon-360-view"><title>360-view</title> <path fill-rule="evenodd" clip-rule="evenodd" d="M3.39536 17.9742C2.44302 18.978 1.99999 19.9898 1.99999 20.9735C1.99999 22.6423 3.30761 24.4257 6.08437 25.9858C6.56586 26.2563 6.73689 26.8659 6.46637 27.3474C6.19585 27.8289 5.58622 27.9999 5.10473 27.7294C2.12846 26.0572 0 23.7515 0 20.9735C0 19.3412 0.746205 17.8607 1.94446 16.5977C3.13776 15.3399 4.81744 14.2527 6.81674 13.3613C10.8178 11.5776 16.2751 10.4999 22.2498 10.4999C28.2246 10.4999 33.6819 11.5776 37.6829 13.3613C39.6822 14.2527 41.3619 15.3399 42.5552 16.5977C43.7535 17.8607 44.4997 19.3412 44.4997 20.9735C44.4997 22.6059 43.7535 24.0863 42.5552 25.3494C41.3619 26.6071 39.6822 27.6944 37.6829 28.5857C34.6673 29.9302 30.8244 30.8735 26.5561 31.2566L30.6945 33.0851C31.1996 33.3083 31.4282 33.8987 31.205 34.4039C30.9818 34.9091 30.3913 35.1376 29.8862 34.9144L21.8457 31.3618C21.5114 31.2141 21.2843 30.8958 21.2534 30.5317C21.2225 30.1675 21.3928 29.8155 21.6974 29.6136L29.7379 24.2847C30.1982 23.9796 30.8188 24.1054 31.1239 24.5658C31.429 25.0262 31.3031 25.6467 30.8428 25.9518L25.768 29.3151C30.1017 28.986 33.948 28.0611 36.8686 26.7591C38.7147 25.936 40.147 24.9819 41.1043 23.9728C42.0567 22.969 42.4997 21.9573 42.4997 20.9735C42.4997 19.9898 42.0567 18.978 41.1043 17.9742C40.147 16.9652 38.7147 16.0111 36.8686 15.188C33.1787 13.543 28.011 12.4999 22.2498 12.4999C16.4886 12.4999 11.321 13.543 7.63111 15.188C5.78495 16.0111 4.35266 16.9652 3.39536 17.9742Z" fill="#999999"/> <path d="M17.4339 3.07797C17.9469 2.77018 18.2709 2.27227 18.2709 1.70194C18.2709 0.706123 17.4699 0.00905328 16.3269 0.00905328C15.5799 0.00905328 14.9319 0.389273 14.6349 0.642753V1.83773H14.6439C15.1569 1.25835 15.7239 0.977709 16.3089 0.977709C16.7679 0.977709 17.1999 1.25835 17.1999 1.76531C17.1999 2.39901 16.5699 2.67059 16.1019 2.67059H15.7959V3.58493H16.1019C16.6329 3.58493 17.3619 3.82936 17.3619 4.5898C17.3619 5.19634 16.8399 5.52225 16.3269 5.52225C15.6789 5.52225 15.0759 5.2235 14.5089 4.64412H14.4999V5.8391C14.8239 6.10163 15.4989 6.4909 16.3089 6.4909C17.5239 6.4909 18.4239 5.71235 18.4239 4.60791C18.4239 3.94705 18.0369 3.38577 17.4339 3.07797Z" fill="#999999"/> <path d="M22.2715 2.3809C21.8935 2.3809 21.5065 2.52575 21.2095 2.77018C21.6505 1.94637 22.5145 1.05013 23.2165 0.172005H21.8665C21.0565 1.16782 19.7515 2.80639 19.7515 4.17337C19.7515 5.6852 20.8045 6.4909 22.0375 6.4909C23.3065 6.4909 24.2695 5.55846 24.2695 4.4359C24.2695 3.27714 23.4415 2.3809 22.2715 2.3809ZM22.0375 5.58562C21.3355 5.58562 20.8765 5.0515 20.8765 4.4359C20.8765 3.8022 21.3535 3.27714 22.0555 3.27714C22.7305 3.27714 23.1895 3.77504 23.1895 4.4359C23.1895 5.0515 22.7395 5.58562 22.0375 5.58562Z" fill="#999999"/> <path d="M27.9594 6.49995C29.4354 6.49995 30.4974 5.13297 30.4974 3.24998C30.4974 1.36698 29.4354 0 27.9594 0C26.4834 0 25.4125 1.36698 25.4125 3.24998C25.4125 5.13297 26.4834 6.49995 27.9594 6.49995ZM27.9594 5.45888C27.1224 5.45888 26.5555 4.57169 26.5555 3.24998C26.5555 1.92826 27.1224 1.04108 27.9594 1.04108C28.7964 1.04108 29.3544 1.92826 29.3544 3.24998C29.3544 4.57169 28.7964 5.45888 27.9594 5.45888Z" fill="#999999"/> </symbol><symbol viewBox="0 0 16 21" id="svg-icon-3D-cube"><title>3D-cube</title> <path d="M15.9845 5.63644C15.9821 5.63156 15.982 5.62669 15.9796 5.62181C15.9671 5.59744 15.9522 5.57551 15.9347 5.55601C15.9297 5.55114 15.9272 5.5487 15.9223 5.54383C15.9148 5.53651 15.9098 5.5292 15.8998 5.52433L8.14674 0.0456959C8.05954 -0.015232 7.94244 -0.015232 7.85525 0.0456959L0.102146 5.52433C0.0946715 5.5292 0.0871975 5.53651 0.0797234 5.54383C0.0747407 5.5487 0.0722493 5.55114 0.0672666 5.55601C0.0473358 5.57551 0.0323876 5.59744 0.0224222 5.62181C0.0199309 5.62669 0.0199309 5.63156 0.0174395 5.63644C0.00747407 5.66324 0 5.69005 0 5.72174V14.4588C0 14.5392 0.0423531 14.6075 0.104637 14.6538L0.102146 14.6562L7.99975 20.2372L15.8973 14.6562L15.8949 14.6538C15.9571 14.6099 15.9995 14.5417 15.9995 14.4588V5.72174C16.002 5.69005 15.9945 5.66324 15.9845 5.63644ZM7.7531 19.4597L0.498271 14.3345V6.19697L7.7531 11.3222V19.4597ZM8.25137 11.3222L15.5062 6.19697V14.3345L8.25137 19.4597V11.3222Z" fill="#807D7A"/> </symbol><symbol viewBox="0 0 11 13" id="svg-icon-4gift"><title>4gift</title><path d="M5.68566 3.05817L0.599877 9.00194V5.48133H0V3.05817H5.68566Z" fill="inherit"/><path d="M10.631 3.05817V5.48133H10.0487V9.05462H6.83862V3.05817H10.631Z" fill="inherit"/><path d="M5.26426 10.635H0.599854V12.6221H5.26426V10.635Z" fill="inherit"/><path d="M10.0487 10.635H6.83862V12.6221H10.0487V10.635Z" fill="inherit"/><path d="M2.60474 9.05469L5.2676 5.95258V9.05469H2.60474Z" fill="inherit"/><path d="M9.07172 1.81152L6.23328 2.73338H4.42487L1.58643 1.81152L1.86149 0L4.81406 1.99004L4.94574 1.73543H5.72119L5.84994 1.98711L8.79665
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: 1.81152L1.86149 0L4.81406 1.99004L4.94574 1.73543H5.72119L5.84994 1.98711L8.79665 0L9.07172 1.81152Z" fill="inherit"/></symbol><symbol viewBox="0 0 15 13.5" id="svg-icon-account"><title>account</title> <g fill="currentColor"> <path d="M7.5,9.8c-2.8,0-4,0.7-4.7,1.9h9.5C11.6,10.5,10.4,9.8,7.5,9.8 M7.5,1.8c-1.5,0-2,0.9-1.8,2.7
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(['div', 'section'], class_='clothing'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: c0.2,2.2,0.4,2.7,1.8,2.7C9,7.2,9,6.7,9.3,4.5C9.5,2.6,8.6,1.8,7.5,1.8 M15,13.5h-1.8h-0.3H2.1H1.7H0c0.8-2.9,2-4.8,5.4-5.3
			c-1.1-1-1.6-2.7-1.6-4.2C3.8,1.8,4.9,0,7.5,0c2.6,0,3.7,1.8,3.7,4.1c0,1.5-0.5,3.2-1.6,4.2C12.9,8.8,14.2,10.7,15,13.5"/> </g> </symbol><symbol viewBox="0 0 26 25" id="svg-icon-animal-free"><title>animal-free</title> <path d="M17.2406 9.03768L25.2852 0.993101M17.2406 9.03768C16.3294 8.00077 15.0098 5.42417 17.0209 3.41303C19.0321 1.40188 23.3684 0.961766 25.2852 0.993101M17.2406 9.03768C18.2775 9.94889 20.8541 11.2685 22.8653 9.25738C24.8764 7.24623 25.3165 2.90988 25.2852 0.993101M17.2406 9.03768C17.2406 9.03768 9.95806 16.6582 9.95806 24.2502C9.95806 24.2502 7.86372 8.54266 0.795323 1.49679M18.4415 2.40022L18.4783 7.80005L23.8781 7.83683M20.9759 1.49679L21.091 5.18728L24.7815 5.30241" stroke="#666666"/> </symbol><symbol viewBox="0 0 59 41" id="svg-icon-chime_icon"><title>LOGO CHIME BLACK BACKGROUND RGB NEGATIVO</title><desc>Created with Sketch.</desc> <style type="text/css"> .st0{fill:#E5DFD9;} </style>   <g id="chime_icon-Page-1"> <g id="chime_icon-LOGO-CHIME-BLACK-BACKGROUND-RGB-NEGATIVO"> <path id="chime_icon-Path" class="st0" d="M42.5,9c1.4,0,2.5,1.3,2.5,2.9v0.2c0,1.6-1.1,2.9-2.5,2.9H16.5c-1.4,0-2.5-1.3-2.5-2.9v-0.2
			c0-1.6,1.1-2.9,2.5-2.9H42.5z"/> <path id="chime_icon-Path_1_" class="st0" d="M16.5,32c-1.4,0-2.5-1.3-2.5-2.9v-0.2c0-1.6,1.1-2.9,2.5-2.9h25.9c1.4,0,2.5,1.3,2.5,2.9v0.2
			c0,1.6-1.1,2.9-2.5,2.9H16.5z"/> <path id="chime_icon-Shape" class="st0" d="M54.9,8.2C49,0.3,38.3-2.3,29.5,2.2c-8.6-4.3-19-2-25,5.5s-6,18.2,0,25.7s16.4,9.8,25,5.5
			c8.5,4.3,18.7,2.1,24.8-5.2S60.6,15.8,54.9,8.2z M49.4,32.8c-4.3,3.8-10.3,5.1-15.8,3.3c1.1-1,2.2-2.1,3.1-3.3h-5.5
			c-0.5,0.5-1.1,0.9-1.7,1.3c-0.6-0.4-1.1-0.8-1.7-1.3h-5.5c0.9,1.2,1.9,2.3,3.1,3.3c-6.7,2.2-14.1-0.2-18.2-6S3,16.6,7.2,10.9
			s11.5-8.2,18.2-6c-1.1,1-2.2,2.1-3.1,3.3h5.5c0.5-0.5,1.1-0.9,1.7-1.3c0.6,0.4,1.1,0.8,1.7,1.3h5.5c-0.9-1.2-1.9-2.3-3.1-3.3
			c7.4-2.4,15.4,0.7,19.2,7.5S55.2,27.7,49.4,32.8z"/> <path id="chime_icon-Path_2_" class="st0" d="M18.7,21.1c-0.4,0-0.9,0-1.3,0c-0.2,0-0.3,0.1-0.4,0.2c-0.1,0.2-0.3,0.3-0.4,0.5
			c-0.6,0.5-1.5,0.5-2.1-0.1c-0.5-0.5-0.6-1.1-0.4-1.8c0.3-0.8,1.1-1.2,1.9-1c0.4,0.1,0.7,0.3,0.9,0.7c0.1,0.1,0.2,0.2,0.3,0.2
			c0.4,0,0.9,0,1.3,0c0.1,0,0.1,0,0.2,0c0.1,0,0.1,0,0.2-0.1c0-0.1,0.1-0.1,0-0.2c0-0.1,0-0.2-0.1-0.3c-0.4-1-1.1-1.7-2.1-2
			c-0.6-0.2-1.2-0.3-1.9-0.2c-0.9,0.1-1.6,0.6-2.2,1.2c-0.7,0.9-0.9,1.8-0.7,2.9c0.1,0.8,0.5,1.4,1.1,1.9c0.6,0.6,1.5,0.9,2.3,0.9
			c0.2,0,0.4,0,0.6-0.1c0.4-0.1,0.8-0.2,1.2-0.4c0.6-0.3,1.1-0.8,1.4-1.5c0.1-0.2,0.2-0.4,0.2-0.6C19,21.3,18.9,21.1,18.7,21.1"/> <path id="chime_icon-Path_3_" class="st0" d="M25.7,17h-1.3c-0.2,0-0.3,0.2-0.3,0.4v2.1c0,0.1-0.1,0.1-0.1,0.1h-1.8c-0.1,0-0.1-0.1-0.1-0.1
			v-2.1c0-0.1,0-0.2-0.1-0.3C21.8,17,21.7,17,21.6,17h-1.3c-0.2,0-0.3,0.2-0.3,0.4v6.3c0,0.2,0.1,0.3,0.3,0.3h1.3
			c0.2,0,0.3-0.2,0.3-0.3l0-2c0,0,0-0.1,0-0.1s0.1,0,0.1,0h1.8c0.1,0,0.1,0.1,0.1,0.1v1.9c0,0.2,0.2,0.4,0.3,0.4h1.3
			c0.2,0,0.3-0.2,0.3-0.3v-6.3C26,17.2,25.9,17,25.7,17"/> <path id="chime_icon-Path_4_" class="st0" d="M46.6,22.2h-3.2c-0.1,0-0.1-0.1-0.1-0.1v-0.5c0-0.1,0.1-0.1,0.2-0.1h3.1c0.1,0,0.2,0,0.3-0.1
			c0.1-0.1,0.1-0.2,0.1-0.3v-1c0-0.2-0.2-0.3-0.4-0.3h-3.1c0,0-0.1,0-0.1,0s0-0.1,0-0.1v-0.6c0-0.1,0.1-0.1,0.2-0.1h3.2
			c0.2,0,0.4-0.2,0.4-0.4v-1.1c0-0.2-0.2-0.4-0.4-0.4h-5.2c-0.2,0-0.4,0.2-0.4,0.3v6.3c0,0.2,0.2,0.3,0.4,0.3h5.2
			c0.2,0,0.4-0.2,0.4-0.4v-1.1C47,22.3,46.8,22.2,46.6,22.2"/> <path id="chime_icon-Path_5_" class="st0" d="M29.7,17h-1.4c-0.2,0-0.3,0.2-0.3,0.3v6.3c0,0.2,0.1,0.3,0.3,0.3h1.4c0.2,0,0.3-0.2,0.3-0.3
			v-6.3C30,17.2,29.9,17,29.7,17"/> <path id="chime_icon-Path_6_" class="st0" d="M38.7,17h-0.9c-0.1,0-0.3,0.1-0.4,0.2l-1.9,3.2c0,0,0,0-0.1,0s-0.1,0-0.1,0l-1.9-3.2
			c-0.1-0.1-0.2-0.2-0.4-0.2h-0.9c-0.2,0-0.3,0.2-0.3,0.4v6.3c0,0.1,0,0.2,0.1,0.3c0.1,0.1,0.1,0.1,0.2,0.1h1.2
			c0.2,0,0.3-0.2,0.3-0.4v-2.2c0,0,0,0,0,0c0,0,0,0,0,0l1.5,2.5c0,0.1,0.1,0.1,0.2,0.1c0.1,0,0.1,0,0.2-0.1l1.4-2.5c0,0,0,0,0,0
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    sections = soup.find_all('symbol', id=lambda x: x and 'clothing' in x)
    for section in sections:
        clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: s0,0,0,0v2.2c0,0.2,0.1,0.4,0.3,0.4h1.2c0.2,0,0.3-0.2,0.3-0.3v-6.3C39,17.2,38.9,17,38.7,17"/> </g> </g> </symbol><symbol viewBox="0 0 33 33" id="svg-icon-close-circle"><title>close-circle</title> <g fill="currentColor"> <path d="M9.03 23.06L23.002 9.089l.998.998-13.973 13.972z"/> <path d="M9.028 10.019l.998-.998 13.972 13.973-.997.997z"/> <path d="M16.5 0C7.386 0 0 7.386 0 16.5S7.386 33 16.5 33 33 25.612 33 16.5 25.612 0 16.5 0zm0 30.422c-7.69 0-13.922-6.231-13.922-13.922 0-7.69 6.231-13.922 13.922-13.922 7.69 0 13.922 6.231 13.922 13.922 0 7.69-6.233 13.922-13.922 13.922z"/> </g> </symbol><symbol viewBox="0 0 512 512" id="svg-icon-close"><title>close</title> <g id="close-Page-1"> <g id="close-CloseIcon_Desktop"> <rect id="close-Rectangle-path" x="-79.1" y="234.6" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -107.9529 256.3787)" width="669.2" height="47.8"/> <rect id="close-Rectangle-path_1_" x="231.6" y="-78.4" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -106.3595 255.7187)" width="47.8" height="669.2"/> </g> </g> </symbol><symbol viewBox="0 0 14 10" id="svg-icon-club-check"><title>club-check</title> <path fill-rule="evenodd" clip-rule="evenodd" d="M12.8248 1.92477L4.87567 9.72413C4.60807 9.99833 4.15159 9.99833 3.88399 9.72413L0.609877 6.47948C0.342281 6.20528 0.342281 5.77875 0.609877 5.50456C0.877472 5.23036 1.33396 5.23036 1.60156 5.50456L4.3877 8.26175L11.8489 0.949849C12.1165 0.675653 12.573 0.675653 12.8406 0.949849C13.1082 1.22405 13.1082 1.65057 12.8248 1.92477Z" fill="#313131"/> </symbol><symbol viewBox="0 0 20 17" id="svg-icon-contact-us"><title>contact-us</title> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.8125 1.625C6.45625 1.625 4.25 4.40896 4.25 7V10.6563C4.25 10.9416 4.19253 11.2537 4.00141 11.5285C3.80419 11.8121 3.53307 11.9582 3.29313 12.0324C3.0682 12.102 2.8391 12.1185 2.66119 12.124C2.539 12.1278 2.39743 12.1267 2.27137 12.1258C2.21908 12.1254 2.16946 12.125 2.125 12.125C0.951396 12.125 0 11.1736 0 10V7.375C0 6.2014 0.951395 5.25 2.125 5.25C2.34867 5.25 2.59946 5.26625 2.85013 5.3219C3.60327 2.50808 6.1928 0 9.8125 0C13.4322 0 16.0217 2.50808 16.7749 5.3219C17.0255 5.26625 17.2763 5.25 17.5 5.25C18.6736 5.25 19.625 6.2014 19.625 7.375V10C19.625 11.1736 18.6736 12.125 17.5 12.125C17.4555 12.125 17.4059 12.1254 17.3536 12.1258C17.2276 12.1267 17.086 12.1278 16.9638 12.124C16.9409 12.1233 16.9171 12.1224 16.8926 12.1212C16.7405 13.0179 16.4133 13.7358 15.8245 14.3245C15.0337 15.1154 13.8874 15.4135 12.4427 15.4831C12.2591 16.1417 11.6547 16.625 10.9375 16.625H8.5C7.63705 16.625 6.9375 15.9254 6.9375 15.0625V14.3125C6.9375 13.4496 7.63705 12.75 8.5 12.75H10.9375C11.6417 12.75 12.237 13.2158 12.4323 13.8561C13.6841 13.7874 14.315 13.536 14.6755 13.1755C15.1085 12.7424 15.375 12.0999 15.375 10.6563V7C15.375 4.40896 13.1688 1.625 9.8125 1.625ZM13.2157 6.99539L9.42862 11.0052L6.77606 8.11153L7.97394 7.01348L9.44638 8.61978L12.0343 5.87962L13.2157 6.99539Z"/> </symbol><symbol viewBox="0 0 28 26" id="svg-icon-eco-material"><title>eco-material</title> <path d="M20.3794 8.43744L18.7629 10.2684C17.8117 11.3656 17.5823 12.6022 19.6628 16.1186C22.223 20.4461 16.757 23.284 13.2153 19.7832M20.3794 8.43744L21.3591 7.32775M20.3794 8.43744C21.3632 9.20169 23.7188 10.4127 25.4295 8.53773C27.1475 6.65487 27.063 2.70506 26.9457 1M20.3794 8.43744C20.3752 8.43421 20.3711 8.43098 20.367 8.42777C19.4981 7.54646 18.1008 5.41881 19.8188 3.53595C21.5368 1.65308 25.2178 1.06013 26.9457 1M21.3591 7.32775L23.5323 4.86627M21.3591 7.32775L21.3416 7.32783L20.9155 2.71776M21.3591 7.32775L26.0649 7.30827M23.5323 4.86627L23.5338 4.87856L26.7609 5.01041M23.5323 4.86627L23.3443 3.33166L23.1563 1.79705M23.5323 4.86627L25.239 2.93314L26.9457 1M13.2153 19.7832V8.64497C13.2153 6.73673 11.803 5.31898 9.84829 5.31898M13.2153 19.7832C13.2153 21.6915 11.803 23.2384 9.84829 23.2384M4.53932 23.2384H9.84829M4.53932 23.2384C2.58461 23.2384 1 21.6915 1 19.7832V8.64497C1 6.73673 2.58461 5.31898 4.53931 5.31898M4.53932 23.2384V24.6889H9.84829V23.2384M9.84829 5.31898H4.53931M9.84829 5.31898V3.59139H4.53931V5.31898M1.40067 7.04658L13.2153 11.8504M1 10.9337L13.2153 15.6845M9.68146 14.3101L1 17.4121M13.2153 16.7621L1.44241 21.4573" stroke="#666666"/> </symbol><symbol viewBox="0 0 27 24" id="svg-icon-eco-packaging"><title>eco-packaging</title> <path d="M13.3377 6.26362C13.2374 5.17996 12.6121 2.45008 11.3696 1.4404C10.1272 0.430714 8.95049 1.37904 8.40075 2.07504C7.85101 2.77103 7.23449 4.09296 8.47694 5.10264C9.71938 6.11233 12.2732 6.40071 13.3377 6.26362ZM13.3377 6.26362H2L1 23H26L25 6.26362H13.3377ZM13.3377 6.26362C13.4379 5.17996 14.3535 2.4501 15.596 1.44041C16.8384 0.43073 18.0151 1.37906 18.5648 2.07505C19.1146 2.77104 19.7311 4.09298 18.4887 5.10266C17.2462 6.11234 14.4022 6.40071 13.3377 6.26362ZM13.6729 20.5294L13.6729 18.5439M13.6729 18.5439L13.6729 16.8803M13.6729 18.5439C12.1307 18.5439 9.95344 17.612 9.95344 15.0557C9.95344 14.5488 10.0507 14.0242 10.2163 13.4995M13.6729 18.5439C15.215 18.5439 17.3953 17.612
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for symbol in soup.find_all('symbol'):
        title = symbol.find('title')
        if title and 'clothing' in title.text.lower():
            clothing_sections.append(str(symbol))
    return clothing_sections
Results: []
Search result: 14.5488 10.0507 14.0242 10.2163 13.4995M13.6729 18.5439C15.215 18.5439 17.3953 17.612 17.3953 15.0557C17.3953 14.5488 17.2981 14.0242 17.1324 13.4995M13.6729 16.8803V13.4995M13.6729 16.8803L10.2163 13.4995M13.6729 16.8803L17.1324 13.4995M13.6729 13.4995L13.6729 8.29412M13.6729 13.4995L11.2283 11.3547M13.6729 13.4995L16.1205 11.3547M13.6729 8.29412C13.016 8.92395 12.0243 10.0535 11.2283 11.3547M13.6729 8.29412C14.3297 8.92395 15.3245 10.0535 16.1205 11.3547M11.2283 11.3547C10.8102 12.0381 10.4469 12.7689 10.2163 13.4995M11.2283 11.3547L11.2263 11.3529M16.1205 11.3547C16.5386 12.0381 16.9018 12.7689 17.1324 13.4995M16.1205 11.3547L16.1224 11.3529" stroke="#666666"/> </symbol><symbol viewBox="0 0 283.2 271.76" id="svg-icon-equilibrium"><title>equilibrium</title> <style type="text/css"> .st0{fill:#7F7D7A;} </style> <g> <path class="st0" d="M226.02,104.18c0-1.19-0.04-2.38-0.11-3.55h11.69l-0.04-1.29c-0.53-16.08-5.1-31.83-13.21-45.57l-0.36-0.61
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: h-24.32c-2.02-1.44-4.12-2.77-6.32-3.97h0.28l-0.82-1.77c-2.26-4.89-4.83-9.49-7.65-13.69c-8.73-13.01-19.57-21.83-31.35-25.5
		l-3.47-1.08l2.08,2.99c4.77,6.87,8.89,17.68,12.03,31.47c-0.35-0.01-0.69-0.03-1.03-0.03c-1.01,0-2.02,0.04-3.03,0.09
		c-0.77-3.27-1.59-6.41-2.47-9.35c-2.61-8.66-5.71-15.65-8.97-20.24c-2.66-3.73-5.37-5.79-7.65-5.79
		c-5.33,0-11.86,10.22-16.62,26.03c-0.88,2.94-1.71,6.08-2.47,9.35c-1.01-0.05-2.02-0.09-3.03-0.09c-0.35,0-0.69,0.02-1.03,0.03
		c3.14-13.79,7.26-24.6,12.03-31.47l2.07-2.99l-3.47,1.08c-11.77,3.67-22.61,12.49-31.35,25.5c-2.82,4.2-5.39,8.81-7.65,13.69
		l-0.82,1.77h0.28c-2.19,1.2-4.29,2.53-6.32,3.97H58.59l-0.36,0.61C50.12,67.5,45.55,83.26,45.01,99.34l-0.04,1.29h11.69
		c-0.07,1.18-0.11,2.36-0.11,3.55c0,0.14,0.01,0.28,0.01,0.42H44.97l0.04,1.29c0.54,16.08,5.1,31.83,13.21,45.57l0.36,0.61h20.26
		c1.67,1.41,3.41,2.74,5.23,3.97H61.07l1.39,1.97c0.79,1.11,1.6,2.21,2.42,3.28v0c2.56,3.32,5.35,6.49,8.29,9.43
		c10.17,10.17,22.1,17.76,35.46,22.56l7.06,2.54l-5.86-4.69c-10.07-8.07-18.67-19.94-24.85-34.34l-0.1-0.24
		c1.91,1.25,3.9,2.4,5.95,3.45c2,4.07,4.2,7.94,6.59,11.5c8.74,13.01,19.58,21.83,31.35,25.5l3.47,1.08l-2.08-2.99
		c-4.4-6.34-8.24-16.02-11.28-28.31c0.1,0,0.19,0.01,0.29,0.01c1.26,0,2.52-0.05,3.78-0.13c0.55,2.15,1.12,4.25,1.72,6.25
		c2.6,8.66,5.71,15.65,8.97,20.24c2.66,3.73,5.37,5.79,7.65,5.79c5.33,0,11.86-10.22,16.62-26.03c0.6-2,1.17-4.09,1.72-6.25
		c1.26,0.08,2.52,0.13,3.78,0.13c0.1,0,0.19-0.01,0.29-0.01c-3.04,12.29-6.88,21.97-11.28,28.31l-2.07,2.99l3.47-1.08
		c11.77-3.67,22.61-12.49,31.35-25.5c2.39-3.56,4.59-7.43,6.59-11.5c2.05-1.04,4.04-2.19,5.95-3.45l-0.1,0.24
		c-6.19,14.4-14.78,26.27-24.86,34.34l-5.86,4.69l7.06-2.54c13.36-4.8,25.29-12.39,35.46-22.56c2.94-2.94,5.73-6.12,8.29-9.43
		c0.83-1.07,1.64-2.17,2.42-3.28l1.39-1.97h-23c1.82-1.23,3.56-2.56,5.23-3.97h20.26l0.36-0.61c8.11-13.73,12.68-29.49,13.21-45.57
		l0.04-1.29h-11.59C226.01,104.46,226.02,104.32,226.02,104.18z M102.87,188.27c-10.36-4.64-19.73-11.12-27.92-19.31
		c-2.87-2.87-5.59-5.96-8.08-9.19c-0.31-0.4-0.62-0.81-0.93-1.22h17.08C88.19,170.36,94.97,180.49,102.87,188.27z M216.64,158.54
		c-0.31,0.41-0.62,0.82-0.93,1.22c-2.49,3.23-5.21,6.33-8.08,9.19c-8.2,8.2-17.57,14.67-27.93,19.31
		c7.89-7.78,14.68-17.91,19.86-29.73H216.64z M203.07,55.65h19.48c7.46,12.86,11.75,27.5,12.46,42.47h-9.29
		c-1.64-17.04-10.09-32.08-22.62-42.36C203.09,55.73,203.08,55.69,203.07,55.65z M213.28,98.13h-2.64
		c-0.13-4.66-0.5-9.24-1.04-13.75C211.45,88.68,212.7,93.3,213.28,98.13z M171.34,68.56c-0.47-4.4-1.02-8.71-1.68-12.91h6.81
		c7.8,2.1,14.86,6.02,20.67,11.29c2.64,9.87,4.19,20.44,4.52,31.19h-28.59c-0.05-3.6-0.15-7.16-0.31-10.67
		c3.34-0.01,6.78-0.02,6.78-0.02C177.73,80.85,175.13,74.27,171.34,68.56z M156.44,11.82c9.93,4.04,19.08,12.03,26.64,23.3
		c2.4,3.58,4.62,7.46,6.62,11.57h-1.49c-6.56-2.83-13.69-4.58-21.18-5C164.22,29.19,160.62,19.02,156.44,11.82z M166.88,54.06
		l0.09,0.55c0.53,3.25,0.99,6.56,1.41,9.93c-1.46-1.8-3.02-3.48-4.67-5.07c-0.26-1.79-0.53-3.54-0.82-5.27l-0.04-0.26
		c0.19,0,0.38-0.01,0.56-0.01C164.57,53.92,165.73,53.98,166.88,54.06z M119.66,79.43c0.78-1.38,1.62-2.73,2.54-4.02
		c5.31-7.36,11.62-12.65,19.08-16.45c7.47,3.79,13.78,9.09,19.08,16.45c0.93,1.29,1.77,2.64,2.54,4.02
		c0.65,6.11,1.1,12.38,1.19,18.7h-45.64C118.55,91.8,119.01,85.54,119.66,79.43z M159.62,55.84c-0.08-0.06-0.16-0.12-0.24-0.19h0.21
		C159.6,55.71,159.61,55.78,159.62,55.84z M122.98,55.65h0.21c-0.08,0.06-0.16,0.12-0.24,0.19
		C122.96,55.78,122.97,55.71,122.98,55.65z M127.06,33.03c5.32-17.66,11.55-24.25,14.22-24.25c1.08,0,3.12,1.24,5.61,4.74
		c3.11,4.37,6.09,11.11,8.61,19.51c0.83,2.77,1.61,5.73,2.34,8.81c-3.18,0.28-6.34,0.77-9.44,1.53c-2.37,0.58-4.78,1.17-7.13,1.91
		c-2.35-0.74-4.76-1.33-7.13-1.91c-3.1-0.76-6.26-1.25-9.44-1.53C125.45,38.76,126.23,35.8,127.06,33.03z M119.17,53.92
		c0.19,0,0.38,0.01,0.56,0.01l-0.04,0.26c-0.29,1.73-0.56,3.49-0.82,5.27c-1.65,1.59-3.21,3.27-4.67,5.07
		c0.41-3.37,0.88-6.69,1.41-9.93l0.09-0.55C116.85,53.98,118,53.92,119.17,53.92z M109.81,87.46c-0.16,3.51-0.26,7.07-0.31,10.67
		H80.91c0.33-10.75,1.88-21.32,4.52-31.19c5.81-5.27,12.87-9.19,20.67-11.29h6.81c-0.66,4.2-1.21,8.51-1.68,12.91
		c-3.79,5.71-6.39,12.29-8.2,18.88C103.03,87.44,106.47,87.45,109.81,87.46z M92.88,46.68c1.99-4.11,4.21-7.99,6.62-11.57
		c7.56-11.27,16.72-19.26,26.64-23.3c-4.18,7.2-7.78,17.37-10.59,29.86c-7.49,0.43-14.63,2.17-21.18,5H92.88z M47.57,98.13
		c0.71-14.97,5-29.61,12.46-42.47H79.5c-0.01,0.04-0.02,0.08-0.04,0.11C66.95,66.05,58.49,81.09,56.85,98.13H47.57z M72.97,84.38
		c-0.54,4.51-0.9,9.09-1.04,13.75h-2.64C69.87,93.3,71.12,88.68,72.97,84.38z M68.91,104.18c0-1.2,0.06-2.38,0.14-3.55h5.32
		l0.03-1.22c0.16-7.42,0.86-14.67,2.06-21.71c1.62-2.6,3.46-5.05,5.51-7.31c-2.15,9.26-3.38,19.05-3.6,28.96l-0.03,1.28h33.62
		l0.01-1.24c0.04-4.03,0.15-8.01,0.32-11.93c2.08,0,3.69,0.01,3.69,0.01c0.05-0.16,0.18-0.52,0.34-0.93
		c-0.21,4.24-0.34,8.52-0.38,12.82l-0.01,1.26h50.69l-0.01-1.26c-0.04-4.31-0.17-8.59-0.38-12.83c0.16,0.41,0.29,0.77,0.34,0.93
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text())
    return clothing_sections
Results: []
Search result: c0,0,1.61,0,3.69-0.01c0.18,3.92,0.28,7.9,0.32,11.93l0.01,1.24h33.62l-0.03-1.28c-0.22-9.91-1.44-19.7-3.6-28.96
		c2.05,2.26,3.89,4.71,5.51,7.31c1.2,7.04,1.9,14.28,2.06,21.71l0.03,1.22h5.32c0.08,1.18,0.14,2.36,0.14,3.55
		c0,0.14-0.01,0.28-0.01,0.42h-5.45l-0.03,1.22c-0.19,9-1.18,17.74-2.9,26.16c-1.69,2.55-3.62,4.93-5.74,7.12
		c2.82-10.5,4.42-21.78,4.67-33.22l0.03-1.28H170.6l-0.01,1.24c-0.01,1.14-0.04,2.26-0.06,3.39h-3.97c0.02-1.12,0.05-2.24,0.06-3.36
		l0.01-1.26h-50.69l0.01,1.26c0.01,1.12,0.04,2.24,0.06,3.36h-3.97c-0.02-1.13-0.05-2.25-0.06-3.39l-0.01-1.24H78.35l0.03,1.28
		c0.25,11.44,1.85,22.72,4.67,33.22c-2.12-2.19-4.04-4.57-5.74-7.12c-1.72-8.42-2.71-17.16-2.9-26.16l-0.03-1.22h-5.45
		C68.92,104.46,68.91,104.32,68.91,104.18z M213.57,107.1c-0.37,6.48-1.97,12.63-4.57,18.22c0.9-5.94,1.46-12.02,1.64-18.22H213.57z
		 M184.99,149.57h-15.33c0.47-3.03,0.89-6.12,1.27-9.25c2.34-3.41,4.34-7.05,5.93-10.9c1.3-3.14,2.13-6.8,3.05-9.99
		c1.16-4.03,1.67-10.21,1.67-10.21h-8.55c0.01-0.71,0.04-1.41,0.04-2.12h28.59c-0.38,12.29-2.35,24.33-5.72,35.37
		C192.63,145.28,188.96,147.68,184.99,149.57z M166.29,121.7c-0.08,0.21-0.17,0.41-0.25,0.61c0.01-0.2,0.02-0.41,0.03-0.61H166.29z
		 M156.26,138.05c-4.2,4.76-9.33,8.55-14.97,11.29c-5.64-2.74-10.77-6.53-14.97-11.29c-2.58-2.93-4.93-6.07-6.84-9.46
		c-0.18-2.27-0.34-4.57-0.47-6.89h0.38v0h11.86c-0.27-4.05-0.44-8.23-0.52-12.48h-5.76v0h-6.46c-0.01-0.71-0.04-1.41-0.05-2.12
		h45.64c-0.01,0.71-0.03,1.42-0.05,2.12h-6.46v0h-5.76c-0.08,4.26-0.25,8.43-0.52,12.48h11.86v0h0.38
		c-0.14,2.31-0.29,4.62-0.47,6.89C161.18,131.98,158.84,135.13,156.26,138.05z M116.5,121.7c0.01,0.2,0.02,0.41,0.03,0.61
		c-0.08-0.21-0.17-0.41-0.25-0.61H116.5z M102.66,119.43c0.92,3.2,1.75,6.85,3.05,9.99c1.6,3.85,3.6,7.5,5.94,10.9
		c0.38,3.13,0.8,6.22,1.27,9.25H97.58c-3.97-1.89-7.64-4.29-10.95-7.11c-3.37-11.04-5.34-23.08-5.72-35.37h28.59
		c0.01,0.71,0.03,1.41,0.04,2.12h-8.55C100.99,109.22,101.5,115.39,102.66,119.43z M73.58,125.32c-2.6-5.59-4.2-11.74-4.57-18.22
		h2.93C72.11,113.3,72.68,119.38,73.58,125.32z M60.02,149.57c-7.46-12.86-11.75-27.5-12.46-42.47h9.06
		c0.77,16.7,8.08,31.69,19.44,42.47H60.02z M126.14,193.41c-9.92-4.04-19.08-12.03-26.64-23.3c-1.77-2.63-3.44-5.44-4.99-8.37
		c6.74,2.89,14.08,4.63,21.79,4.98C118.98,177.77,122.32,186.83,126.14,193.41z M103.91,152.07h11.94l-0.24-1.45
		c-0.33-2.05-0.64-4.13-0.92-6.22c1.49,1.83,3.09,3.57,4.78,5.22c0.08,0.47,0.14,0.95,0.22,1.41l0.17,1.04h2.26
		c0.81,0.71,1.64,1.4,2.48,2.07c-1.81,0.2-3.62,0.3-5.44,0.3C113.85,154.44,108.72,153.6,103.91,152.07z M155.51,172.19
		c-5.32,17.66-11.55,24.25-14.22,24.25c-1.08,0-3.12-1.24-5.61-4.74c-3.11-4.37-6.09-11.11-8.62-19.51
		c-0.55-1.83-1.08-3.75-1.59-5.73c1.38-0.14,2.76-0.31,4.13-0.54c0.08-0.01,0.15-0.03,0.23-0.04c3.91-0.68,7.75-1.5,11.45-2.68
		c3.71,1.18,7.54,2.01,11.45,2.68c0.08,0.01,0.15,0.03,0.23,0.04c1.37,0.23,2.75,0.4,4.13,0.54
		C156.59,168.44,156.06,170.36,155.51,172.19z M157.97,154.14c0.85-0.67,1.67-1.36,2.48-2.07h2.26l0.17-1.04
		c0.08-0.46,0.14-0.94,0.22-1.41c1.69-1.65,3.29-3.39,4.78-5.22c-0.29,2.1-0.59,4.18-0.92,6.22l-0.24,1.45h11.94
		c-4.81,1.53-9.94,2.37-15.26,2.37C161.59,154.44,159.77,154.33,157.97,154.14z M183.08,170.11c-7.56,11.27-16.71,19.25-26.64,23.29
		c3.82-6.58,7.16-15.64,9.84-26.69c7.71-0.35,15.05-2.09,21.79-4.98C186.52,164.68,184.85,167.48,183.08,170.11z M235.01,107.1
		c-0.71,14.97-5,29.61-12.46,42.47h-16.04c11.35-10.78,18.67-25.77,19.44-42.47H235.01z"/> <path class="st0" d="M197.59,48.43l0.33,0.76h23.58l-1.39-1.97c-0.79-1.12-1.6-2.22-2.42-3.28v0c-2.56-3.31-5.34-6.49-8.29-9.43
		c-10.17-10.17-22.1-17.76-35.46-22.56l-7.06-2.54l5.86,4.69C182.81,22.16,191.4,34.03,197.59,48.43z M207.63,36.27
		c2.87,2.87,5.59,5.96,8.08,9.19v0c0.31,0.4,0.62,0.81,0.93,1.22h-17.08c-5.18-11.81-11.96-21.95-19.86-29.73
		C190.06,21.59,199.43,28.07,207.63,36.27z"/> <path class="st0" d="M84.98,48.43c6.19-14.4,14.78-26.27,24.86-34.34l5.86-4.69l-7.06,2.54c-13.36,4.8-25.29,12.39-35.46,22.56
		c-2.94,2.94-5.73,6.12-8.29,9.43c-0.82,1.06-1.64,2.17-2.42,3.28l-1.39,1.97h23.58L84.98,48.43z M65.94,46.68
		c0.31-0.41,0.62-0.82,0.93-1.22c2.49-3.23,5.21-6.32,8.08-9.19c8.2-8.2,17.57-14.67,27.93-19.31
		c-7.89,7.78-14.68,17.91-19.85,29.73H65.94z"/> <path class="st0" d="M141.29-0.19L141.29-0.19c-56.68,0-102.8,46.11-102.8,102.8c0,56.68,46.11,102.8,102.8,102.8
		c56.68,0,102.8-46.11,102.8-102.8S197.97-0.18,141.29-0.19z M141.29,202.91c-55.3,0-100.3-44.99-100.3-100.3
		c0-55.3,44.99-100.3,100.3-100.3c55.3,0,100.3,44.99,100.3,100.3S196.59,202.91,141.29,202.91z"/> </g> <g> <g> <path class="st0" d="M9.96,250.43v1.68c0,0.27,0.09,0.49,0.27,0.68c0.18,0.19,0.4,0.28,0.65,0.28h10.43
			c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v5.52c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28H10.88
			c-0.26,0-0.48,0.09-0.65,0.28c-0.18,0.19-0.27,0.41-0.27,0.68v1.52c0,0.27,0.09,0.49,0.27,0.68c0.18,0.19,0.4,0.28,0.65,0.28
			h11.97c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v5.52c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_tags = soup.find_all(class_='clothing-section')
    for tag in clothing_tags:
        clothing_sections.append(tag.text.strip())
    return clothing_sections
Results: []
Search result: H3.26c-0.26,0-0.47-0.09-0.65-0.28c-0.18-0.19-0.27-0.41-0.27-0.68v-27.34c0-0.27,0.09-0.49,0.27-0.68
			c0.18-0.19,0.4-0.28,0.65-0.28h19.59c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v5.44c0,0.27-0.09,0.49-0.27,0.68
			c-0.18,0.19-0.4,0.28-0.65,0.28H10.88c-0.26,0-0.48,0.09-0.65,0.28C10.05,249.94,9.96,250.16,9.96,250.43z"/> <path class="st0" d="M57.41,264.82v5.64c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28H43.21
			c-2.59,0-4.84-0.39-6.74-1.18c-1.9-0.79-3.47-1.85-4.71-3.2c-1.24-1.35-2.17-2.92-2.77-4.72c-0.6-1.8-0.9-3.72-0.9-5.78
			c0-2.05,0.37-3.98,1.12-5.8c0.74-1.81,1.76-3.39,3.06-4.74c1.29-1.35,2.81-2.41,4.54-3.2c1.73-0.79,3.58-1.18,5.56-1.18
			s3.84,0.39,5.58,1.18c1.74,0.79,3.26,1.85,4.56,3.2c1.29,1.35,2.32,2.93,3.06,4.74c0.74,1.81,1.12,3.74,1.12,5.8
			c0,1.28-0.22,2.5-0.65,3.66c-0.44,1.16-0.99,2.14-1.65,2.94c-0.33,0.48-0.23,0.72,0.31,0.72h1.81c0.26,0,0.47,0.09,0.65,0.28
			C57.32,264.33,57.41,264.55,57.41,264.82z M42.39,263.62c0.92,0,1.78-0.19,2.59-0.58c0.81-0.39,1.52-0.9,2.13-1.54
			c0.61-0.64,1.09-1.39,1.44-2.24c0.34-0.85,0.52-1.76,0.52-2.72s-0.17-1.87-0.52-2.74c-0.35-0.87-0.83-1.63-1.44-2.28
			c-0.61-0.65-1.32-1.17-2.13-1.54c-0.81-0.37-1.67-0.56-2.59-0.56c-0.92,0-1.79,0.19-2.59,0.56c-0.81,0.37-1.52,0.89-2.13,1.54
			s-1.09,1.41-1.44,2.28c-0.34,0.87-0.52,1.78-0.52,2.74s0.17,1.87,0.52,2.72c0.35,0.85,0.83,1.6,1.44,2.24s1.32,1.15,2.13,1.54
			C40.6,263.43,41.46,263.62,42.39,263.62z"/> <path class="st0" d="M62.1,243.11c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28
			c0.18,0.19,0.27,0.41,0.27,0.68v16.19c0,1.04,0.16,1.9,0.48,2.58c0.32,0.68,0.72,1.21,1.2,1.6c0.48,0.39,0.99,0.66,1.53,0.82
			c0.54,0.16,1.03,0.24,1.47,0.24c0.44,0,0.93-0.08,1.47-0.24c0.54-0.16,1.04-0.43,1.51-0.82c0.46-0.39,0.86-0.92,1.18-1.6
			c0.32-0.68,0.48-1.54,0.48-2.58v-16.19c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28
			c0.18,0.19,0.27,0.41,0.27,0.68v16.19c0,1.89-0.29,3.61-0.86,5.16c-0.58,1.55-1.4,2.86-2.48,3.96c-1.08,1.09-2.37,1.94-3.88,2.54
			c-1.51,0.6-3.19,0.9-5.03,0.9c-1.84,0-3.52-0.3-5.03-0.9c-1.51-0.6-2.81-1.45-3.88-2.54c-1.08-1.09-1.91-2.41-2.5-3.96
			c-0.59-1.55-0.88-3.26-0.88-5.16V243.11z"/> <path class="st0" d="M100.15,271.37h-5.78c-0.28,0-0.5-0.09-0.67-0.28c-0.17-0.19-0.25-0.41-0.25-0.68v-27.3
			c0-0.27,0.08-0.49,0.25-0.68c0.17-0.19,0.39-0.28,0.67-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v27.3
			c0,0.27-0.09,0.49-0.27,0.68C100.63,271.28,100.41,271.37,100.15,271.37z"/> <path class="st0" d="M128.6,264.98v5.44c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28h-19.21
			c-0.28,0-0.51-0.09-0.67-0.28c-0.17-0.19-0.25-0.41-0.25-0.68v-27.34c0-0.27,0.08-0.49,0.25-0.68c0.17-0.19,0.39-0.28,0.67-0.28
			h5.77c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v19.99c0,0.27,0.08,0.49,0.25,0.68c0.17,0.19,0.39,0.28,0.67,0.28
			h11.58c0.26,0,0.47,0.09,0.65,0.28C128.51,264.49,128.6,264.71,128.6,264.98z"/> <path class="st0" d="M139.03,271.37h-5.78c-0.28,0-0.5-0.09-0.67-0.28c-0.17-0.19-0.25-0.41-0.25-0.68v-27.3
			c0-0.27,0.08-0.49,0.25-0.68c0.17-0.19,0.39-0.28,0.67-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v27.3
			c0,0.27-0.09,0.49-0.27,0.68C139.5,271.28,139.28,271.37,139.03,271.37z"/> <path class="st0" d="M165.72,256.3c0.41,0.24,0.82,0.53,1.23,0.88c0.41,0.35,0.79,0.77,1.14,1.28c0.35,0.51,0.63,1.09,0.85,1.76
			c0.22,0.67,0.33,1.43,0.33,2.28c0,1.73-0.26,3.16-0.79,4.3c-0.53,1.13-1.24,2.04-2.14,2.72c-0.9,0.68-1.93,1.16-3.1,1.44
			c-1.17,0.28-2.39,0.42-3.68,0.42h-12.2c-0.26,0-0.47-0.09-0.65-0.28c-0.18-0.19-0.27-0.41-0.27-0.68v-27.34
			c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h11.62c1.23,0,2.41,0.14,3.54,0.42c1.13,0.28,2.12,0.74,2.98,1.38
			c0.86,0.64,1.55,1.47,2.08,2.5c0.53,1.03,0.79,2.29,0.79,3.78c0,1.2-0.29,2.24-0.87,3.12c-0.58,0.88-1.2,1.57-1.87,2.08
			C165.18,255.73,165.21,256.04,165.72,256.3z M154.98,253.23h3.58c0.51,0,0.92-0.21,1.23-0.62c0.31-0.41,0.46-0.87,0.46-1.38
			c0-0.48-0.19-0.89-0.56-1.24c-0.37-0.35-0.73-0.52-1.06-0.52h-3.66c-0.26,0-0.47,0.09-0.65,0.28c-0.18,0.19-0.27,0.41-0.27,0.68
			v1.84c0,0.27,0.09,0.49,0.27,0.68C154.51,253.13,154.73,253.23,154.98,253.23z M159.03,259.82h-4.04c-0.26,0-0.47,0.09-0.65,0.28
			c-0.18,0.19-0.27,0.41-0.27,0.68v2.28c0,0.27,0.09,0.49,0.27,0.68c0.18,0.19,0.4,0.28,0.65,0.28h4.31c0.46,0,0.9-0.2,1.31-0.6
			s0.62-0.87,0.62-1.4c0-0.48-0.2-0.97-0.6-1.46C160.22,260.07,159.69,259.82,159.03,259.82z"/> <path class="st0" d="M181.38,271.37h-5.76c-0.26,0-0.48-0.09-0.66-0.28c-0.18-0.19-0.27-0.41-0.27-0.68v-27.34
			c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h11.97c1.49,0,2.86,0.26,4.12,0.78s2.33,1.25,3.21,2.18
			c0.89,0.93,1.58,2.04,2.08,3.32c0.5,1.28,0.75,2.69,0.75,4.24c0,0.85-0.1,1.7-0.29,2.54c-0.19,0.84-0.47,1.63-0.83,2.38
			c-0.36,0.75-0.78,1.42-1.27,2.02s-1.04,1.1-1.65,1.5c-0.21,0.16-0.34,0.35-0.4,0.58c-0.06,0.23-0.02,0.45,0.13,0.66
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.text.strip())
    return clothing_sections
Results: []
Search result: c0.97,1.33,2,2.7,3.08,4.12c1.08,1.41,2.04,2.71,2.89,3.88c0.15,0.21,0.19,0.45,0.12,0.7c-0.08,0.25-0.24,0.38-0.5,0.38h-7.16
			c-0.26,0-0.53-0.07-0.83-0.22c-0.3-0.15-0.52-0.33-0.67-0.54c-0.82-1.12-1.63-2.25-2.43-3.4c-0.8-1.15-1.6-2.3-2.39-3.48
			c-0.15-0.21-0.37-0.39-0.65-0.54c-0.28-0.15-0.55-0.22-0.8-0.22h-0.84c-0.26,0-0.47,0.09-0.65,0.28
			c-0.18,0.19-0.27,0.41-0.27,0.68v6.48c0,0.27-0.09,0.49-0.27,0.68C181.86,271.28,181.64,271.37,181.38,271.37z M183.23,255.62
			h4.06c0.31,0,0.63-0.06,0.96-0.18c0.33-0.12,0.64-0.31,0.92-0.56c0.28-0.25,0.51-0.57,0.69-0.94c0.18-0.37,0.27-0.81,0.27-1.32
			c0-0.27-0.05-0.58-0.13-0.94c-0.09-0.36-0.24-0.71-0.46-1.04c-0.22-0.33-0.51-0.61-0.88-0.84c-0.37-0.23-0.82-0.34-1.36-0.34
			h-4.06c-0.26,0-0.47,0.09-0.65,0.28c-0.18,0.19-0.27,0.41-0.27,0.68v4.24c0,0.27,0.09,0.49,0.27,0.68
			C182.76,255.53,182.97,255.62,183.23,255.62z"/> <path class="st0" d="M210.41,271.37h-5.78c-0.28,0-0.5-0.09-0.67-0.28c-0.17-0.19-0.25-0.41-0.25-0.68v-27.3
			c0-0.27,0.08-0.49,0.25-0.68c0.17-0.19,0.39-0.28,0.67-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28c0.18,0.19,0.27,0.41,0.27,0.68v27.3
			c0,0.27-0.09,0.49-0.27,0.68C210.88,271.28,210.66,271.37,210.41,271.37z"/> <path class="st0" d="M217.69,243.11c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28
			c0.18,0.19,0.27,0.41,0.27,0.68v16.19c0,1.04,0.16,1.9,0.48,2.58c0.32,0.68,0.72,1.21,1.2,1.6c0.48,0.39,0.99,0.66,1.53,0.82
			c0.54,0.16,1.03,0.24,1.47,0.24c0.44,0,0.93-0.08,1.47-0.24c0.54-0.16,1.04-0.43,1.51-0.82c0.46-0.39,0.86-0.92,1.18-1.6
			c0.32-0.68,0.48-1.54,0.48-2.58v-16.19c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28h5.78c0.26,0,0.47,0.09,0.65,0.28
			c0.18,0.19,0.27,0.41,0.27,0.68v16.19c0,1.89-0.29,3.61-0.86,5.16c-0.58,1.55-1.4,2.86-2.48,3.96c-1.08,1.09-2.37,1.94-3.88,2.54
			c-1.51,0.6-3.19,0.9-5.03,0.9c-1.84,0-3.52-0.3-5.03-0.9c-1.51-0.6-2.81-1.45-3.88-2.54c-1.08-1.09-1.91-2.41-2.5-3.96
			c-0.59-1.55-0.88-3.26-0.88-5.16V243.11z"/> <path class="st0" d="M280.24,243.11v27.3c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28h-5.78
			c-0.26,0-0.47-0.09-0.65-0.28c-0.18-0.19-0.27-0.41-0.27-0.68v-12.87c0-0.27-0.12-0.41-0.35-0.44c-0.23-0.03-0.42,0.07-0.58,0.28
			l-6.48,10.83c-0.13,0.21-0.33,0.32-0.62,0.32c-0.28,0-0.5-0.11-0.66-0.32l-6.48-10.83c-0.13-0.21-0.31-0.31-0.54-0.28
			c-0.23,0.03-0.35,0.17-0.35,0.44v12.87c0,0.27-0.09,0.49-0.27,0.68c-0.18,0.19-0.4,0.28-0.65,0.28h-5.78
			c-0.26,0-0.47-0.09-0.65-0.28c-0.18-0.19-0.27-0.41-0.27-0.68v-27.3c0-0.27,0.09-0.49,0.27-0.68c0.18-0.19,0.4-0.28,0.65-0.28
			h5.36c0.26,0,0.52,0.08,0.8,0.24c0.28,0.16,0.49,0.35,0.61,0.56l7.41,11.27c0.15,0.21,0.33,0.32,0.54,0.32
			c0.21,0,0.37-0.11,0.5-0.32l7.41-11.27c0.15-0.21,0.37-0.4,0.65-0.56c0.28-0.16,0.55-0.24,0.8-0.24h5.36
			c0.26,0,0.47,0.09,0.65,0.28C280.15,242.62,280.24,242.85,280.24,243.11z"/> </g> <path class="st0" d="M2.34,228.41v-10.96c0-0.28,0.09-0.5,0.28-0.67c0.19-0.16,0.42-0.25,0.68-0.25h275.97
		c0.27,0,0.5,0.08,0.68,0.25c0.19,0.17,0.28,0.39,0.28,0.67v10.96c0,0.25-0.09,0.47-0.28,0.65c-0.19,0.18-0.42,0.27-0.68,0.27H3.3
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-class'):
        clothing_sections.append(section.text)
    return clothing_sections
Results: []
Search result: c-0.27,0-0.49-0.09-0.68-0.27C2.43,228.87,2.34,228.66,2.34,228.41z"/> </g> </symbol><symbol viewBox="0 0 78.02603 37.95006" id="svg-icon-garden"><title>GucciGarden_Footer2</title><path class="cls-1" d="M64.6,24.8l-2-3.9A20.349,20.349,0,0,1,55,23.6V24l.8-.1a3.98815,3.98815,0,0,1,.3,2.1,3.75011,3.75011,0,0,1-.1,1.1c0,.1-.2.2-.4.4s-.4.3-.4.4a1.88165,1.88165,0,0,1,.9,1.9v.9a1.50386,1.50386,0,0,1-.4,1.1c-.2.1-.6.4-.6.5,1.9,1.2,3.3,2.1,4,2.6a26.218,26.218,0,0,0,2.5-2.2v4.4c0,.8.4,1.2,1.3,1.2.8,0,1.3-.4,1.3-1.1a.59871.59871,0,0,0-.6-.7h-.2a.52878.52878,0,0,0-.7.4c-.1.3-.2.5-.3.5a.26522.26522,0,0,1-.3-.3V32.4l1.3-1.1-.2-.6-1.1,1V26.5Zm-3.9,7.7-1.4-1V28a23.28681,23.28681,0,0,0,2.1-1.3l.1,5.3Zm-1.3-5.1V23l.3-.2A20.308,20.308,0,0,1,61.5,26Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M28.71252,31.5q-.6,0-.6-1.2a3.75014,3.75014,0,0,1,.1-1,1.39043,1.39043,0,0,1,1-1.2,2.16319,2.16319,0,0,1-1.1-1.2V25.4a2.20282,2.20282,0,0,1,.9-1.6,17.68787,17.68787,0,0,0-2.2-1.6,9.8,9.8,0,0,0-2.2-1.3,8.48617,8.48617,0,0,1-2.6,1.1,7.06655,7.06655,0,0,0-2.5,1.1,2.80846,2.80846,0,0,0-1.1,2.5,1.92173,1.92173,0,0,0,.4,1.2c.3.5.6.8,1,.8q.45,0,3-2.7l-.2-.2-.6.3c-.9-.3-1.3-.7-1.3-1.2a1.06062,1.06062,0,0,1,.9-.9l3,2v.6l.1,1.7a8.76937,8.76937,0,0,1-4.2,1.1l-2.5-.3-.1.5.6.2v3l-.7.3a37.09449,37.09449,0,0,1,3.2,3,40.51393,40.51393,0,0,0,3.6-3.1,4.103,4.103,0,0,1-.1,1.1l2.5,2.1c.5-.7,1-1.4,1.6-2.1a15.57782,15.57782,0,0,0,1.6-2l-.4-.4C29.41248,31.2,29.11249,31.5,28.71252,31.5Zm-4.3-.6c-.8.7-1.3,1.1-1.5,1.1-.1,0-.4-.2-.8-.7V28.5l2.3-.7a14.76387,14.76387,0,0,1,.1,2.1A3.40094,3.40094,0,0,1,24.41248,30.9Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M78.7,30.7l-.1-.1A10.14092,10.14092,0,0,1,77.1,32a.62183.62183,0,0,1-.6-.4c-.1-.1-.1-.2-.1-.4V28.6c.2-.3.4-.5.6-.8-.3-.2-.6-.5-.6-.8V25c.5-.5.9-.9,1.1-1.1a11.28108,11.28108,0,0,1-1.8-1.2c-.6-.5-1.1-.9-1.7-1.4a15.99029,15.99029,0,0,1-3.6,3.1v-.9L68,21.4q-1.8,2.25-3,3.6l.4.4q.9-.90005,1.2-.9c.4,0,.6.4.6,1.1v1.5a1.27223,1.27223,0,0,1-.7.9,1.14333,1.14333,0,0,1,.7.8v2.1a2.03051,2.03051,0,0,1-1.1,1.7L68.9,35c1.5-1.4,2.3-2.2,2.6-2.4a2.33614,2.33614,0,0,1-.7-.7,2.48614,2.48614,0,0,1-.1-.8V28.7a1.55482,1.55482,0,0,1,.6-.8,1.44575,1.44575,0,0,1-.7-1V25l1.5-1.1,1,1.1v2.1a1.555,1.555,0,0,1-.6.8,1.55482,1.55482,0,0,1,.6.8v3.8s.9.8,2.6,2.4a42.77749,42.77749,0,0,0,3.2-4Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M2.8,33.3l1.5-.8a7.326,7.326,0,0,0,2.3,1.6,5.83434,5.83434,0,0,0,2.6.6,6.80346,6.80346,0,0,0,2-.2A6.35583,6.35583,0,0,0,14.7,32a6.47014,6.47014,0,0,0,1.6-4,6.30765,6.30765,0,0,0-1.2-4,4.10138,4.10138,0,0,0-3.7-1.8.349.349,0,0,0-.1.2c0,.1,0,.2-.1.2q.75,0,1.2,1.2a3.08015,3.08015,0,0,1,.3,1.3v5.2a4.767,4.767,0,0,1-.4,2c-.4,1.1-.8,1.5-1.5,1.7a5.55316,5.55316,0,0,1-1.7.2,3.15785,3.15785,0,0,1-2.2-1.3,6.7241,6.7241,0,0,1-.7-1.1l4-1.9V25.5a2.62764,2.62764,0,0,1,.7-1.5,1.0573,1.0573,0,0,1-.6-.7,3.09211,3.09211,0,0,1-.2-.8V16.6l.8-.6q1.5,3.45,1.8,3.9a25.88232,25.88232,0,0,1,2.5-1.2q0-.15005-2.1-4.8L5.9,18.3v.6a8.33858,8.33858,0,0,1,1.2-.8v1.6a21.62914,21.62914,0,0,0,0,2.7c0,.9-.2,1.4-.8,1.4-.8,0-1.2-1-1.2-2.9a10.32307,10.32307,0,0,1,.4-3,6.597,6.597,0,0,1,1.2-2.7.30963.30963,0,0,0-.1-.2H6.4a5.84873,5.84873,0,0,0-2.9,2.9,10.73536,10.73536,0,0,0-1.4,3.9A4.98321,4.98321,0,0,1,1.8,23c0,.2-.4.4-.9.7a2.36136,2.36136,0,0,1,.8.9,3.596,3.596,0,0,1,.2,1.1,11.18642,11.18642,0,0,0,1.4,5.9c.2.3.3.5.5.8C2,33.4,1,34.2.9,34.9a2.15482,2.15482,0,0,0,.4,1.6,1.41984,1.41984,0,0,0,1.4.7,3.55151,3.55151,0,0,0,1.9-.8,4.16769,4.16769,0,0,1,1.8-.8.6012.6012,0,0,0-.1.4.63172.63172,0,0,0,.7.7.67515.67515,0,0,0,.6-.4A1.7259,1.7259,0,0,1,8,36c.2,0,.3.2.3.5,0,.7-.3,1-1,1a.90941.90941,0,0,1-.8-.4c0,.5.3.8.9.8.9,0,1.3-.5,1.3-1.5a2.11212,2.11212,0,0,0,1,.4c.2,0,.3-.1.4-.1.1-.1.2-.1.4-.1.1,0,.2.1.4.1a.60124.60124,0,0,0,.4.1,2.35261,2.35261,0,0,0,.8-.2c.3-.1.6-.1.8-.2a1.70193,1.70193,0,0,1,.7.1,1.70222,1.70222,0,0,0,.7.1,2.76935,2.76935,0,0,0,.9-.1v-.1c0-.1,0-.2-.1-.2l-.7.1c-.3,0-.5-.1-.8-.1-.1-.2-.3-.2-.6-.2a1.85336,1.85336,0,0,0-.7.2,1.94989,1.94989,0,0,1-.8.1.60149.60149,0,0,1-.4-.1c-.1,0-.2-.1-.4-.1-.1,0-.3.1-.4.1a.60124.60124,0,0,1-.4.1,3.50618,3.50618,0,0,1-1.4-.6,4.41917,4.41917,0,0,0-1.6-.6,6.22085,6.22085,0,0,0-2.6.9,2.35261,2.35261,0,0,0,.2-.8,1.48937,1.48937,0,0,0-.4-.9,1.2087,1.2087,0,0,0-1-.3.76386.76386,0,0,0-.5.2c-.2.2-.3.3-.3.4,0,.2.1.4.3.4q.15005,0,.3-.3c.1-.2.2-.3.4-.3a.7128.7128,0,0,1,.6.3.908.908,0,0,1,.3.7A1.24,1.24,0,0,1,3,36.7a.86434.86434,0,0,0,.3-.6.76047.76047,0,0,0-.6-.8H2.5a1.42131,1.42131,0,0,0-.6.2.51942.51942,0,0,1-.4-.2.44645.44645,0,0,1,0-.5A2.51326,2.51326,0,0,1,2.8,33.3ZM5,25.5a1.13545,1.13545,0,0,1,.3-.8,1.09991,1.09991,0,0,1,1-.6q.90005,0,.9,1.8v5L6,31.5a7.90231,7.90231,0,0,1-1.1-4.7A5.70351,5.70351,0,0,1,5,25.5Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1"
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M39.4,23a3.467,3.467,0,0,1-1.1-1.9c-.4.8-.7,1.3-.8,1.6a13.35927,13.35927,0,0,1-2,2.1l.1-1.1a3.83719,3.83719,0,0,1-2.2-2.6c-2,2.6-3,3.9-3,4,.1.1.1.2.2.4q.45007-.45.9-.9a.54427.54427,0,0,1,.5.3.8641.8641,0,0,1,.3.6V27a1.204,1.204,0,0,1-.7,1,1.326,1.326,0,0,1,.6,1v2.6a3.81872,3.81872,0,0,1-.9.9A6.35562,6.35562,0,0,1,34.8,35l3.1-3.4v5.6c0,.8.4,1.2,1.3,1.2.8,0,1.2-.4,1.2-1.1a.59871.59871,0,0,0-.6-.7h-.2c-.4,0-.6.2-.6.7a.3.3,0,1,1-.6,0V26.8c1-1.3,1.8-2,2.6-2.1v-.2A7.52,7.52,0,0,1,39.4,23Zm-1.6,8-1.2,1.2a7.63718,7.63718,0,0,1-1.1-.8V29a1.0999,1.0999,0,0,1,.6-1,.928.928,0,0,1-.7-.9V25.9l.9-1A15.93366,15.93366,0,0,1,37.8,27Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M46.8,27.7a.92864.92864,0,0,0-.11456.07837A.12193.12193,0,0,0,46.8,27.7Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M53.1,31.2c-.1,0-.3-.4-.7-1.1V28.5a.871.871,0,0,1,.6-.8c-.4,0-.7-.3-.6-.6V18.7a1.01955,1.01955,0,0,1,.5-.8c.2-.2.5-.4.7-.6l-3.8-3a23.95221,23.95221,0,0,0-2.2,2.1c-1.2,1.1-1.7,2-1.6,2.6a1.181,1.181,0,0,0,1.3,1.2.713.713,0,0,0,.6-.3.908.908,0,0,0,.3-.7.75839.75839,0,0,0-.2-.4c-.1-.1-.2-.2-.3-.2s-.2.1-.3.2a4.20625,4.20625,0,0,0,.2.5c0,.3-.1.4-.4.4a.68353.68353,0,0,1-.7-.7,1.38264,1.38264,0,0,1,.5-.9,4.51859,4.51859,0,0,0,.7-.7l1.2,1v5.3l.1.1a6.147,6.147,0,0,1-2-1.3,15.36979,15.36979,0,0,1-1.9-1.7,9.35719,9.35719,0,0,1-2.9,2.7l.7,1.1V27a5.54811,5.54811,0,0,1-.6.8,1.82824,1.82824,0,0,1,.6.8v2a1.25691,1.25691,0,0,1-.9,1.2,12.28829,12.28829,0,0,1,3.1,2.9,16.75112,16.75112,0,0,1,3.7-3.4,4.28207,4.28207,0,0,0,.6,2.2,12.8807,12.8807,0,0,0,1.7,1.6A12.91268,12.91268,0,0,1,54.5,31l-.5-.5C53.7,30.9,53.4,31.2,53.1,31.2ZM48.8,27a1.06758,1.06758,0,0,1-.7.9,1.52474,1.52474,0,0,1,.7,1.2,7.52058,7.52058,0,0,0,0,1.5l-1.7,1.2a3.84923,3.84923,0,0,1-.9-1.1V28.6a.76386.76386,0,0,1,.2-.5.78316.78316,0,0,1,.2854-.32159c-.099.00183-.21588-.10883-.2854-.17841a.76359.76359,0,0,1-.2-.5V24.7l1-.9,1.6.9Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M28.5954.799H26.44734a1.0289,1.0289,0,0,1,.43924.84238h0V6.32255A2.35265,2.35265,0,0,0,28.24641,8.236h0a4.6391,4.6391,0,0,0,4.06147,0h0a2.31654,2.31654,0,0,0,1.34781-1.92544h0V1.62328A.9928.9928,0,0,1,34.09493.799h-1.2395a.9928.9928,0,0,1,.43924.82433V6.3406a1.92544,1.92544,0,0,1-.68594,1.28764h0a3.32138,3.32138,0,0,1-3.1529.32492,1.99764,1.99764,0,0,1-1.2756-1.63662h0V1.64735h0A1.0289,1.0289,0,0,1,28.61947.805" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M38.42115,4.60771A4.08554,4.08554,0,0,0,41.68235,8.609a7.49115,7.49115,0,0,0,1.08306.11432,4.92792,4.92792,0,0,0,2.94833-.9567s.50542-.31288.50542-.63178l.19856-1.51026A4.33224,4.33224,0,0,1,44.32381,7.905a3.71249,3.71249,0,0,1-1.63662.42119h0a2.4068,2.4068,0,0,1-2.142-1.28764L40.497,6.96035a4.8136,4.8136,0,0,1,0-4.69927l.04212-.07822A2.479,2.479,0,0,1,42.68118.84709h0a3.70045,3.70045,0,0,1,1.63662.40916,4.71733,4.71733,0,0,1,1.90137,2.2323v-1.408c0-.3189-.48737-.66789-.48737-.66789A5.24682,5.24682,0,0,0,42.76541.45a5.14454,5.14454,0,0,0-1.08306.11432,4.13367,4.13367,0,0,0-3.26121,4.04342" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M15.24972,4.61974a4.75943,4.75943,0,0,1,.6017-2.35264l.04212-.07822A2.485,2.485,0,0,1,18.0416.85912h0a3.71248,3.71248,0,0,1,1.63662.40916,4.72334,4.72334,0,0,1,1.90137,2.25035v-1.426c0-.3189-.48738-.66789-.48738-.66789A5.00012,5.00012,0,0,0,18.13787.48005a5.37317,5.37317,0,0,0-1.08306.11432,4.12766,4.12766,0,0,0,.3911,8.135s.43322.04212.71.04212a4.964,4.964,0,0,0,3.16494-1.14323l.11432-.12636a.80628.80628,0,0,0,.16246-.48738V5.81111a1.053,1.053,0,0,1,.43924-.85441H19.82865a1.053,1.053,0,0,1,.43924.85441V6.91823a.79424.79424,0,0,1-.23466.5656,4.71127,4.71127,0,0,1-.87246.55356,2.3707,2.3707,0,0,1-1.12518.2828,2.4068,2.4068,0,0,1-2.01569-1.10111A4.88579,4.88579,0,0,1,15.24972,4.61974Z" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M51.27344,4.60771A4.08554,4.08554,0,0,0,54.53464,8.609a7.49115,7.49115,0,0,0,1.08306.11432,4.92792,4.92792,0,0,0,2.94833-.9567s.50542-.31288.50542-.63178L59.27,5.62458A4.33224,4.33224,0,0,1,57.1761,7.905a3.71249,3.71249,0,0,1-1.63662.42119h0a2.4068,2.4068,0,0,1-2.14806-1.28764l-.04814-.07822a4.8136,4.8136,0,0,1,0-4.69927l.04212-.07822A2.479,2.479,0,0,1,55.53347.85311h0a3.70045,3.70045,0,0,1,1.63662.40916,4.71731,4.71731,0,0,1,1.90137,2.22629v-1.408c0-.3189-.48737-.66789-.48737-.66789A5.24681,5.24681,0,0,0,55.6177.45a5.14454,5.14454,0,0,0-1.08306.11432,4.13367,4.13367,0,0,0-3.26121,4.04342" transform="translate(-0.874 -0.44996)"/><path class="cls-1" d="M65.72023.799H63.57217a1.01687,1.01687,0,0,1,.43924.83636V7.905a1.01688,1.01688,0,0,1-.41517.81831h2.09993A1.01688,1.01688,0,0,1,65.281,7.905V1.63531A1.01086,1.01086,0,0,1,65.72023.799" transform="translate(-0.874 -0.44996)"/></symbol><symbol viewBox="0 0 183 42" id="svg-icon-gift-exchange"><title>gift-exchange</title> <g fill="#CACACA" stroke="#CACACA" stroke-miterlimit="10"> <path
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_tags = soup.find_all(class_='clothing-section')
    for tag in clothing_tags:
        clothing_sections.append(tag.text.strip())
    return clothing_sections
Results: []
Search result: <g fill="#CACACA" stroke="#CACACA" stroke-miterlimit="10"> <path d="M106.8,27.2l6.4,6.4c0.4,0.4,0.4,1,0,1.4l-6.4,6.4c-0.4,0.4-1,0.4-1.4,0s-0.4-1,0-1.4l4.7-4.7H79.8v-2h30.3
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(['div', 'section'], class_='clothing'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: l-4.7-4.7c-0.4-0.4-0.4-1,0-1.4C105.8,26.8,106.4,26.8,106.8,27.2z"/> <path d="M85.5,16.1l-6.4-6.4c-0.4-0.4-0.4-1,0-1.4L85.5,2c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4L82.2,8h30.3v2H82.2l4.7,4.7
		c0.4,0.4,0.4,1,0,1.4C86.5,16.5,85.8,16.5,85.5,16.1z"/> </g> <path stroke="#000000" stroke-miterlimit="10" d="M53.9,27.5c0-0.9-0.2-1.8-0.7-2.6l0,0l0,0c-0.8-1.6-2.6-3.6-6-4c-0.4,0-0.8-0.1-1.1-0.1c-0.8,0-1.8-0.1-2.9-0.3
	c-0.8-0.1-1.6-0.3-2.3-0.5l0.2-0.7L40,19.1l-0.1,0.7c-0.5-0.2-1.1-0.3-1.6-0.5s-1-0.4-1.5-0.6L37,18l-1.1-0.3l-0.2,0.6
	c-1-0.4-2-0.9-3.1-1.4l0.3-0.7l-1-0.4l-0.3,0.6c-1-0.6-2.1-1.2-3.1-1.9l0.4-0.6L28,13.2l-0.4,0.6c-0.7-0.5-1.3-1.1-1.8-1.6
	c-0.7-0.7-1.6-1.1-2.6-1.1s-1.9,0.4-2.6,1.1c-1.5,1.6-4.2,3.5-8.5,3.5c-2.9,0-6.1-1.4-7.7-2.3C3.8,13,3.1,13,2.5,13.2
	s-1,0.7-1.2,1.3c-0.1,0.3-0.2,0.6-0.3,0.8c-0.3,0.9-0.6,2.2-0.7,3.9c-0.2,2.3-0.3,5-0.3,7.5s0.2,4.5,0.5,5.9L0.6,33H41
	c3.9,0,7.9-0.7,11.9-2l1.1-0.4L53.9,27.5z M35.3,31.9h-34l-0.2-1.8h34.2V31.9z M35.3,29H1.1v-1.7h7.5h9.7h11.3h5.8L35.3,29z
	 M19.2,26.1l5.5-9.7c2,1.6,4.5,3.2,7.4,4.5l-2.9,5.2L19.2,26.1L19.2,26.1z M17.8,26.1H1.1c0-2.1,0.1-4.2,0.3-6.1l0.8-4.3
	c0.1-0.2,0.2-0.5,0.3-0.9c0.1-0.3,0.3-0.5,0.6-0.6s0.6-0.1,0.8,0c2.1,1.1,5.2,2.4,8.3,2.4c4.7,0,7.7-2.1,9.4-3.9
	c0.5-0.5,1.1-0.8,1.7-0.8l0,0c0.7,0,1.3,0.3,1.8,0.8s1.2,1.2,2,1.8l-0.4,0.6l0.9,0.6l0.4-0.6c0.9,0.6,1.9,1.3,3.2,2L30.8,18l1,0.4
	l0.3-0.6c0.9,0.5,2,1,3.2,1.4L35.1,20l1.1,0.3l0.2-0.7c0.5,0.2,1,0.4,1.5,0.6c0.6,0.2,1.2,0.4,1.7,0.6l-0.2,0.8l1.1,0.2l0.1-0.7
	c0.8,0.2,1.6,0.4,2.4,0.5c1.1,0.2,2.2,0.3,3,0.3c0.3,0,0.7,0,1,0.1c2.6,0.3,4,1.7,4.8,2.9c-1.8,0.5-3.9,0.9-6.1,1.1
	c-0.2-0.8-0.7-1.5-1.5-2c-0.7-0.5-1.4-0.6-1.5-0.6l0,0c-0.6-0.1-1.3-0.2-1.9-0.4l-0.2,1c0.7,0.2,1.3,0.3,2,0.4
	c0.1,0,1.7,0.4,2.1,1.7c-0.5,0-0.9,0.1-1.2,0.1c-0.5,0-1,0-1.5,0h-6.1h-5.4l2.7-4.7c1.1,0.5,2.4,1,3.7,1.5c0.7,0.2,3.1,0.9,3.8,1.1
	l0.2-1c-0.7-0.2-3-0.9-3.6-1.1c-1.5-0.6-2.9-1.1-4.1-1.6c-3.4-1.5-6.1-3.2-8.2-5c-0.5-0.4-2.7-2.5-3.1-2.9L21,13.2
	c0.3,0.3,2.5,2.2,2.9,2.5L17.8,26.1z M52.5,29.9c-3.9,1.3-7.7,2-11.5,2h-4.6v-2.4v-2.3H42c0.5,0,0.9,0,1.5,0s1.2-0.1,1.9-0.1
	c2.5-0.2,5-0.7,7-1.3c0.2,0.5,0.3,1.1,0.4,1.7l0.1,2.2L52.5,29.9z"/> <path d="M29.5,19l-4,7.5H22l5-9L29.5,19z"/> <path stroke="#000000" stroke-miterlimit="10" d="M150.3,0.7C150.2,0.6,150.2,0.6,150.3,0.7C150.2,0.6,150.2,0.6,150.3,0.7c0,0,0.1,0,0.3,0.1
	c0.4,0.1,0.9,0.2,1.6,0.3c1.4,0.1,3.4,0.2,5.5,0.2h0.3c2.2,0,4.1-0.1,5.4-0.2c0.7-0.1,1.2-0.1,1.6-0.2c0.1,0,0.1,0,0.2-0.1l0.1-0.1
	l1.1-0.1l16.1,10.2l-0.3,0.6l-6.6,9.1l-0.6-0.4l-3.6-2.6l-0.1,24h-0.7L158,41.4l0,0l-12.8,0.1l0,0h-0.8v-24l-4.1,2.8l-0.4-0.4
	l-6.7-9l0.7-0.5l16-10.1 M165.3,2c-0.4,0.1-1,0.2-1.7,0.2c-1.4,0.1-3.4,0.2-5.6,0.2h-0.3c-2.2,0-4.2-0.1-5.7-0.2
	c-0.6-0.1-1.2-0.1-1.6-0.2c0.1,2,0.8,3.6,1.8,4.9c1.2,1.4,3,2.2,5.6,2.2l0,0l0,0c2.6,0,4.4-0.8,5.6-2.2C164.5,5.6,165.1,4,165.3,2z
	 M149.2,2.1l-14.4,9.1l5.6,7.5l4.1-2.8l1-0.5v24.9l12.4-0.1l0,0l12.2,0.2l0.1-25.1l1,0.7l4,2.9l5.6-7.6L166.5,2
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section', class_='clothing'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: c-0.2,2.2-0.9,4.1-2.1,5.6c-1.5,1.7-3.7,2.6-6.5,2.6l0,0c-2.8,0-5-1-6.5-2.6C150.1,6.2,149.4,4.2,149.2,2.1z"/> </symbol><symbol viewBox="0 0 47 30" id="svg-icon-gift-group"><title>gift-group</title> <g fill="currentColor"> <path fill-rule="evenodd" clip-rule="evenodd" d="M18.7196 7.26383C18.7196 4.34117 21.0888 1.97187 24.0115 1.97187C26.9342 1.97187 29.3035 4.34117 29.3035 7.26383C29.3035 10.1865 26.9342 12.5558 24.0115 12.5558C21.0888 12.5558 18.7196 10.1865 18.7196 7.26383ZM24.0115 0.171875C20.0947 0.171875 16.9196 3.34705 16.9196 7.26383C16.9196 11.1806 20.0947 14.3558 24.0115 14.3558C27.9283 14.3558 31.1035 11.1806 31.1035 7.26383C31.1035 3.34705 27.9283 0.171875 24.0115 0.171875ZM17.8195 18.7474C15.9386 18.7474 14.1347 19.4946 12.8047 20.8246C11.4747 22.1546 10.7275 23.9585 10.7275 25.8394V28.9353C10.7275 29.4324 11.1305 29.8353 11.6275 29.8353C12.1246 29.8353 12.5275 29.4324 12.5275 28.9353V25.8394C12.5275 24.4358 13.0851 23.0898 14.0775 22.0974C15.07 21.1049 16.416 20.5474 17.8195 20.5474H30.2034C31.6069 20.5474 32.953 21.1049 33.9454 22.0974C34.9378 23.0898 35.4954 24.4358 35.4954 25.8394V28.9353C35.4954 29.4324 35.8983 29.8353 36.3954 29.8353C36.8924 29.8353 37.2954 29.4324 37.2954 28.9353V25.8394C37.2954 23.9585 36.5482 22.1546 35.2182 20.8246C33.8882 19.4946 32.0843 18.7474 30.2034 18.7474H17.8195ZM40.1683 19.6233C40.2926 19.1421 40.7835 18.8527 41.2648 18.9769C42.7862 19.3698 44.1341 20.2568 45.0968 21.4987C46.0595 22.7406 46.5825 24.267 46.5837 25.8384L46.5837 25.8391L46.5837 28.935C46.5837 29.4321 46.1808 29.835 45.6837 29.835C45.1867 29.835 44.7837 29.4321 44.7837 28.935V25.8397V25.8394C44.7828 24.667 44.3925 23.5281 43.6742 22.6015C42.9558 21.6748 41.95 21.0129 40.8148 20.7198C40.3335 20.5955 40.0441 20.1046 40.1683 19.6233ZM35.071 0.400941C34.5894 0.277652 34.0991 0.568057 33.9759 1.04958C33.8526 1.5311 34.143 2.0214 34.6245 2.14469C35.7628 2.43615 36.7718 3.09817 37.4923 4.02639C38.2128 4.95461 38.6038 6.09624 38.6038 7.27128C38.6038 8.44631 38.2128 9.58794 37.4923 10.5162C36.7718 11.4444 35.7628 12.1064 34.6245 12.3979C34.143 12.5211 33.8526 13.0114 33.9759 13.493C34.0991 13.9745 34.5894 14.2649 35.071 14.1416C36.5965 13.751 37.9486 12.8638 38.9142 11.6199C39.8797 10.3759 40.4038 8.84599 40.4038 7.27128C40.4038 5.69656 39.8797 4.16663 38.9142 2.92268C37.9486 1.67874 36.5965 0.791533 35.071 0.400941Z"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.51527 19.6225C6.39101 19.1412 5.90012 18.8518 5.41885 18.9761C3.8974 19.3689 2.54949 20.2559 1.58677 21.4978C0.624055 22.7397 0.101053 24.2662 0.0998812 25.8375V28.9342C0.0998812 29.4312 0.502825 29.8342 0.999881 29.8342C1.49694 29.8342 1.89988 29.4312 1.89988 28.9342V25.8389C1.89988 25.8388 1.89988 25.839 1.89988 25.8389C1.90082 24.6665 2.29108 23.5272 3.00939 22.6006C3.72776 21.6739 4.73355 21.012 5.86885 20.7189C6.35012 20.5946 6.63953 20.1038 6.51527 19.6225Z"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M12.7077 1.04905C12.5845 0.567528 12.0942 0.277123 11.6126 0.400412C10.0871 0.791004 8.735 1.67821 7.76943 2.92215C6.80386 4.1661 6.27976 5.69603 6.27976 7.27075C6.27976 8.84546 6.80386 10.3754 7.76943 11.6193C8.735 12.8633 10.0871 13.7505 11.6126 14.1411C12.0942 14.2644 12.5845 13.974 12.7077 13.4924C12.831 13.0109 12.5406 12.5206 12.0591 12.3973C10.9208 12.1059 9.91184 11.4439 9.19134 10.5156C8.47084 9.58741 8.07976 8.44579 8.07976 7.27075C8.07976 6.09571 8.47084 4.95409 9.19134 4.02586C9.91184 3.09764 10.9208 2.43562 12.0591 2.14416C12.5406 2.02087 12.831 1.53057 12.7077 1.04905Z"/> </g> </symbol><symbol viewBox="0 0 28 28" id="svg-icon-gift-package"><title>gift-package</title> <path fill-rule="evenodd" clip-rule="evenodd" d="M7.24081 4.39925C7.24081 2.56314 7.92647 1.62305 9.74634 1.62305C11.4668 1.62305 12.5296 2.43569 12.6792 4.13196V7.66494L9.74634 7.62305C8.21022 7.34083 7.24081 6.02997 7.24081 4.39925ZM6.81192 7.66494C5.92428 6.85943 5.36696 5.69405 5.36696 4.39925C5.36696 1.97224 7.32506 0 9.74634 0C11.4024 0 12.8417 0.922579 13.5861 2.28224C14.3305 0.922579 15.7699 0 17.4259 0C19.8472 0 21.8053 1.97224 21.8053 4.39925C21.8053 5.69405 21.248 6.85943 20.3603 7.66494H25.8775H27.1729V8.96028V13.4949V14.7902H25.8775H24.81V14.899V26.5588V27.8542H23.5147H3.65817H2.36283V26.5588V14.899V14.7902H1.29528H-6.48499e-05V13.4949V8.96028V7.66494H1.29528H6.81192ZM17.6458 7.62305C19.1819 7.34083 20.1279 6.02997 20.1279 4.39925C20.1279 2.56314 19.2458 1.62305 17.4259 1.62305C15.606 1.62305 14.6729 2.29586 14.6729 4.13196V7.62305H17.6458ZM12.7321 9.12305H1.49994V13.3343H12.6792L12.7321 9.12305ZM14.6729 13.3343V9.12305H20.1729H25.6729V13.3343H14.6729ZM12.7321 14.899H4V26.2983H12.7321V14.899ZM14.5045 26.2983L14.6729 14.899H23.1883V26.2983H14.5045Z" fill="#1B1B1B"/> </symbol><symbol viewBox="0 0 27 30" id="svg-icon-gift-solo"><title>gift-solo</title> <g fill="currentColor"> <path fill-rule="evenodd" clip-rule="evenodd" d="M2.17716 20.752C3.50716 19.422 5.31103 18.6748 7.19193 18.6748H19.5758C21.4568 18.6748 23.2606 19.422 24.5906
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('symbol', id=lambda x: x and 'clothing' in x):
        clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: 19.422 5.31103 18.6748 7.19193 18.6748H19.5758C21.4568 18.6748 23.2606 19.422 24.5906 20.752C25.9206 22.082 26.6678 23.8859 26.6678 25.7668V28.8627C26.6678 29.3598 26.2649 29.7627 25.7678 29.7627C25.2708 29.7627 24.8678 29.3598 24.8678 28.8627V25.7668C24.8678 24.3632 24.3103 23.0172 23.3178 22.0248C22.3254 21.0323 20.9794 20.4748 19.5758 20.4748H7.19193C5.78842 20.4748 4.44239 21.0323 3.44995 22.0248C2.45752 23.0172 1.89998 24.3632 1.89998 25.7668V28.8627C1.89998 29.3598 1.49703 29.7627 0.999976 29.7627C0.502919 29.7627 0.0999756 29.3598 0.0999756 28.8627V25.7668C0.0999756 23.8859 0.847162 22.082 2.17716 20.752Z"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M13.384 1.89961C10.4613 1.89961 8.09199 4.2689 8.09199 7.19157C8.09199 10.1142 10.4613 12.4835 13.384 12.4835C16.3066 12.4835 18.6759 10.1142 18.6759 7.19157C18.6759 4.2689 16.3066 1.89961 13.384 1.89961ZM6.29199 7.19157C6.29199 3.27479 9.46717 0.0996094 13.384 0.0996094C17.3007 0.0996094 20.4759 3.27479 20.4759 7.19157C20.4759 11.1083 17.3007 14.2835 13.384 14.2835C9.46717 14.2835 6.29199 11.1083 6.29199 7.19157Z"/> </g> </symbol><symbol viewBox="0 0 44 44" id="svg-icon-gucci-app-hover"><title>gucci-app-hover</title><desc>Created with Sketch.</desc> <!-- Generator: Sketch 51.3 (57544) - http://www.bohemiancoding.com/sketch -->   <g id="gucci-app-hover-Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="gucci-app-hover-HOVER2_State_GucciAppMobile" fill-rule="nonzero"> <path d="M9.91176471,1 L34.0882353,1 C39.010067,1 43,4.98993296 43,9.91176471 L43,34.0882353 C43,39.010067 39.010067,43 34.0882353,43 L9.91176471,43 C4.98993296,43 1,39.010067 1,34.0882353 L1,9.91176471 C1,4.98993296 4.98993296,1 9.91176471,1 Z" id="gucci-app-hover-Path" fill="#FFFFFF"/> <path d="M9.33613445,2.40336134 C5.50726959,2.40336134 2.40336134,5.50726959 2.40336134,9.33613445 L2.40336134,34.6638655 C2.40336134,38.4927304 5.50726959,41.5966387 9.33613445,41.5966387 L34.6638655,41.5966387 C38.4927304,41.5966387 41.5966387,38.4927304 41.5966387,34.6638655 L41.5966387,9.33613445 C41.5966387,5.50726959 38.4927304,2.40336134 34.6638655,2.40336134 L9.33613445,2.40336134 Z M9.33613445,0 L34.6638655,0 C39.8200702,-6.5680421e-16 44,4.17992977 44,9.33613445 L44,34.6638655 C44,39.8200702 39.8200702,44 34.6638655,44 L9.33613445,44 C4.17992977,44 5.25443368e-15,39.8200702 5.25443368e-15,34.6638655 L0,9.33613445 C0,4.17992977 4.17992977,4.59762947e-15 9.33613445,0 Z" id="gucci-app-hover-MouseOver" fill="#4B4B4B"/> <path d="M21,22.5124501 C21,23.7102986 21.8730668,24.6927911 23.039638,24.9306123 C23.039638,24.9306123 23.4342995,25.0001105 23.7162332,24.9999999 C24.4103563,24.9994465 25.0403254,24.7900665 25.5596288,24.4208848 C25.5596288,24.4208848 25.8754726,24.2320887 25.8768473,24.0389766 L26,23.1279743 C25.6419979,23.9871849 25.0392943,24.3094442 24.6895406,24.504991 C24.3964944,24.6519554 24.0190171,24.7577521 23.6655974,24.7577521 L23.6655974,24.7570881 C23.1247566,24.7570881 22.5728033,24.4582899 22.326727,23.9806556 L22.2962539,23.9328479 C22.0504067,23.5134238 21.9101844,23.0287069 21.9101844,22.5124501 C21.9101844,21.9960827 22.0504067,21.5112551 22.2962539,21.091831 L22.3239775,21.0443553 C22.5699393,20.566721 23.1247566,20.240035 23.6655974,20.240035 L23.6655974,20.2392604 C24.0190171,20.2392604 24.3964944,20.3396344 24.6895406,20.4867095 C25.2212166,20.8036568 25.6402795,21.2792992 25.8768473,21.8466836 L25.8768473,20.9857024 C25.8754726,20.7927009 25.5710849,20.5816609 25.5710849,20.5816609 C25.051896,20.2125899 24.4103563,20.0005539 23.7162332,20.0000005 C23.4342995,19.9997792 23.039638,20.0692774 23.039638,20.0692774 C21.8730668,20.3069879 21,21.3142696 21,22.5124501" id="gucci-app-hover-Fill-4" fill="#231F20"/> <path d="M28,22.5123395 C28,23.7104093 28.8730468,24.6927911 30.0397058,24.9308336 C30.0397058,24.9308336 30.4343582,25.0001105 30.7160565,24.9999999 C31.4103927,24.9994465 32.0404619,24.7902878 32.5595244,24.4209955 C32.5595244,24.4209955 32.8754754,24.231978 32.8765064,24.0389766 L33,23.1281956 C32.6418916,23.9874062 32.0394309,24.3093335 31.6891124,24.504991 C31.3965312,24.6518447 31.0188333,24.7577521 30.6657655,24.7577521 L30.6657655,24.7570881 C30.1248224,24.7570881 29.5726527,24.4581793 29.3264675,23.9806556 L29.2959951,23.9329586 C29.0503826,23.5134238 28.9101636,23.0289282 28.9101636,22.5123395 C28.9101636,21.995972 29.0503826,21.5112551 29.2959951,21.0920524 L29.3237181,21.0443553 C29.5697888,20.566721 30.1248224,20.2401457 30.6657655,20.2401457 L30.6657655,20.2394817 C31.0188333,20.2394817 31.3965312,20.3395237 31.6891124,20.4865988 C32.2211199,20.8036568 32.6401732,21.2792992 32.8765064,21.846905 L32.8765064,20.9857024 C32.8754754,20.7929222 32.5709802,20.5816609 32.5709802,20.5816609 C32.0518031,20.2124792 31.4103927,20.0004432 30.7160565,20.0000005 C30.4343582,19.9997792 30.0397058,20.0692774 30.0397058,20.0692774 C28.8730468,20.3070986 28,21.3142696 28,22.5123395" id="gucci-app-hover-Fill-6" fill="#231F20"/> <path d="M36,20
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section', class_='clothing'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: 28,21.3142696 28,22.5123395" id="gucci-app-hover-Fill-6" fill="#231F20"/> <path d="M36,20 L35,20 C35.1229522,20.1163086 35.203157,20.3081139 35.203157,20.5266261 L35.203157,24.4819294 C35.203157,24.6943141 35.1273891,24.8827664 35.0104949,25 L35.9895904,25 C35.8726962,24.8827664 35.7967577,24.6943141 35.7967577,24.4819294 L35.7967577,20.5266261 C35.7967577,20.3081139 35.8770478,20.1163086 36,20" id="gucci-app-hover-Fill-8" fill="#231F20"/> <path d="M15.4013775,20 L14,20 C14.1723025,20.1163167 14.2848192,20.313107 14.2848192,20.5316344 L14.2841018,20.5332532 L14.2841018,23.4897327 C14.3318108,24.0291139 14.6821552,24.4876746 15.1703654,24.6988021 L15.1753874,24.7013459 C15.5741582,24.8895801 16.0176487,25 16.4911517,25 C16.9715898,25 17.4252439,24.9010267 17.827841,24.7075895 L17.8359719,24.704352 C18.3235843,24.4891777 18.6716568,24.0303857 18.7154199,23.4889233 L18.7151808,23.4885764 L18.7151808,20.5189159 C18.7151808,20.3002729 18.8278171,20.1164323 19,20 L18.181653,20 C18.354075,20.1164323 18.4665917,20.3002729 18.4665917,20.5189159 L18.4665917,23.4885764 L18.465396,23.4984044 C18.431079,23.8250393 18.2666683,24.1138655 18.0191553,24.3126214 L18.0079156,24.3230275 C17.7317056,24.5297614 17.245528,24.6872398 16.7868519,24.6872398 C16.5013153,24.6872398 16.2282141,24.6291971 15.9763966,24.5363519 L15.95033,24.5269864 C15.5000239,24.3749422 15.1676153,23.9667931 15.1159604,23.492392 L15.1157213,23.4858015 L15.1157213,20.5332532 L15.1146451,20.5316344 C15.1146451,20.313107 15.229075,20.1163167 15.4013775,20" id="gucci-app-hover-Fill-11" fill="#231F20"/> <path d="M7.29266667,23.9675494 C7.04244444,23.569194 6.88266667,23.0296648 6.88266667,22.5056989 C6.88266667,21.9906736 7.01866667,21.5072166 7.257,21.0887723 L7.28388889,21.04142 C7.52255556,20.5650272 8.061,20.2393007 8.58544444,20.2393007 L8.58544444,20.2386385 C8.928,20.2386385 9.29433333,20.3386412 9.57833333,20.485334 C10.0942222,20.8014575 10.5004444,21.275974 10.7298889,21.8418836 L10.7298889,20.9830299 C10.7287778,20.7905301 10.4334444,20.580149 10.4334444,20.580149 C9.93,20.2120373 9.30777778,20.000442 8.63444444,20.0000005 C8.36122222,19.9997798 7.97833333,20.0690974 7.97833333,20.0690974 C6.84688889,20.30619 6,21.3108535 6,22.5056989 C6,23.7811204 6.96877778,24.8315909 8.21511111,24.9709988 C8.21511111,24.9709988 8.47277778,25.0094104 8.64433333,24.9978207 C9.37344444,24.9978207 10.0423333,24.742626 10.5658889,24.3174487 L10.6344444,24.2395216 C10.6966667,24.157952 10.7345556,24.0559625 10.7345556,23.9455841 L10.7345556,23.2318779 C10.7345556,23.0205034 10.8398889,22.8328602 11,22.7177356 L9.65988889,22.7177356 C9.82044444,22.8329706 9.92511111,23.0200619 9.92511111,23.2318779 L9.93433333,23.899446 C9.93433333,24.0323415 9.88022222,24.1526539 9.79277778,24.2398527 C9.683,24.3609378 9.263,24.5729745 9.263,24.5729745 C9.05977778,24.6815868 8.82733333,24.7430675 8.58055556,24.7430675 C8.022,24.7430675 7.53322222,24.4295931 7.29244444,23.9671079 L7.29266667,23.9675494" id="gucci-app-hover-Fill-1" fill="#231F20"/> </g> </g> </symbol><symbol viewBox="0 0 34 34" id="svg-icon-gucci-app"><title>gucci-app</title><desc>Created with Sketch.</desc> <!-- Generator: Sketch 51.3 (57544) - http://www.bohemiancoding.com/sketch -->   <g id="gucci-app-Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="gucci-app-gucci-app" fill="#E5DFD9" fill-rule="nonzero"> <path d="M7.21428571,0 L26.7857143,0 C30.7700543,-5.07530526e-16 34,3.22994573 34,7.21428571 L34,26.7857143 C34,30.7700543 30.7700543,34 26.7857143,34 L7.21428571,34 C3.22994573,34 4.0602442e-15,30.7700543 4.0602442e-15,26.7857143 L0,7.21428571 C0,3.22994573 3.22994573,3.55271368e-15 7.21428571,0 Z M7.21428571,1.85714286 C4.25561741,1.85714286 1.85714286,4.25561741 1.85714286,7.21428571 L1.85714286,26.7857143 C1.85714286,29.7443826 4.25561741,32.1428571 7.21428571,32.1428571 L26.7857143,32.1428571 C29.7443826,32.1428571 32.1428571,29.7443826 32.1428571,26.7857143 L32.1428571,7.21428571 C32.1428571,4.25561741 29.7443826,1.85714286 26.7857143,1.85714286 L7.21428571,1.85714286 Z" id="gucci-app-MouseOver"/> <path d="M17.3469388,17.3573054 C17.3469388,18.3546976 18.0739005,19.172773 19.0452496,19.3707956 C19.0452496,19.3707956 19.3738657,19.4286635 19.6086187,19.4285713 C20.1865824,19.4281106 20.711128,19.2537697 21.1435277,18.9463694 C21.1435277,18.9463694 21.4065159,18.7891677 21.4076606,18.6283723 L21.5102041,17.8698235 C21.2121126,18.5852478 20.7102695,18.853578 20.4190461,19.0164006 C20.1750403,19.138771 19.8607326,19.2268629 19.5664566,19.2268629 L19.5664566,19.2263101 C19.1161238,19.2263101 18.6565383,18.9775149 18.4516421,18.5798112 L18.4262685,18.540004 C18.2215631,18.1907692 18.1048066,17.7871682 18.1048066,17.3573054 C18.1048066,16.9273505 18.2215631,16.5236573 18.4262685,16.1744226 L18.4493527,16.1348918 C18.6541535,15.7371881 19.1161238,15.465172 19.5664566,15.465172 L19.5664566,15.464527 C19.8607326,15.464527 20.1750403,15.5481037 20.4190461,15.6705663 C20.8617477,15.9344734
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for path in soup.find_all('path', id=lambda x: x and 'gucci-app-hover-Fill' in x):
        clothing_sections.append(path)
    return clothing_sections
Results: [<path d="M36,20 L35,20 C35.1229522,20.1163086 35.203157,20.3081139 35.203157,20.5266261 L35.203157,24.4819294 C35.203157,24.6943141 35.1273891,24.8827664 35.0104949,25 L35.9895904,25 C35.8726962,24.8827664 35.7967577,24.6943141 35.7967577,24.4819294 L35.7967577,20.5266261 C35.7967577,20.3081139 35.8770478,20.1163086 36,20" fill="#231F20" id="gucci-app-hover-Fill-8"></path>, <path d="M15.4013775,20 L14,20 C14.1723025,20.1163167 14.2848192,20.313107 14.2848192,20.5316344 L14.2841018,20.5332532 L14.2841018,23.4897327 C14.3318108,24.0291139 14.6821552,24.4876746 15.1703654,24.6988021 L15.1753874,24.7013459 C15.5741582,24.8895801 16.0176487,25 16.4911517,25 C16.9715898,25 17.4252439,24.9010267 17.827841,24.7075895 L17.8359719,24.704352 C18.3235843,24.4891777 18.6716568,24.0303857 18.7154199,23.4889233 L18.7151808,23.4885764 L18.7151808,20.5189159 C18.7151808,20.3002729 18.8278171,20.1164323 19,20 L18.181653,20 C18.354075,20.1164323 18.4665917,20.3002729 18.4665917,20.5189159 L18.4665917,23.4885764 L18.465396,23.4984044 C18.431079,23.8250393 18.2666683,24.1138655 18.0191553,24.3126214 L18.0079156,24.3230275 C17.7317056,24.5297614 17.245528,24.6872398 16.7868519,24.6872398 C16.5013153,24.6872398 16.2282141,24.6291971 15.9763966,24.5363519 L15.95033,24.5269864 C15.5000239,24.3749422 15.1676153,23.9667931 15.1159604,23.492392 L15.1157213,23.4858015 L15.1157213,20.5332532 L15.1146451,20.5316344 C15.1146451,20.313107 15.229075,20.1163167 15.4013775,20" fill="#231F20" id="gucci-app-hover-Fill-11"></path>, <path d="M7.29266667,23.9675494 C7.04244444,23.569194 6.88266667,23.0296648 6.88266667,22.5056989 C6.88266667,21.9906736 7.01866667,21.5072166 7.257,21.0887723 L7.28388889,21.04142 C7.52255556,20.5650272 8.061,20.2393007 8.58544444,20.2393007 L8.58544444,20.2386385 C8.928,20.2386385 9.29433333,20.3386412 9.57833333,20.485334 C10.0942222,20.8014575 10.5004444,21.275974 10.7298889,21.8418836 L10.7298889,20.9830299 C10.7287778,20.7905301 10.4334444,20.580149 10.4334444,20.580149 C9.93,20.2120373 9.30777778,20.000442 8.63444444,20.0000005 C8.36122222,19.9997798 7.97833333,20.0690974 7.97833333,20.0690974 C6.84688889,20.30619 6,21.3108535 6,22.5056989 C6,23.7811204 6.96877778,24.8315909 8.21511111,24.9709988 C8.21511111,24.9709988 8.47277778,25.0094104 8.64433333,24.9978207 C9.37344444,24.9978207 10.0423333,24.742626 10.5658889,24.3174487 L10.6344444,24.2395216 C10.6966667,24.157952 10.7345556,24.0559625 10.7345556,23.9455841 L10.7345556,23.2318779 C10.7345556,23.0205034 10.8398889,22.8328602 11,22.7177356 L9.65988889,22.7177356 C9.82044444,22.8329706 9.92511111,23.0200619 9.92511111,23.2318779 L9.93433333,23.899446 C9.93433333,24.0323415 9.88022222,24.1526539 9.79277778,24.2398527 C9.683,24.3609378 9.263,24.5729745 9.263,24.5729745 C9.05977778,24.6815868 8.82733333,24.7430675 8.58055556,24.7430675 C8.022,24.7430675 7.53322222,24.4295931 7.29244444,23.9671079 L7.29266667,23.9675494" fill="#231F20" id="gucci-app-hover-Fill-1"></path>]
Raw res: clothing_items=[ClothingItem(id='gucci-app-hover-Fill-8', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id='gucci-app-hover-Fill-11', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id='gucci-app-hover-Fill-1', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Parsed results: clothing_items=[ClothingItem(id='gucci-app-hover-Fill-8', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id='gucci-app-hover-Fill-11', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None), ClothingItem(id='gucci-app-hover-Fill-1', name=None, brand=None, category=None, subcategory=None, price=None, original_price=None, image_url=None, color='#231F20', sizes=None, material=None, gender=None, season=None, style=None, description=None, care_instructions=None, availability=None, average_rating=None, num_reviews=None, tags=None, dimensions=None, weight=None, release_date=None, sustainability_info=None)]
Search result: C19.8607326,15.464527 20.1750403,15.5481037 20.4190461,15.6705663 C20.8617477,15.9344734 21.2106817,16.3305185 21.4076606,16.8029529 L21.4076606,16.0860542 C21.4065159,15.9253509 21.1530666,15.7496278 21.1530666,15.7496278 C20.7207624,15.4423197 20.1865824,15.2657673 19.6086187,15.2653066 C19.3738657,15.2651223 19.0452496,15.3229902 19.0452496,15.3229902 C18.0739005,15.5209206 17.3469388,16.3596368 17.3469388,17.3573054" id="gucci-app-Fill-4"/> <path d="M22.2040816,17.3572133 C22.2040816,18.3547898 22.9310267,19.172773 23.9024489,19.3709798 C23.9024489,19.3709798 24.2310575,19.4286635 24.4656144,19.4285713 C25.0437556,19.4281106 25.5683846,19.253954 26.0005835,18.9464616 C26.0005835,18.9464616 26.2636612,18.7890756 26.2645196,18.6283723 L26.3673469,17.8700078 C26.0691669,18.5854321 25.5675261,18.8534859 25.2758324,19.0164006 C25.0322137,19.1386789 24.7177225,19.2268629 24.4237394,19.2268629 L24.4237394,19.2263101 C23.9733215,19.2263101 23.5135557,18.9774227 23.3085688,18.5798112 L23.2831959,18.5400961 C23.0786859,18.1907692 22.9619321,17.7873525 22.9619321,17.3572133 C22.9619321,16.9272583 23.0786859,16.5236573 23.2831959,16.1746069 L23.3062796,16.1348918 C23.511171,15.7371881 23.9733215,15.4652642 24.4237394,15.4652642 L24.4237394,15.4647113 C24.7177225,15.4647113 25.0322137,15.5480116 25.2758324,15.6704741 C25.7188101,15.9344734 26.0677361,16.3305185 26.2645196,16.8031372 L26.2645196,16.0860542 C26.2636612,15.9255352 26.0101223,15.7496278 26.0101223,15.7496278 C25.5778279,15.4422276 25.0437556,15.2656751 24.4656144,15.2653066 C24.2310575,15.2651223 23.9024489,15.3229902 23.9024489,15.3229902 C22.9310267,15.5210127 22.2040816,16.3596368 22.2040816,17.3572133" id="gucci-app-Fill-6"/> <path d="M28.4489796,15.2653061 L27.755102,15.2653061 C27.8404158,15.3621509 27.8960681,15.5218581 27.8960681,15.703803 L27.8960681,18.9971983 C27.8960681,19.1740411 27.8434945,19.3309565 27.7623842,19.4285714 L28.4417566,19.4285714 C28.3606464,19.3309565 28.3079543,19.1740411 28.3079543,18.9971983 L28.3079543,15.703803 C28.3079543,15.5218581 28.3636658,15.3621509 28.4489796,15.2653061" id="gucci-app-Fill-8"/> <path d="M12.2689021,15.2653061 L11.1020408,15.2653061 C11.245509,15.3621576 11.3391964,15.5260156 11.3391964,15.7079732 L11.338599,15.709321 L11.338599,18.1710427 C11.3783241,18.6201601 11.6700394,19.0019821 12.0765492,19.1777781 L12.0807307,19.1798961 C12.4127685,19.3366299 12.7820422,19.4285714 13.1763059,19.4285714 C13.5763442,19.4285714 13.9540807,19.346161 14.2893044,19.1850949 L14.2960745,19.1823993 C14.7020865,19.0032337 14.9919101,18.6212191 15.0283497,18.1703688 L15.0281505,18.17008 L15.0281505,15.6973831 C15.0281505,15.5153292 15.1219375,15.3622539 15.2653061,15.2653061 L14.583907,15.2653061 C14.7274747,15.3622539 14.8211621,15.5153292 14.8211621,15.6973831 L14.8211621,18.17008 L14.8201665,18.1782633 C14.7915923,18.4502368 14.6546952,18.6907288 14.4486028,18.8562235 L14.439244,18.8648882 C14.2092569,19.0370258 13.8044397,19.1681507 13.4225216,19.1681507 C13.1847686,19.1681507 12.9573701,19.1198213 12.7476935,19.0425134 L12.7259891,19.0347152 C12.3510403,18.9081151 12.0742592,18.5682685 12.0312487,18.173257 L12.0310495,18.1677694 L12.0310495,15.709321 L12.0301535,15.7079732 C12.0301535,15.5260156 12.1254339,15.3621576 12.2689021,15.2653061" id="gucci-app-Fill-11"/> <path d="M5.93348571,18.5688983 C5.72513741,18.2372065 5.59209796,17.7879658 5.59209796,17.351684 C5.59209796,16.9228466 5.70533878,16.5202946 5.90378776,16.1718757 L5.92617687,16.1324477 C6.1249034,15.7357777 6.57324082,15.4645606 7.00992109,15.4645606 L7.00992109,15.4640092 C7.29515102,15.4640092 7.60017959,15.5472768 7.83665306,15.669421 C8.26620952,15.9326422 8.6044517,16.3277497 8.79549932,16.7989562 L8.79549932,16.083829 C8.79457415,15.9235434 8.54866395,15.748369 8.54866395,15.748369 C8.12946939,15.4418596 7.61137415,15.2656742 7.05072109,15.2653066 C6.82322177,15.2651227 6.50440816,15.3228402 6.50440816,15.3228402 C5.56230748,15.5202562 4.85714286,16.3567923 4.85714286,17.351684 C4.85714286,18.4136676 5.66379864,19.2883451 6.7015619,19.4044235 C6.7015619,19.4044235 6.91610884,19.436407 7.0589551,19.4267568 C7.6660517,19.4267568 8.22300408,19.2142682 8.65894422,18.860243 L8.71602721,18.7953568 C8.76783673,18.7274376 8.79938503,18.6425157 8.79938503,18.5506088 L8.79938503,17.9563391 C8.79938503,17.7803375 8.88709116,17.6240959 9.02040816,17.528237 L7.90456054,17.528237 C8.03824762,17.6241878 8.12539864,17.7799699 8.12539864,17.9563391 L8.13307755,18.5121918 C8.13307755,18.6228476 8.08802177,18.7230261 8.01521088,18.7956325 C7.92380408,18.8964543 7.5740898,19.0730074 7.5740898,19.0730074 C7.40487619,19.1634437 7.21133061,19.2146358 7.00585034,19.2146358 C6.54076735,19.2146358 6.13378503,18.9536204 5.93330068,18.5685307 L5.93348571,18.5688983" id="gucci-app-Fill-1"/> </g> </g> </symbol><symbol viewBox="0 0 126.73 89.62" id="svg-icon-gucci-osteria"><title>gucci-osteria</title> <style type="text/css"> .st0{fill:#7F7D7A;} </style> <g
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(id=lambda x: x and 'clothing' in x.lower()):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: <style type="text/css"> .st0{fill:#7F7D7A;} </style> <g id="gucci-osteria-Livello_1"> <g> <path class="st0" d="M40.86,33.62c-0.39-0.63-0.64-1.49-0.64-2.32c0-0.82,0.21-1.58,0.58-2.25l0.04-0.08c0.37-0.75,1.21-1.27,2.03-1.27v0
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(id=lambda x: x and 'clothing' in x.lower()):
        clothing_sections.append(section)
    for section in soup.find_all(class_=lambda x: x and 'clothing' in x.lower()):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: c0.53,0,1.1,0.16,1.55,0.39c0.8,0.5,1.44,1.25,1.79,2.15v-1.36c0-0.31-0.46-0.64-0.46-0.64c-0.78-0.58-1.75-0.92-2.8-0.92
			c-0.42,0-1.02,0.11-1.02,0.11c-1.76,0.38-3.08,1.97-3.08,3.86c0,2.02,1.51,3.69,3.45,3.91c0,0,0.4,0.06,0.67,0.04
			c1.14,0,2.18-0.4,2.99-1.08l0.11-0.12c0.1-0.13,0.16-0.29,0.16-0.47v-1.13c0-0.34,0.16-0.63,0.41-0.81h-2.09
			c0.25,0.18,0.41,0.48,0.41,0.81l0.01,1.06c0,0.21-0.08,0.4-0.22,0.54c-0.17,0.19-0.82,0.53-0.82,0.53
			c-0.32,0.17-0.68,0.27-1.06,0.27C42,34.85,41.24,34.35,40.86,33.62L40.86,33.62z"/> <path class="st0" d="M62.11,31.28c0,1.89,1.32,3.45,3.08,3.82c0,0,0.6,0.11,1.02,0.11c1.05,0,2-0.33,2.78-0.92c0,0,0.48-0.3,0.48-0.6
			l0.19-1.44c-0.54,1.36-1.45,1.87-1.98,2.18c-0.44,0.23-1.01,0.4-1.55,0.4v0c-0.82,0-1.65-0.47-2.02-1.23l-0.05-0.08
			c-0.37-0.66-0.58-1.43-0.58-2.25c0-0.82,0.21-1.58,0.58-2.25l0.04-0.08c0.37-0.76,1.21-1.27,2.03-1.27v0
			c0.53,0,1.1,0.16,1.55,0.39c0.8,0.5,1.44,1.25,1.79,2.15v-1.36c0-0.3-0.46-0.64-0.46-0.64c-0.78-0.58-1.75-0.92-2.8-0.92
			c-0.43,0-1.02,0.11-1.02,0.11C63.42,27.79,62.11,29.39,62.11,31.28"/> <path class="st0" d="M74.24,31.29c0,1.89,1.32,3.45,3.08,3.82c0,0,0.6,0.11,1.02,0.11c1.05,0,2-0.33,2.78-0.92c0,0,0.48-0.3,0.48-0.6
			l0.19-1.44c-0.54,1.36-1.45,1.87-1.98,2.18c-0.44,0.23-1.01,0.4-1.55,0.4v0c-0.82,0-1.65-0.47-2.02-1.23l-0.05-0.08
			c-0.37-0.66-0.58-1.43-0.58-2.25c0-0.82,0.21-1.58,0.58-2.24l0.04-0.08c0.37-0.76,1.21-1.27,2.03-1.27v0
			c0.53,0,1.1,0.16,1.55,0.39c0.8,0.5,1.44,1.25,1.79,2.15v-1.36c0-0.3-0.46-0.64-0.46-0.64c-0.78-0.58-1.75-0.92-2.8-0.92
			c-0.43,0-1.02,0.11-1.02,0.11C75.56,27.8,74.24,29.4,74.24,31.29"/> <path class="st0" d="M87.89,27.65h-2.03c0.25,0.18,0.41,0.47,0.41,0.8v5.98c0,0.32-0.15,0.61-0.39,0.78h1.98c-0.24-0.18-0.39-0.46-0.39-0.78
			v-5.98C87.47,28.12,87.64,27.83,87.89,27.65"/> <path class="st0" d="M52.83,27.65H50.8c0.25,0.18,0.41,0.47,0.41,0.8l0,0v4.47v0.01c0.07,0.82,0.58,1.51,1.28,1.83l0.01,0
			c0.58,0.28,1.22,0.45,1.9,0.45c0.7,0,1.35-0.15,1.93-0.44l0.01-0.01c0.71-0.33,1.21-1.02,1.27-1.84l0,0v-4.49
			c0-0.33,0.16-0.61,0.41-0.79h-1.18c0.25,0.18,0.41,0.45,0.41,0.79v4.49l0,0.01c-0.05,0.49-0.29,0.93-0.65,1.23L56.6,34.2
			c-0.4,0.31-1.1,0.55-1.77,0.55c-0.41,0-0.81-0.09-1.17-0.23l-0.04-0.01c-0.65-0.23-1.13-0.85-1.21-1.57l0-0.01v-4.47l0,0
			C52.41,28.13,52.58,27.83,52.83,27.65"/> <path class="st0" d="M32.14,42.44c-0.34-0.73-0.79-1.36-1.36-1.88c-0.57-0.52-1.23-0.92-1.98-1.2c-0.75-0.28-1.54-0.42-2.37-0.42
			c-0.83,0-1.62,0.14-2.37,0.42c-0.75,0.28-1.41,0.68-1.98,1.2c-0.57,0.52-1.02,1.15-1.36,1.88c-0.34,0.73-0.51,1.54-0.51,2.44
			c0,0.9,0.17,1.71,0.51,2.44c0.34,0.73,0.79,1.36,1.36,1.87c0.57,0.52,1.23,0.92,1.98,1.2c0.75,0.28,1.54,0.43,2.37,0.43
			c0.83,0,1.62-0.14,2.37-0.43c0.75-0.28,1.41-0.68,1.98-1.2c0.57-0.52,1.02-1.14,1.36-1.87c0.34-0.73,0.51-1.54,0.51-2.44
			C32.65,43.99,32.48,43.17,32.14,42.44 M30.39,47.08c-0.23,0.65-0.55,1.19-0.94,1.64c-0.4,0.45-0.86,0.79-1.38,1.04
			C27.55,50,27,50.12,26.42,50.12c-0.58,0-1.13-0.12-1.65-0.37c-0.52-0.24-0.98-0.59-1.38-1.04c-0.4-0.45-0.71-0.99-0.94-1.64
			c-0.23-0.65-0.35-1.38-0.35-2.19c0-0.82,0.12-1.55,0.35-2.2c0.23-0.65,0.55-1.2,0.94-1.65c0.4-0.45,0.86-0.79,1.38-1.04
			c0.52-0.24,1.07-0.37,1.65-0.37c0.58,0,1.13,0.12,1.65,0.37c0.52,0.24,0.98,0.59,1.38,1.04c0.4,0.45,0.71,1,0.94,1.65
			c0.23,0.65,0.35,1.39,0.35,2.2C30.74,45.7,30.62,46.43,30.39,47.08 M44.55,45.77c-0.29-0.44-0.66-0.81-1.11-1.11
			C43,44.35,42.52,44.1,42,43.89c-0.52-0.21-1-0.42-1.45-0.64c-0.44-0.22-0.81-0.47-1.11-0.76c-0.29-0.29-0.44-0.66-0.44-1.11
			c0-0.48,0.18-0.88,0.54-1.22c0.36-0.34,0.87-0.51,1.53-0.51c0.29,0,0.6,0.04,0.9,0.11c0.31,0.07,0.6,0.19,0.88,0.36
			c0.28,0.16,0.54,0.38,0.77,0.65c0.24,0.27,0.44,0.6,0.61,1l0.09-0.07l-0.17-1.84c-0.31-0.29-0.72-0.52-1.24-0.67
			c-0.52-0.15-1.11-0.23-1.75-0.23c-0.5,0-0.97,0.07-1.41,0.2c-0.44,0.13-0.83,0.32-1.16,0.58c-0.33,0.25-0.59,0.58-0.78,0.97
			c-0.19,0.39-0.29,0.85-0.29,1.37c0,0.58,0.15,1.05,0.44,1.43c0.29,0.37,0.66,0.7,1.1,0.97c0.44,0.27,0.91,0.51,1.42,0.72
			c0.51,0.21,0.98,0.44,1.42,0.68c0.44,0.24,0.8,0.52,1.1,0.84c0.29,0.32,0.44,0.72,0.44,1.21c0,0.74-0.23,1.3-0.69,1.68
			c-0.46,0.39-1.05,0.58-1.78,0.58c-0.31,0-0.63-0.05-0.96-0.14c-0.33-0.1-0.66-0.25-0.97-0.45c-0.31-0.2-0.61-0.47-0.9-0.8
			c-0.29-0.33-0.55-0.73-0.77-1.21l-0.14,0.05l0.29,2.11c0.18,0.17,0.41,0.32,0.67,0.46c0.27,0.14,0.55,0.25,0.86,0.34
			c0.31,0.09,0.62,0.16,0.94,0.21c0.32,0.05,0.64,0.08,0.94,0.08c0.54,0,1.06-0.07,1.55-0.21c0.49-0.14,0.92-0.35,1.29-0.64
			c0.37-0.28,0.67-0.63,0.88-1.05c0.22-0.41,0.32-0.89,0.32-1.44C44.99,46.78,44.85,46.21,44.55,45.77 M58.86,40.94
			c-0.02-0.07-0.06-0.18-0.12-0.34c-0.06-0.16-0.11-0.33-0.17-0.51c-0.06-0.18-0.11-0.35-0.16-0.5s-0.08-0.25-0.08-0.28h-8.96
			c0,0.03-0.03,0.13-0.08,0.28c-0.05,0.15-0.11,0.32-0.17,0.5c-0.06,0.18-0.12,0.35-0.18,0.52c-0.06,0.16-0.1,0.28-0.12,0.35
			l0.09,0.09c0.58-0.43,1.23-0.73,1.96-0.91c0.73-0.18,1.43-0.26,2.11-0.26v5.02v1.73v1.28c0,0.37,0,0.7-0.01,0.99
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-class'):
        clothing_sections.append(section.text)
    return clothing_sections
Results: []
Search result: c-0.01,0.3-0.01,0.58-0.03,0.85c-0.01,0.25-0.07,0.42-0.18,0.51c-0.11,0.09-0.22,0.16-0.35,0.22l0.02,0.07
			c0.06-0.01,0.15-0.02,0.28-0.03c0.13-0.01,0.27-0.02,0.42-0.02c0.15-0.01,0.29-0.01,0.42-0.01h0.31h0.3c0.13,0,0.27,0,0.42,0.01
			c0.15,0.01,0.29,0.01,0.42,0.02c0.13,0.01,0.22,0.02,0.28,0.03l0.02-0.07c-0.11-0.06-0.23-0.13-0.34-0.22
			c-0.11-0.09-0.18-0.26-0.19-0.51c-0.01-0.27-0.02-0.56-0.03-0.85c-0.01-0.29-0.01-0.63-0.01-0.99v-1.28v-1.73v-5.02
			c0.68,0,1.38,0.08,2.1,0.26c0.72,0.17,1.37,0.47,1.95,0.9L58.86,40.94z M71.1,48.81c-0.34,0.25-0.73,0.45-1.18,0.6
			c-0.45,0.15-0.93,0.27-1.45,0.35c-0.52,0.08-1.05,0.13-1.62,0.15s-1.13,0.03-1.71,0.02c-0.01-0.27-0.02-0.56-0.03-0.87
			c-0.01-0.31-0.01-0.65-0.01-1.04v-1.32v-1.69v-0.03c0.84,0,1.51,0.01,2.01,0.03c0.51,0.02,0.89,0.07,1.17,0.13
			c0.27,0.06,0.46,0.15,0.56,0.27c0.1,0.12,0.18,0.27,0.22,0.45l0.08-0.03c-0.02-0.19-0.04-0.37-0.05-0.54
			c-0.01-0.16-0.02-0.36-0.02-0.59c0-0.23,0.01-0.42,0.02-0.58c0.01-0.16,0.03-0.34,0.05-0.54l-0.08-0.03
			c-0.05,0.17-0.12,0.31-0.22,0.43c-0.1,0.11-0.29,0.2-0.56,0.27c-0.27,0.07-0.66,0.12-1.17,0.14c-0.5,0.03-1.18,0.05-2.01,0.06V43
			v-1.1c0-0.33,0-0.66,0.01-0.98c0.01-0.32,0.01-0.69,0.03-1.11c0.52-0.03,1.02-0.05,1.5-0.03c0.48,0.01,0.93,0.06,1.37,0.14
			c0.44,0.09,0.85,0.22,1.24,0.39c0.39,0.18,0.76,0.42,1.1,0.72l0.09-0.1c-0.03-0.08-0.08-0.2-0.14-0.35
			c-0.06-0.15-0.12-0.31-0.18-0.48c-0.06-0.17-0.12-0.33-0.16-0.48c-0.05-0.15-0.07-0.25-0.07-0.32h-5.68c-0.07,0-0.17,0-0.3-0.01
			c-0.13-0.01-0.27-0.01-0.41-0.02c-0.14-0.01-0.28-0.01-0.41-0.03c-0.13-0.01-0.22-0.02-0.28-0.03L62.8,39.3
			c0.11,0.06,0.23,0.13,0.34,0.22c0.11,0.09,0.18,0.26,0.19,0.51c0.01,0.27,0.02,0.55,0.03,0.84c0.01,0.29,0.01,0.62,0.01,1v1.29
			v1.72v1.71v1.28c0,0.37,0,0.71-0.01,1c-0.01,0.3-0.01,0.58-0.03,0.85c-0.01,0.25-0.07,0.42-0.19,0.51
			c-0.11,0.09-0.23,0.16-0.34,0.22l0.02,0.07c0.06-0.01,0.15-0.02,0.28-0.03c0.13-0.01,0.27-0.02,0.41-0.02
			c0.14-0.01,0.28-0.01,0.41-0.01h0.3h6.26c0-0.05,0.03-0.14,0.1-0.3c0.07-0.15,0.14-0.32,0.23-0.49c0.08-0.18,0.16-0.34,0.24-0.49
			c0.07-0.15,0.12-0.25,0.14-0.3L71.1,48.81z M83.76,50.24c-0.24,0.08-0.47,0.03-0.71-0.16c-0.23-0.19-0.47-0.44-0.71-0.77
			c-0.24-0.33-0.48-0.71-0.72-1.13c-0.24-0.42-0.5-0.84-0.77-1.23c-0.27-0.4-0.55-0.76-0.84-1.08c-0.29-0.32-0.61-0.55-0.95-0.67
			c0.46-0.08,0.9-0.2,1.31-0.37c0.41-0.16,0.77-0.37,1.07-0.63c0.31-0.25,0.55-0.56,0.73-0.91c0.18-0.35,0.27-0.76,0.27-1.22
			c0-0.39-0.09-0.75-0.25-1.09c-0.17-0.34-0.44-0.64-0.8-0.89c-0.36-0.26-0.82-0.46-1.38-0.6c-0.56-0.15-1.23-0.22-2.01-0.22h-0.52
			c-0.28,0-0.58,0-0.9,0.01c-0.32,0.01-0.62,0.01-0.89,0.02c-0.27,0.01-0.44,0.01-0.51,0.03l0.02,0.07
			c0.12,0.01,0.24,0.06,0.34,0.15c0.1,0.09,0.16,0.26,0.17,0.51c0.01,0.27,0.02,0.55,0.03,0.84c0.01,0.29,0.01,0.62,0.01,1v1.29
			v1.72v1.73v1.28c0,0.37,0,0.7-0.01,0.99c-0.01,0.3-0.01,0.58-0.03,0.85c-0.01,0.25-0.07,0.42-0.19,0.51
			c-0.11,0.09-0.23,0.16-0.34,0.22l0.02,0.07c0.06-0.01,0.15-0.02,0.29-0.03c0.14-0.01,0.28-0.02,0.42-0.02
			c0.15-0.01,0.29-0.01,0.43-0.01h0.31h0.3c0.13,0,0.27,0,0.41,0.01c0.14,0.01,0.28,0.01,0.41,0.02c0.13,0.01,0.22,0.02,0.28,0.03
			l0.02-0.07c-0.12-0.06-0.24-0.13-0.35-0.22c-0.11-0.09-0.17-0.26-0.18-0.51c-0.01-0.25-0.02-0.48-0.02-0.71
			c-0.01-0.22-0.01-0.47-0.01-0.74v-0.94v-1.28v-0.8h0.46c0.29,0.06,0.54,0.23,0.73,0.52c0.19,0.29,0.37,0.63,0.53,1.03
			c0.16,0.4,0.32,0.82,0.48,1.26c0.16,0.44,0.35,0.85,0.59,1.22c0.23,0.37,0.52,0.69,0.88,0.94c0.35,0.25,0.8,0.37,1.34,0.37
			c0.19,0,0.41-0.02,0.66-0.05c0.25-0.03,0.45-0.11,0.61-0.22L83.76,50.24z M80.35,43.36c-0.19,0.35-0.43,0.62-0.73,0.82
			c-0.3,0.2-0.64,0.33-1.01,0.4c-0.37,0.07-0.74,0.09-1.11,0.05v-2.87c0-0.79,0.01-1.44,0.03-1.95c0.37,0,0.75,0.03,1.11,0.09
			c0.37,0.06,0.7,0.17,1,0.33c0.29,0.16,0.53,0.39,0.71,0.68c0.18,0.29,0.27,0.67,0.27,1.15C80.63,42.58,80.54,43.02,80.35,43.36
			 M90.77,50.46c-0.12-0.06-0.24-0.13-0.35-0.22c-0.11-0.09-0.17-0.26-0.18-0.51c-0.01-0.27-0.02-0.56-0.03-0.85
			c-0.01-0.29-0.01-0.63-0.01-1v-1.28v-1.71v-1.72v-1.29c0-0.37,0-0.71,0.01-1c0.01-0.29,0.01-0.57,0.03-0.84
			c0.01-0.25,0.07-0.42,0.18-0.52c0.11-0.1,0.22-0.17,0.35-0.23l-0.02-0.07c-0.06,0.01-0.15,0.02-0.28,0.03
			c-0.13,0.01-0.27,0.02-0.42,0.03c-0.15,0.01-0.29,0.01-0.42,0.02c-0.13,0.01-0.23,0.01-0.3,0.01h-0.31
			c-0.14,0-0.28-0.01-0.42-0.02c-0.14-0.01-0.28-0.02-0.41-0.03c-0.13-0.01-0.23-0.02-0.3-0.04l-0.02,0.07
			c0.11,0.06,0.23,0.13,0.34,0.23c0.11,0.1,0.18,0.27,0.19,0.52c0.01,0.27,0.02,0.55,0.03,0.84c0.01,0.29,0.01,0.62,0.01,1v1.29
			v1.72v1.71v1.28c0,0.37,0,0.71-0.01,1c-0.01,0.3-0.01,0.58-0.03,0.85c-0.01,0.25-0.07,0.42-0.19,0.51
			c-0.11,0.09-0.23,0.16-0.34,0.22l0.02,0.07c0.07-0.01,0.17-0.02,0.3-0.03c0.13-0.01,0.27-0.02,0.41-0.02
			c0.14-0.01,0.28-0.01,0.42-0.01h0.31c0.07,0,0.17,0,0.3,0.01c0.13,0.01,0.27,0.01,0.42,0.02c0.15,0.01,0.29,0.01,0.42,0.02
			c0.13,0.01,0.22,0.01,0.28,0.02L90.77,50.46z M106.54,50.46c-0.16-0.06-0.33-0.18-0.53-0.36c-0.19-0.18-0.35-0.4-0.48-0.65
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: c-0.14-0.27-0.27-0.54-0.4-0.79c-0.13-0.25-0.27-0.54-0.43-0.87c-0.15-0.32-0.34-0.7-0.55-1.14c-0.22-0.44-0.48-0.98-0.78-1.62
			c-0.31-0.65-0.6-1.27-0.88-1.86c-0.28-0.6-0.53-1.15-0.77-1.66c-0.23-0.51-0.44-0.97-0.62-1.38c-0.18-0.41-0.33-0.75-0.44-1.02
			h-0.24c-0.11,0.27-0.26,0.61-0.44,1.02c-0.18,0.41-0.39,0.87-0.62,1.38c-0.23,0.51-0.49,1.06-0.77,1.66
			c-0.28,0.6-0.58,1.22-0.88,1.86c-0.31,0.65-0.57,1.2-0.78,1.65c-0.22,0.45-0.41,0.85-0.58,1.19c-0.17,0.34-0.32,0.64-0.46,0.91
			c-0.14,0.27-0.27,0.54-0.41,0.81c-0.25,0.47-0.56,0.75-0.92,0.87l0.02,0.07c0.16-0.02,0.34-0.04,0.54-0.05
			c0.2-0.01,0.38-0.02,0.54-0.02c0.17,0,0.37,0.01,0.6,0.02c0.23,0.01,0.41,0.03,0.56,0.05l0.02-0.07c-0.06-0.02-0.12-0.05-0.2-0.09
			c-0.08-0.03-0.15-0.08-0.2-0.14c-0.06-0.06-0.1-0.12-0.12-0.2c-0.02-0.08-0.01-0.18,0.05-0.31c0.08-0.19,0.16-0.38,0.23-0.57
			c0.07-0.19,0.15-0.39,0.24-0.6c0.08-0.22,0.18-0.44,0.27-0.69c0.1-0.24,0.21-0.52,0.33-0.82h5.02c0.29,0.61,0.54,1.12,0.72,1.51
			c0.19,0.4,0.36,0.79,0.52,1.17c0.05,0.12,0.06,0.23,0.04,0.31c-0.02,0.08-0.05,0.15-0.11,0.2c-0.06,0.06-0.12,0.1-0.2,0.14
			c-0.07,0.03-0.14,0.06-0.2,0.09l0.02,0.07c0.07-0.01,0.18-0.02,0.35-0.03c0.16-0.01,0.34-0.02,0.52-0.02
			c0.18-0.01,0.35-0.01,0.52-0.01h0.38h0.32c0.14,0,0.28,0,0.43,0.01c0.15,0.01,0.3,0.01,0.43,0.02c0.14,0.01,0.24,0.02,0.32,0.03
			L106.54,50.46z M97.66,46.47l0.63-1.39c0.25-0.53,0.45-0.97,0.6-1.31c0.15-0.34,0.28-0.63,0.38-0.88c0.11-0.25,0.21-0.48,0.3-0.69
			c0.09-0.21,0.2-0.46,0.34-0.74c0.14,0.28,0.24,0.51,0.31,0.68c0.07,0.17,0.16,0.37,0.26,0.59c0.1,0.22,0.22,0.5,0.37,0.85
			c0.15,0.35,0.38,0.84,0.67,1.47l0.65,1.43H97.66z"/> <path class="st0" d="M46.08,60.38c-0.37,0-1.06,0.96-1.06,1.43c0,0.14,0.06,0.23,0.22,0.23c0.4,0,1-1.08,1-1.46
			C46.24,60.45,46.18,60.38,46.08,60.38 M46.23,61.66c-0.1,0.3-0.07,0.34,0,0.34c0.1,0,0.47-0.36,0.52-0.36
			c0.01,0,0.02,0.01,0.01,0.03c-0.05,0.08-0.55,0.63-0.77,0.63c-0.18,0-0.18-0.19-0.03-0.6l0.12-0.32c0-0.01-0.04-0.04-0.05-0.02
			c-0.31,0.61-0.64,0.94-0.99,0.94c-0.21,0-0.37-0.17-0.37-0.42c0-0.59,0.78-1.6,1.4-1.6c0.14,0,0.23,0.08,0.26,0.2
			c0.17-0.4,0.31-0.77,0.51-1.37c0.07-0.21-0.02-0.32-0.35-0.32c-0.04,0-0.04-0.05-0.01-0.05c0.25-0.03,0.76-0.06,0.81-0.06
			c0.04,0,0.05,0.03,0.03,0.08C46.84,59.98,46.44,61.04,46.23,61.66"/> <path class="st0" d="M48.4,60.34c-0.39,0-0.99,1.02-0.99,1.44c0,0.16,0.07,0.25,0.17,0.25c0.1,0,0.22-0.07,0.35-0.22
			c0.32-0.38,0.65-1.14,0.65-1.29C48.58,60.42,48.52,60.34,48.4,60.34 M48.48,61.67c-0.09,0.25-0.07,0.32,0.01,0.32
			c0.13,0,0.38-0.34,0.42-0.34c0.01,0,0.02,0.01,0.01,0.02c-0.16,0.29-0.49,0.61-0.68,0.61c-0.08,0-0.14-0.04-0.14-0.14
			c0-0.08,0.02-0.2,0.07-0.35l0.09-0.3c0-0.01-0.04-0.03-0.05-0.02c-0.29,0.5-0.59,0.81-0.84,0.81c-0.17,0-0.33-0.14-0.33-0.37
			c0-0.67,0.78-1.64,1.32-1.64c0.09,0,0.2,0.03,0.24,0.06c0.02,0.01,0.03,0.02,0.05,0c0.06-0.08,0.12-0.16,0.15-0.22
			c0.04-0.05,0.23,0.01,0.22,0.04L48.48,61.67z"/> <path class="st0" d="M54.47,59.04c-0.15,0.1-0.19,0.2-0.36,1.54c-0.17,1.41-0.17,1.53-0.14,1.55c0.06,0.04,0.19,0.03,0.3,0.06
			c0.04,0.01,0.03,0.07,0,0.06c-0.13-0.01-0.33-0.02-0.58-0.02c-0.25,0-0.47,0-0.6,0.02c-0.02,0-0.05-0.05,0-0.06
			c0.12-0.03,0.25-0.03,0.32-0.06c0.11-0.06,0.16-0.17,0.33-1.57c0.05-0.42,0.12-0.8,0.15-1.09c0-0.02-0.04-0.02-0.04-0.01
			c-0.4,0.62-1.16,1.82-1.76,2.83c-0.02,0.03-0.09,0.02-0.09,0c-0.07-1.04-0.19-2.23-0.26-2.8c0-0.01-0.03-0.02-0.04,0
			c-0.13,0.29-0.27,0.65-0.45,1.09c-0.56,1.41-0.57,1.52-0.54,1.55c0.04,0.04,0.16,0.03,0.26,0.06c0.04,0.01,0.02,0.07-0.01,0.06
			c-0.12-0.01-0.24-0.02-0.49-0.02c-0.25,0-0.37,0-0.51,0.02c-0.02,0-0.04-0.05,0-0.06c0.13-0.03,0.27-0.03,0.35-0.06
			c0.15-0.07,0.2-0.15,0.78-1.55c0.55-1.33,0.53-1.44,0.45-1.53c-0.05-0.05-0.19-0.07-0.36-0.09c-0.04,0-0.02-0.06,0-0.06
			c0.09,0.01,0.39,0.02,0.58,0.02c0.17,0,0.18-0.01,0.27-0.02c0.01,0,0.03,0.01,0.03,0.02c0.03,0.51,0.13,1.8,0.22,2.74
			c0,0.01,0.03,0.01,0.04,0c0.53-0.82,1.26-1.99,1.68-2.73c0.01-0.01,0.02-0.02,0.04-0.02c0.09,0.01,0.16,0.02,0.32,0.02
			c0.18,0,0.36-0.01,0.45-0.02c0.02,0,0.05,0.06,0.01,0.06C54.64,58.98,54.51,59.01,54.47,59.04"/> <path class="st0" d="M56.12,60.34c-0.39,0-0.99,1.02-0.99,1.44c0,0.16,0.07,0.25,0.17,0.25c0.1,0,0.22-0.07,0.35-0.22
			c0.32-0.38,0.65-1.14,0.65-1.29C56.31,60.42,56.25,60.34,56.12,60.34 M56.21,61.67c-0.09,0.25-0.07,0.32,0.01,0.32
			c0.13,0,0.38-0.34,0.42-0.34c0.01,0,0.02,0.01,0.01,0.02c-0.16,0.29-0.49,0.61-0.68,0.61c-0.08,0-0.14-0.04-0.14-0.14
			c0-0.08,0.02-0.2,0.07-0.35l0.09-0.3c0-0.01-0.04-0.03-0.05-0.02c-0.29,0.5-0.59,0.81-0.84,0.81c-0.17,0-0.33-0.14-0.33-0.37
			c0-0.67,0.78-1.64,1.32-1.64c0.09,0,0.2,0.03,0.24,0.06c0.02,0.01,0.03,0.02,0.05,0c0.06-0.08,0.12-0.16,0.15-0.22
			c0.04-0.05,0.23,0.01,0.22,0.04L56.21,61.67z"/> <path class="st0" d="M58.24,60.67c-0.2,0-0.18-0.32-0.41-0.32c-0.13,0-0.25,0.15-0.25,0.27c0,0.26,0.46,0.78,0.46,1.11
			c0,0.29-0.27,0.57-0.66,0.57c-0.29,0-0.49-0.21-0.49-0.34c0-0.09,0.06-0.17,0.17-0.17c0.24,0,0.15,0.41,0.48,0.41
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: c0.14,0,0.24-0.18,0.24-0.32c0-0.27-0.43-0.67-0.43-1.05c0-0.3,0.3-0.61,0.66-0.61c0.2,0,0.39,0.15,0.39,0.29
			C58.4,60.59,58.33,60.67,58.24,60.67"/> <path class="st0" d="M59.75,60.67c-0.2,0-0.18-0.32-0.41-0.32c-0.13,0-0.25,0.15-0.25,0.27c0,0.26,0.46,0.78,0.46,1.11
			c0,0.29-0.27,0.57-0.66,0.57c-0.29,0-0.49-0.21-0.49-0.34c0-0.09,0.06-0.17,0.17-0.17c0.24,0,0.15,0.41,0.48,0.41
			c0.14,0,0.24-0.18,0.24-0.32c0-0.27-0.43-0.67-0.43-1.05c0-0.3,0.3-0.61,0.66-0.61c0.2,0,0.39,0.15,0.39,0.29
			C59.91,60.59,59.84,60.67,59.75,60.67"/> <path class="st0" d="M61.12,59.65c-0.1,0-0.15-0.08-0.15-0.16c0-0.12,0.11-0.29,0.25-0.29c0.1,0,0.15,0.08,0.15,0.16
			C61.38,59.48,61.26,59.65,61.12,59.65 M60.34,62.29c-0.19,0-0.23-0.19-0.12-0.43l0.49-1.07c0.1-0.22,0.1-0.32-0.01-0.32
			c-0.11,0-0.33,0.21-0.48,0.41c-0.01,0.02-0.04,0-0.03-0.01c0.09-0.27,0.49-0.65,0.74-0.65c0.25,0,0.25,0.29,0.04,0.75l-0.38,0.76
			c-0.1,0.22-0.07,0.26,0.03,0.26c0.1,0,0.46-0.33,0.51-0.33c0.01,0,0.02,0.01,0.01,0.02C61.1,61.76,60.61,62.29,60.34,62.29"/> <path class="st0" d="M63.72,62.29c-0.17,0-0.23-0.12-0.12-0.43l0.37-0.95c0.15-0.37,0.12-0.44,0.06-0.44c-0.22,0-0.62,0.63-1.23,1.75
			c-0.01,0.03-0.1,0.04-0.17,0.04c-0.08,0-0.14-0.01-0.13-0.04l0.54-1.45c0.07-0.18,0.12-0.31,0.03-0.31
			c-0.23,0-0.62,0.65-1.23,1.77c-0.01,0.03-0.09,0.04-0.16,0.04c-0.08,0-0.15-0.01-0.14-0.04l0.53-1.43
			c0.07-0.21,0.09-0.32,0.01-0.32c-0.15,0-0.31,0.14-0.5,0.4c-0.01,0.02-0.04,0-0.03-0.01c0.09-0.27,0.48-0.64,0.74-0.64
			c0.08,0,0.15,0.09,0.15,0.2c0,0.22-0.15,0.66-0.46,1.36c-0.01,0.01,0.05,0.02,0.05,0.02c0.59-1.13,0.93-1.61,1.22-1.61
			c0.09,0,0.16,0.09,0.16,0.23c0,0.24-0.15,0.65-0.47,1.36c-0.01,0.01,0.05,0.02,0.05,0.02c0.58-1.12,0.97-1.57,1.23-1.57
			c0.3,0,0.22,0.35,0.07,0.74l-0.3,0.76c-0.08,0.22-0.05,0.26,0.02,0.26c0.1,0,0.46-0.33,0.51-0.33c0.01,0,0.02,0.01,0.01,0.02
			C64.47,61.76,63.98,62.29,63.72,62.29"/> <path class="st0" d="M65.95,60.29c-0.34,0-0.78,1.08-0.78,1.59c0,0.22,0.09,0.34,0.26,0.34c0.34,0,0.79-1.08,0.79-1.59
			C66.21,60.41,66.12,60.29,65.95,60.29 M65.4,62.29c-0.3,0-0.52-0.21-0.52-0.65c0-0.55,0.44-1.43,1.1-1.43
			c0.3,0,0.52,0.21,0.52,0.66C66.49,61.42,66.05,62.29,65.4,62.29"/> <path class="st0" d="M69.74,59.02c-0.14,0-0.22,0.03-0.3,0.06c-0.04,0.02-0.09,0.08-0.42,1.26c-0.01,0.03-0.01,0.06,0.01,0.07
			c0.06,0.01,0.08,0.01,0.35,0.01c0.64,0,0.91-0.52,0.91-0.92C70.3,59.23,70.14,59.02,69.74,59.02 M69.36,60.52
			c-0.27,0-0.29,0-0.36,0.01c-0.03,0.01-0.05,0.03-0.06,0.07c-0.33,1.15-0.37,1.38-0.32,1.45c0.06,0.07,0.15,0.09,0.49,0.09
			c0.58,0,1.02-0.45,1.02-0.97C70.14,60.81,69.82,60.52,69.36,60.52 M69.75,60.44c-0.02,0-0.03,0.04-0.01,0.04
			c0.59,0.09,0.81,0.43,0.81,0.75c0,0.5-0.58,1.02-1.51,1.02c-0.12,0-0.29-0.02-0.54-0.02c-0.25,0-0.63,0-0.76,0.02
			c-0.02,0-0.04-0.05,0-0.06c0.12-0.03,0.27-0.03,0.34-0.06c0.04-0.02,0.1-0.15,0.51-1.55c0.4-1.41,0.42-1.53,0.38-1.56
			c-0.05-0.03-0.18-0.03-0.29-0.06c-0.03-0.01-0.02-0.06,0-0.06c0.13,0.01,0.48,0.02,0.74,0.02c0.25,0,0.32-0.02,0.45-0.02
			c0.5,0,0.83,0.29,0.83,0.65C70.7,59.94,70.35,60.31,69.75,60.44"/> <path class="st0" d="M72.11,60.29c-0.34,0-0.78,1.08-0.78,1.59c0,0.22,0.09,0.34,0.26,0.34c0.34,0,0.79-1.08,0.79-1.59
			C72.38,60.41,72.28,60.29,72.11,60.29 M71.56,62.29c-0.3,0-0.52-0.21-0.52-0.65c0-0.55,0.44-1.43,1.1-1.43
			c0.3,0,0.52,0.21,0.52,0.66C72.66,61.42,72.22,62.29,71.56,62.29"/> <path class="st0" d="M74.35,60.46c-0.16-0.01-0.17-0.02-0.46-0.02c-0.16,0.43-0.37,0.97-0.49,1.31c-0.07,0.2-0.02,0.27,0.04,0.27
			c0.17,0,0.52-0.45,0.57-0.45c0.01,0,0.02,0.01,0.01,0.02c-0.15,0.23-0.5,0.71-0.81,0.71c-0.11,0-0.3-0.1-0.17-0.43
			c0.17-0.44,0.37-0.99,0.52-1.42c-0.18,0-0.23,0.01-0.37,0.02c-0.05,0-0.05-0.14,0.01-0.14c0.14,0.01,0.22,0.01,0.4,0.01
			c0.06-0.16,0.11-0.3,0.14-0.41c0.01-0.02,0.04-0.02,0.07-0.02c0.08,0,0.29,0.03,0.27,0.08c-0.04,0.1-0.09,0.22-0.15,0.36
			c0.28,0,0.27,0,0.43-0.01C74.41,60.32,74.42,60.46,74.35,60.46"/> <path class="st0" d="M75.91,60.46c-0.16-0.01-0.17-0.02-0.46-0.02c-0.16,0.43-0.37,0.97-0.49,1.31c-0.07,0.2-0.02,0.27,0.04,0.27
			c0.17,0,0.53-0.45,0.57-0.45c0.01,0,0.02,0.01,0.01,0.02c-0.15,0.23-0.5,0.71-0.81,0.71c-0.11,0-0.3-0.1-0.17-0.43
			c0.17-0.44,0.37-0.99,0.52-1.42c-0.18,0-0.23,0.01-0.37,0.02c-0.05,0-0.05-0.14,0.01-0.14c0.14,0.01,0.22,0.01,0.4,0.01
			c0.06-0.16,0.11-0.3,0.14-0.41c0.01-0.02,0.04-0.02,0.07-0.02c0.08,0,0.29,0.03,0.27,0.08c-0.04,0.1-0.09,0.22-0.15,0.36
			c0.28,0,0.27,0,0.43-0.01C75.97,60.32,75.97,60.46,75.91,60.46"/> <path class="st0" d="M77.54,61.7c-0.09,0.25-0.05,0.28,0.02,0.28c0.1,0,0.44-0.33,0.48-0.33c0.01,0,0.02,0.01,0.01,0.02
			c-0.05,0.08-0.5,0.61-0.77,0.61c-0.21,0-0.21-0.24,0.26-1.27c0-0.01-0.04-0.04-0.05-0.02c-0.37,0.62-0.75,1.29-1.16,1.29
			c-0.13,0-0.24-0.06-0.24-0.23c0-0.11,0.04-0.26,0.15-0.51l0.35-0.76c0.1-0.22,0.11-0.32,0.01-0.32c-0.15,0-0.34,0.21-0.4,0.25
			c-0.01,0.01-0.03-0.02-0.02-0.03c0.17-0.2,0.4-0.48,0.65-0.48c0.18,0,0.24,0.21,0.09,0.56l-0.36,0.83
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-class'):
        clothing_sections.append(section.text)
    return clothing_sections
Results: []
Search result: c-0.14,0.33-0.13,0.44-0.01,0.44c0.23,0,0.75-0.66,1.23-1.79c0.01-0.01,0.04-0.02,0.08-0.02c0.09,0,0.23,0.03,0.22,0.07
			L77.54,61.7z"/> <path class="st0" d="M79.98,60.71c-0.2,0-0.11-0.25-0.23-0.25c-0.13,0-0.36,0.28-0.99,1.76c-0.01,0.03-0.1,0.04-0.17,0.04
			c-0.08,0-0.15,0-0.14-0.04c0.29-0.79,0.49-1.4,0.49-1.57c0-0.1-0.02-0.14-0.07-0.14c-0.15,0-0.33,0.35-0.37,0.37
			c-0.01,0-0.04,0-0.03-0.01c0.12-0.26,0.37-0.67,0.61-0.67c0.13,0,0.17,0.15,0.17,0.3c0,0.18-0.07,0.45-0.25,0.97
			c-0.01,0.02,0.05,0.03,0.05,0.02c0.37-0.89,0.63-1.29,0.91-1.29c0.16,0,0.25,0.12,0.25,0.26C80.19,60.59,80.1,60.71,79.98,60.71"/> <path class="st0" d="M81.43,60.34c-0.39,0-0.99,1.02-0.99,1.44c0,0.16,0.07,0.25,0.17,0.25c0.1,0,0.22-0.07,0.35-0.22
			c0.32-0.38,0.65-1.14,0.65-1.29C81.62,60.42,81.56,60.34,81.43,60.34 M81.52,61.67c-0.09,0.25-0.07,0.32,0.01,0.32
			c0.13,0,0.38-0.34,0.42-0.34c0.01,0,0.02,0.01,0.01,0.02c-0.16,0.29-0.49,0.61-0.68,0.61c-0.08,0-0.14-0.04-0.14-0.14
			c0-0.08,0.02-0.2,0.07-0.35l0.09-0.3c0-0.01-0.04-0.03-0.05-0.02c-0.3,0.5-0.59,0.81-0.84,0.81c-0.17,0-0.33-0.14-0.33-0.37
			c0-0.67,0.78-1.64,1.32-1.64c0.09,0,0.2,0.03,0.24,0.06c0.02,0.01,0.03,0.02,0.05,0c0.06-0.08,0.12-0.16,0.15-0.22
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing'):
        clothing_sections.append(section.text)
    return clothing_sections
Results: []
Search result: c0.04-0.05,0.23,0.01,0.22,0.04L81.52,61.67z"/> </g> </g>  </symbol><symbol viewBox="0 0 31 36" id="svg-icon-hand"><title>hand</title> <g fill="currentColor"> <path d="M14.0609 35.0685C13.2396 35.0535 12.4577 34.7224 11.8854 34.1475L1.79148 24.3207C1.05982 23.605 0.648926 22.6354 0.648926 21.6245C0.648926 20.6136 1.05982 19.644 1.79148 18.9283L2.48989 18.2514C3.22308 17.5388 4.21572 17.1388 5.2505 17.1388C6.28529 17.1388 7.27793 17.5388 8.01112 18.2514L8.42639 18.6566V4.84189C8.43369 3.82785 8.84781 2.85696 9.57997 2.13733C10.3121 1.4177 11.3041 1.00661 12.3432 0.992188C13.3828 0.993406 14.3795 1.39696 15.1147 2.11434C15.8498 2.83172 16.2634 3.80434 16.2646 4.81887V12.242L28.6898 18.0304C29.2433 18.2868 29.6982 18.7095 29.9878 19.2366C30.2774 19.7636 30.3864 20.3672 30.2989 20.9591L28.4633 33.5581C28.4243 33.8421 28.2835 34.1034 28.0658 34.2957C27.848 34.4879 27.5675 34.5986 27.2741 34.608L14.193 35.0685H14.0609ZM5.22691 19.5822C5.03914 19.5818 4.85315 19.6178 4.67978 19.6881C4.50641 19.7585 4.34911 19.8618 4.21704 19.992L3.51863 20.669C3.38523 20.7975 3.2793 20.9506 3.20701 21.1193C3.13471 21.2881 3.09749 21.4692 3.09749 21.6521C3.09749 21.835 3.13471 22.0161 3.20701 22.1849C3.2793 22.3537 3.38523 22.5068 3.51863 22.6353L13.6409 32.4575C13.7026 32.5176 13.7764 32.5646 13.8576 32.5955C13.9388 32.6264 14.0257 32.6405 14.1128 32.6371L26.1604 32.2181L27.8309 20.6321C27.8432 20.5503 27.8283 20.4668 27.7883 20.3939C27.7484 20.321 27.6856 20.2624 27.6091 20.2269L14.4903 14.0932C14.2797 13.9943 14.102 13.8394 13.9776 13.6464C13.8532 13.4533 13.7872 13.2299 13.7872 13.0018V4.81887C13.7823 4.44786 13.6291 4.09338 13.3602 3.83102C13.0913 3.56865 12.7281 3.41914 12.3479 3.41437C11.9706 3.42806 11.6126 3.58043 11.3457 3.84091C11.0788 4.1014 10.9226 4.45074 10.9086 4.81887V21.5715C10.9086 21.8111 10.8359 22.0453 10.6995 22.2445C10.5631 22.4437 10.3693 22.599 10.1425 22.6907C9.91566 22.7824 9.66607 22.8064 9.42528 22.7596C9.18449 22.7129 8.96333 22.5975 8.78975 22.428L6.25565 19.9598C6.12359 19.8296 5.96629 19.7262 5.79291 19.6559C5.61954 19.5855 5.43355 19.5495 5.24579 19.55L5.22691 19.5822Z"/> </g> </symbol><symbol viewBox="0 0 39 32" id="svg-icon-have-printer"><title>have-printer</title> <path d="M7.69591 0.000877285C7.49746 0.0195811 7.31318 0.111859 7.17932 0.259563C7.04547 0.407268 6.97171 0.59971 6.97257 0.799042V15.9642H1.7845C1.75957 15.963 1.7346 15.963 1.70967 15.9642C1.51122 15.9829 1.32694 16.0752 1.19308 16.2229C1.05923 16.3706 0.985476 16.563 0.986336 16.7623V30.3312C0.986357 30.5428 1.07046 30.7458 1.22014 30.8955C1.36982 31.0452 1.57282 31.1293 1.7845 31.1293H37.7019C37.9136 31.1293 38.1166 31.0452 38.2663 30.8955C38.416 30.7458 38.5001 30.5428 38.5001 30.3312V16.7623C38.5001 16.5507 38.416 16.3477 38.2663 16.198C38.1166 16.0483 37.9136 15.9642 37.7019 15.9642H32.5139V7.18436C32.5147 7.07776 32.4941 6.97208 32.4534 6.87355C32.4127 6.77502 32.3527 6.68564 32.2769 6.61068L25.8916 0.225361C25.7412 0.0798621 25.5396 -0.000751638 25.3304 0.000877285H7.77074C7.74581 -0.000292428 7.72084 -0.000292428 7.69591 0.000877285ZM8.5689 1.59721H24.1331V7.18436C24.1331 7.39604 24.2172 7.59905 24.3669 7.74873C24.5166 7.89841 24.7196 7.98251 24.9313 7.98253H30.9175V15.9642H8.5689V1.59721ZM25.7295 2.32054L29.7951 6.3862H25.7295V2.32054ZM12.0858 5.98712C11.981 5.99201 11.8781 6.0175 11.7832 6.06215C11.6882 6.10679 11.6029 6.1697 11.5323 6.2473C11.4616 6.32489 11.4069 6.41564 11.3714 6.51437C11.3358 6.6131 11.32 6.71787 11.3249 6.8227C11.3298 6.92753 11.3553 7.03037 11.4 7.12534C11.4447 7.2203 11.5076 7.30554 11.5852 7.37619C11.6628 7.44683 11.7536 7.50149 11.8523 7.53706C11.951 7.57262 12.0558 7.58838 12.1606 7.58345H20.1423C20.2481 7.58494 20.3531 7.5654 20.4512 7.52596C20.5494 7.48652 20.6387 7.42797 20.714 7.3537C20.7894 7.27944 20.8492 7.19094 20.89 7.09336C20.9308 6.99578 20.9518 6.89106 20.9518 6.78528C20.9518 6.6795 20.9308 6.57478 20.89 6.4772C20.8492 6.37962 20.7894 6.29112 20.714 6.21686C20.6387 6.14259 20.5494 6.08404 20.4512 6.0446C20.3531 6.00516 20.2481 5.98562 20.1423 5.98712H12.1606C12.1357 5.98595 12.1107 5.98595 12.0858 5.98712ZM12.0858 9.97794C11.981 9.98283 11.8781 10.0083 11.7832 10.053C11.6882 10.0976 11.6029 10.1605 11.5323 10.2381C11.4616 10.3157 11.4069 10.4065 11.3714 10.5052C11.3358 10.6039 11.32 10.7087 11.3249 10.8135C11.3298 10.9184 11.3553 11.0212 11.4 11.1162C11.4447 11.2111 11.5076 11.2964 11.5852 11.367C11.6628 11.4377 11.7536 11.4923 11.8523 11.5279C11.951 11.5634 12.0558 11.5792 12.1606 11.5743H27.3258C27.4316 11.5758 27.5366 11.5562 27.6347 11.5168C27.7329 11.4773 27.8222 11.4188 27.8975 11.3445C27.9728 11.2703 28.0326 11.1818 28.0735 11.0842C28.1143 10.9866 28.1353 10.8819 28.1353 10.7761C28.1353 10.6703 28.1143 10.5656 28.0735 10.468C28.0326 10.3704 27.9728 10.282 27.8975 10.2077C27.8222 10.1334 27.7329 10.0749 27.6347 10.0354C27.5366 9.99599 27.4316 9.97645 27.3258 9.97794H12.1606C12.1357 9.97677 12.1107 9.97677 12.0858 9.97794ZM2.58267 17.5605H36.9038V29.533H31.7157V25.5422C31.7157
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section', class_='clothing'):
        clothing_sections.append(section.text.strip())
    return clothing_sections
Results: []
Search result: 9.97677 12.1107 9.97677 12.0858 9.97794ZM2.58267 17.5605H36.9038V29.533H31.7157V25.5422C31.7157 25.3305 31.6316 25.1275 31.4819 24.9778C31.3322 24.8281 31.1292 24.744 30.9175 24.744H8.5689C8.54398 24.7428 8.51901 24.7428 8.49408 24.744C8.29562 24.7627 8.11134 24.855 7.97749 25.0027C7.84363 25.1504 7.76988 25.3428 7.77074 25.5422V29.533H2.58267V17.5605ZM34.5093 18.7578C33.848 18.7578 33.312 19.2938 33.312 19.955C33.312 20.6162 33.848 21.1523 34.5093 21.1523C35.1705 21.1523 35.7065 20.6162 35.7065 19.955C35.7065 19.2938 35.1705 18.7578 34.5093 18.7578ZM9.36707 26.3403H30.1194V29.533H9.36707V26.3403Z" fill="#4B4B4B"/> </symbol><symbol viewBox="0 0 14 20" id="svg-icon-location"><title>location</title> <g fill="currentColor"> <path d="M7,10.8c-1.7,0-3-1.4-3-3.2c0-1.8,1.3-3.2,3-3.2c1.7,0,3,1.4,3,3.2C10,9.4,8.7,10.8,7,10.8 M14,7.6
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: C14,3.4,10.9,0,7,0S0,3.4,0,7.6c0,2.1,0.8,4,2.1,5.4l0,0l5,7l5-7l0,0C13.2,11.6,14,9.7,14,7.6"/> </g> </symbol><symbol viewBox="0 0 22 28" id="svg-icon-made-in-italy"><title>made-in-italy</title> <path d="M1.5 1.47564C1.5 1.1995 1.27614 0.975644 1 0.975644C0.723858 0.975644 0.5 1.1995 0.5 1.47564H1.5ZM0.5 27C0.5 27.2761 0.723858 27.5 1 27.5C1.27614 27.5 1.5 27.2761 1.5 27H0.5ZM1.22082 1.75631C0.973071 1.63435 0.673363 1.73633 0.551405 1.98408C0.429448 2.23183 0.531425 2.53154 0.779177 2.6535L1.22082 1.75631ZM7.66667 3.03375L7.59322 2.53917L7.66667 3.03375ZM10.6296 2.2049L10.824 2.66557L10.824 2.66557L10.6296 2.2049ZM15.0741 1.09673L15.0226 0.599386L15.0226 0.599386L15.0741 1.09673ZM21 1.47563H21.5V1.09687L21.1354 0.994313L21 1.47563ZM1.22082 14.6295C0.973071 14.5075 0.673363 14.6095 0.551405 14.8573C0.429448 15.105 0.531425 15.4047 0.779177 15.5267L1.22082 14.6295ZM10.6296 15.0781L10.4353 14.6174L10.4353 14.6174L10.6296 15.0781ZM21 14.3488L20.8646 14.8301L21.5 15.0089V14.3488H21ZM0.5 1.47564V27H1.5V1.47564H0.5ZM0.779177 2.6535C1.98479 3.24696 4.65205 3.98692 7.74011 3.52832L7.59322 2.53917C4.72125 2.96568 2.25837 2.26705 1.22082 1.75631L0.779177 2.6535ZM7.74011 3.52832C8.73472 3.38062 9.77466 3.10833 10.824 2.66557L10.4353 1.74423C9.46914 2.15186 8.51112 2.40286 7.59322 2.53917L7.74011 3.52832ZM10.824 2.66557C12.2547 2.06191 13.734 1.73802 15.1255 1.59408L15.0226 0.599386C13.5528 0.751419 11.974 1.09497 10.4353 1.74423L10.824 2.66557ZM15.1255 1.59408C17.6284 1.33519 19.8148 1.66165 20.8646 1.95695L21.1354 0.994313C19.9657 0.665296 17.6525 0.327353 15.0226 0.599386L15.1255 1.59408ZM0.779177 15.5267C1.98479 16.1202 4.65205 16.8601 7.74011 16.4015L7.59322 15.4124C4.72125 15.8389 2.25837 15.1402 1.22082 14.6295L0.779177 15.5267ZM7.74011 16.4015C8.73472 16.2538 9.77466 15.9815 10.824 15.5388L10.4353 14.6174C9.46914 15.0251 8.51112 15.276 7.59322 15.4124L7.74011 16.4015ZM10.824 15.5388C12.2547 14.9351 13.734 14.6112 15.1255 14.4673L15.0226 13.4726C13.5528 13.6246 11.974 13.9682 10.4353 14.6174L10.824 15.5388ZM15.1255 14.4673C17.6284 14.2084 19.8148 14.5348 20.8646 14.8301L21.1354 13.8675C19.9657 13.5385 17.6525 13.2005 15.0226 13.4726L15.1255 14.4673ZM21.5 14.3488V1.47563H20.5V14.3488H21.5ZM7.16667 3.03375V15.9069H8.16667V3.03375H7.16667ZM14.5741 1.09673V13.9699H15.5741V1.09673H14.5741Z" fill="#666666"/> </symbol><symbol viewBox="0 0 21 21" id="svg-icon-next"><title>next</title> <g fill="currentColor"> <path fill-rule="evenodd" clip-rule="evenodd" d="M10.5 21C16.299 21 21 16.299 21 10.5C21 4.70101 16.299 0 10.5 0C4.9193 0 0.355468 4.35376 0.0197908 9.85H0V10.5V11.15H0.0197908C0.355468 16.6462 4.9193 21 10.5 21ZM0.0197908 11.15H12.4308L9.40381 14.177C9.14997 14.4308 9.14997 14.8424 9.40381 15.0962C9.65765 15.35 10.0692 15.35 10.323 15.0962L14.4596 10.9596C14.7135 10.7058 14.7135 10.2942 14.4596 10.0404L10.323 5.90381C10.0692 5.64997 9.65765 5.64997 9.40381 5.90381C9.14997 6.15765 9.14997 6.5692 9.40381 6.82304L12.4308 9.85H0.0197908C0.006661 10.065 0 10.2817 0 10.5C0 10.7183 0.006661 10.935 0.0197908 11.15Z"/> </g> </symbol><symbol viewBox="0 0 48 48" id="svg-icon-no-printer"><title>no-printer</title> <path d="M12.6959 5.98708C12.4975 6.00579 12.3132 6.09807 12.1793 6.24577C12.0455 6.39347 11.9717 6.58592 11.9726 6.78525V21.9504H6.7845C6.75957 21.9492 6.7346 21.9492 6.70967 21.9504C6.51122 21.9691 6.32694 22.0614 6.19308 22.2091C6.05923 22.3568 5.98548 22.5492 5.98634 22.7486V36.3174C5.98636 36.529 6.07046 36.732 6.22014 36.8817C6.36982 37.0314 6.57282 37.1155 6.7845 37.1155H42.7019C42.9136 37.1155 43.1166 37.0314 43.2663 36.8817C43.416 36.732 43.5001 36.529 43.5001 36.3174V22.7486C43.5001 22.5369 43.416 22.3339 43.2663 22.1842C43.1166 22.0345 42.9136 21.9504 42.7019 21.9504H37.5139V13.1706C37.5147 13.064 37.4941 12.9583 37.4534 12.8598C37.4127 12.7612 37.3527 12.6718 37.2769 12.5969L30.8916 6.21157C30.7412 6.06607 30.5396 5.98545 30.3304 5.98708H12.7707C12.7458 5.98591 12.7208 5.98591 12.6959 5.98708ZM13.5689 7.58341H29.1331V13.1706C29.1331 13.3822 29.2172 13.5853 29.3669 13.7349C29.5166 13.8846 29.7196 13.9687 29.9313 13.9687H35.9175V21.9504H13.5689V7.58341ZM30.7295 8.30675L34.7951 12.3724H30.7295V8.30675ZM17.0858 11.9733C16.981 11.9782 16.8781 12.0037 16.7832 12.0484C16.6882 12.093 16.6029 12.1559 16.5323 12.2335C16.4616 12.3111 16.4069 12.4018 16.3714 12.5006C16.3358 12.5993 16.32 12.7041 16.3249 12.8089C16.3298 12.9137 16.3553 13.0166 16.4 13.1115C16.4447 13.2065 16.5076 13.2917 16.5852 13.3624C16.6628 13.433 16.7536 13.4877 16.8523 13.5233C16.951 13.5588 17.0558 13.5746 17.1606 13.5697H25.1423C25.2481 13.5711 25.3531 13.5516 25.4512 13.5122C25.5494 13.4727 25.6387 13.4142 25.714 13.3399C25.7894 13.2656 25.8492 13.1771 25.89 13.0796C25.9308 12.982 25.9518 12.8773 25.9518 12.7715C25.9518 12.6657 25.9308 12.561 25.89 12.4634C25.8492 12.3658 25.7894 12.2773 25.714 12.2031C25.6387 12.1288 25.5494 12.0702 25.4512 12.0308C25.3531 11.9914 25.2481 11.9718 25.1423 11.9733H17.1606C17.1357 11.9722 17.1107 11.9722
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('symbol', id=lambda x: x and 'clothing' in x):
        clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: 12.0308C25.3531 11.9914 25.2481 11.9718 25.1423 11.9733H17.1606C17.1357 11.9722 17.1107 11.9722 17.0858 11.9733ZM17.0858 15.9641C16.981 15.969 16.8781 15.9945 16.7832 16.0392C16.6882 16.0838 16.6029 16.1467 16.5323 16.2243C16.4616 16.3019 16.4069 16.3927 16.3714 16.4914C16.3358 16.5901 16.32 16.6949 16.3249 16.7997C16.3298 16.9046 16.3553 17.0074 16.4 17.1024C16.4447 17.1973 16.5076 17.2826 16.5852 17.3532C16.6628 17.4239 16.7536 17.4785 16.8523 17.5141C16.951 17.5496 17.0558 17.5654 17.1606 17.5605H32.3258C32.4316 17.562 32.5366 17.5424 32.6347 17.503C32.7329 17.4636 32.8222 17.405 32.8975 17.3307C32.9728 17.2565 33.0326 17.168 33.0735 17.0704C33.1143 16.9728 33.1353 16.8681 33.1353 16.7623C33.1353 16.6565 33.1143 16.5518 33.0735 16.4542C33.0326 16.3567 32.9728 16.2682 32.8975 16.1939C32.8222 16.1196 32.7329 16.0611 32.6347 16.0216C32.5366 15.9822 32.4316 15.9627 32.3258 15.9641H17.1606C17.1357 15.963 17.1107 15.963 17.0858 15.9641ZM7.58267 23.5467H41.9038V35.5192H36.7157V31.5284C36.7157 31.3167 36.6316 31.1137 36.4819 30.964C36.3322 30.8143 36.1292 30.7302 35.9175 30.7302H13.5689C13.544 30.729 13.519 30.729 13.4941 30.7302C13.2956 30.7489 13.1113 30.8412 12.9775 30.9889C12.8436 31.1366 12.7699 31.329 12.7707 31.5284V35.5192H7.58267V23.5467ZM39.5093 24.744C38.848 24.744 38.312 25.28 38.312 25.9412C38.312 26.6024 38.848 27.1385 39.5093 27.1385C40.1705 27.1385 40.7065 26.6024 40.7065 25.9412C40.7065 25.28 40.1705 24.744 39.5093 24.744ZM14.3671 32.3265H35.1194V35.5192H14.3671V32.3265Z" fill="#4B4B4B"/> <line x1="45.2678" y1="1.76777" x2="1.76777" y2="45.2678" stroke="#4B4B4B" stroke-width="5"/> </symbol><symbol viewBox="0 0 6 14.4" id="svg-icon-phone"><title>phone</title> <g fill="currentColor"> <path d="M3.8,10.5c-0.2-1.9-0.9-6.6-1-6.7c-0.3,0.2-0.7,0.4-1,0.4c-0.2,0-0.4,0-0.6,0c0,0-0.1,0-0.1-0.1
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: C0.5,3.1,0.2,2.1,0,1c0-0.2,0.1-0.3,0.2-0.3C0.6,0.4,1,0.2,1.4,0.1C2.3-0.1,3,0,3.8,0.5C3.8,0.6,3.9,0.6,4,0.7
			c0.5,0.7,0.7,1.5,0.9,2.3c0.4,1.4,0.7,2.8,0.9,4.3c0.2,1.6,0.3,3.2,0.2,4.8c0,0.3-0.1,0.6-0.2,0.8c-0.1,0.3-0.3,0.5-0.5,0.7
			c-0.8,0.6-1.7,0.9-2.6,0.7c-0.2,0-0.4-0.1-0.6-0.2C2,14.1,2,14.1,1.9,14c-0.2-1.1-0.2-2.2,0-3.3c0-0.1,0.1-0.1,0.1-0.1
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section', class_='clothing'):
        clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: C2.6,10.4,3.2,10.3,3.8,10.5"/> </g> </symbol><symbol viewBox="0 0 28 31.5" id="svg-icon-responsible"><title>World3</title>   <path class="cls-1" d="M14.3613,28.6426c-.1729,0-.32-.001-.3789-.0029A14.09,14.09,0,0,1,1.3794,9.6631,14.1785,14.1785,0,0,1,7.19,2.5747l.2515.4067L7.19,2.5747A13.9361,13.9361,0,0,1,26.01,6.5693l-.4111.2842.4111-.2842a14.0305,14.0305,0,0,1,2.49,8.0049,18.42,18.42,0,0,1-3.8008,10.3145l-.4795-.3779-.4385.1709a6.31,6.31,0,0,0-.9033-1.55,3.5044,3.5044,0,0,1-.793-1.61c-.2-1.2979.0654-2.2324,2.0049-2.876.4814-.16.6367-.3193.6514-.3818.0439-.1846-.44-.6738-.6-.834a1.0167,1.0167,0,0,1-.1436-1.4385.981.981,0,0,0,.1943-.5176.3449.3449,0,0,0-.0078-.1108c-.0537.0229-.4873.1172-.7744.18l-.33.07a1.9251,1.9251,0,0,1-1.6426-.2148,1.1343,1.1343,0,0,1-.4043-.9165c0-.4409,0-.7876-.8994-1.7007a2.2385,2.2385,0,0,1-.502-2.8145l.09-.2651a1.9581,1.9581,0,0,1,1.0146-1.1436,3.0513,3.0513,0,0,1,2.1865-.1558c.0166.019.0508-.0376.0771-.0732a.932.932,0,0,1,1.0713-.4287,5.6161,5.6161,0,0,0,.9229-1.0332A12.9349,12.9349,0,0,0,8.11,3.1914,4.57,4.57,0,0,0,8.7227,4.208a6.1624,6.1624,0,0,0,2.6875.3706c.7231-.0132,1.2065-.0234,1.4619.3535a.7105.7105,0,0,1,.0386.7021c-.2437.5723-.8672.7441-1.47.91-.6758.186-1.1265.3379-1.2358.7393C9.8291,8.6641,9.127,9.11,7.8569,8.78a3.9522,3.9522,0,0,1-.8315-.3623c-.2114-.1118-.6011-.3169-.7109-.2754-.001,0-.1011.0459-.2061.3926A1.9109,1.9109,0,0,1,4.71,9.8809c-.0542.0186-.1211.041-.1709.061a1.382,1.382,0,0,0,.0742.22c.6533,1.5752.9624,2.01,1.7192,1.8706a3.6027,3.6027,0,0,0,.8472-.2954,1.7832,1.7832,0,0,1,2.4512.478l.2075.2241c1.0776,1.1685,1.6343,1.7188,2.5991,1.6445,1.0405-.0913,2.8892.3232,3.5132,1.3071a1.3877,1.3877,0,0,1-.001,1.499,8.9885,8.9885,0,0,1-2.1211,2.1382,5.6117,5.6117,0,0,0-1.3662,1.3291,4.9141,4.9141,0,0,1-1.43,1.6914,4.15,4.15,0,0,0-.7222.7295c.002.0439.1079.1563.1855.2373a3.6748,3.6748,0,0,1,.6953.9453.8947.8947,0,0,1-.3291,1.2188,2.6024,2.6024,0,0,1-3.0161-.69,5.1544,5.1544,0,0,1-.5415-4.3232,1.94,1.94,0,0,0-.9917-2.3945c-1.2524-.63-1.4795-3.0454-1.52-3.7739a3.21,3.21,0,0,0-1.0322-1.05A3.2189,3.2189,0,0,1,2.72,11.2466a4.55,4.55,0,0,0-.4746-1.0386A13.0894,13.0894,0,0,0,14.0186,27.64c.12.0049.63.002.9458.001l.2349-.001v1l-.23.001C14.793,28.6416,14.56,28.6426,14.3613,28.6426ZM5.105,12.7671a3.6583,3.6583,0,0,1,.6362.8823l.0464.1914c.0439,1.08.3755,2.7358.9756,3.0376A2.917,2.917,0,0,1,8.27,20.4277a4.1658,4.1658,0,0,0,.3677,3.45,1.6389,1.6389,0,0,0,1.1084.5273,1.34,1.34,0,0,0,.5249-.0439,2.8338,2.8338,0,0,0-.498-.6562,1.1212,1.1212,0,0,1-.3823-1.3184A3.65,3.65,0,0,1,10.37,21.3a4.4535,4.4535,0,0,0,1.1563-1.292,5.3139,5.3139,0,0,1,1.6724-1.7559,8.39,8.39,0,0,0,1.8862-1.8638.39.39,0,0,0,.0225-.4609,3.4353,3.4353,0,0,0-2.5835-.8472c-1.5.123-2.3437-.7949-3.42-1.9624l-.2051-.2222c-.5454-.5889-.7222-.51-1.3076-.2466a4.5114,4.5114,0,0,1-1.0767.3672A1.8361,1.8361,0,0,1,5.105,12.7671ZM24.7734,16.645c.0127.0093.0371.0391.0771.0791.4131.4165,1.0371,1.0454.8633,1.772-.1152.4854-.5439.8447-1.31,1.0986-1.458.4844-1.459.9414-1.3311,1.7744a2.6228,2.6228,0,0,0,.6084,1.168,8.48,8.48,0,0,1,.7119,1.0869,17.2776,17.2776,0,0,0,3.1064-9.05,13.0313,13.0313,0,0,0-1.9131-6.8213c-.42.5581-1.1562,1.3867-1.749,1.1245l-.0352.0474a.98.98,0,0,1-1.1963.4248,2.0738,2.0738,0,0,0-1.4229.1025.9517.9517,0,0,0-.5127.564l-.0918.2725c-.3037.8887-.3848,1.1274.2676,1.79a3.0537,3.0537,0,0,1,1.1865,2.4014c0,.0415.0049.1172.0371.1431.0625.0518.3076.1113.8125.0093l.3145-.0669c.67-.1455,1.249-.2705,1.6641.0762a1.0194,1.0194,0,0,1,.3311.8657,1.9338,1.9338,0,0,1-.3437,1.01C24.8242,16.5576,24.792,16.6094,24.7734,16.645ZM2.6445,9.2124a3.3413,3.3413,0,0,1,1.0142,1.6885,2.7934,2.7934,0,0,0,.6387,1.2021,4.2666,4.2666,0,0,1,.354.251A6.9683,6.9683,0,0,1,3.69,10.5449a1.3334,1.3334,0,0,1-.0815-1.042,1.1552,1.1552,0,0,1,.7808-.5688.9447.9447,0,0,0,.7622-.6885A1.4655,1.4655,0,0,1,5.93,7.2192a1.8455,1.8455,0,0,1,1.5635.3145A3.3032,3.3032,0,0,0,8.11,7.812c.5854.1553.8545.2236,1.13-.791.2656-.9771,1.2222-1.2446,1.9258-1.438A6.5413,6.5413,0,0,1,8.2573,5.09a3.2272,3.2272,0,0,1-.9956-1.37A13.1924,13.1924,0,0,0,2.6445,9.2124Zm21.5977-1.25.002,0Z" transform="translate(-0.5 -0.5)"/> <path class="cls-1" d="M19.5,32h-.126l-.207-.082a14.8515,14.8515,0,0,1-2.6582-1.7852C14.8442,28.7217,14,27.291,14,25.8809A2.9935,2.9935,0,0,1,17.0889,23,3.1647,3.1647,0,0,1,19.5,24.082,3.1647,3.1647,0,0,1,21.9111,23,2.9935,2.9935,0,0,1,25,25.8809c0,1.41-.8437,2.8408-2.5088,4.252a14.9873,14.9873,0,0,1-2.668,1.791A.7134.7134,0,0,1,19.5,32Zm.124-.9707.0039.002ZM17.0889,24A1.9956,1.9956,0,0,0,15,25.8809c0,1.374,1.1719,2.6553,2.1553,3.4883a14.3257,14.3257,0,0,0,2.3438,1.5947,14.3351,14.3351,0,0,0,2.3457-1.5947C22.8281,28.5361,24,27.2549,24,25.8809A1.9956,1.9956,0,0,0,21.9111,24a2.1673,2.1673,0,0,0-1.6533.7344l-.7578.8809-.7578-.8809A2.1673,2.1673,0,0,0,17.0889,24Z" transform="translate(-0.5 -0.5)"/> </symbol><symbol viewBox="0 0 65 30" id="svg-icon-returns-carrier"><title>returns-carrier</title> <path d="M64.9 16.2C64.2 13.9 61.9 7 56 7H48V1C48 0.4 47.6 0 47 0H17C16.4
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section', class_='clothing'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: <path d="M64.9 16.2C64.2 13.9 61.9 7 56 7H48V1C48 0.4 47.6 0 47 0H17C16.4 0 16 0.4 16 1V25C16 25.6 16.4 26 17 26H21.1C21.6 28.3 23.6 30 26 30C28.4 30 30.4 28.3 30.9 26H45H47H51.1C51.6 28.3 53.6 30 56 30C58.4 30 60.4 28.3 60.9 26H64C64.6 26 65 25.6 65 25V16.5C65 16.4 65 16.3 64.9 16.2ZM56 9C58.6 9 60.7 11 62.4 15H48V9H56ZM26 28C24.3 28 23 26.7 23 25C23 23.3 24.3 22 26 22C27.7 22 29 23.3 29 25C29 26.7 27.7 28 26 28ZM45 24H30.9C30.4 21.7 28.4 20 26 20C23.6 20 21.6 21.7 21.1 24H18V2H46V24H45ZM56 28C54.3 28 53 26.7 53 25C53 23.3 54.3 22 56 22C57.7 22 59 23.3 59 25C59 26.7 57.7 28 56 28ZM60.9 24C60.4 21.7 58.4 20 56 20C53.6 20 51.6 21.7 51.1 24H48V17H63V24H60.9Z" fill="#4B4B4B"/> <path d="M14 10H8V12H14V10Z" fill="#4B4B4B"/> <path d="M14 15H4V17H14V15Z" fill="#4B4B4B"/> <path d="M14 20H0V22H14V20Z" fill="#4B4B4B"/> </symbol><symbol viewBox="0 0 38 53" id="svg-icon-returns-label"><title>returns-label</title> <path d="M38 52.0873V11.6831C38 11.5614 38 11.4397 37.9394 11.3789C37.8788 11.2572 37.8182 11.1355 37.7576 11.0746L26.9697 0.243398C26.9091 0.182549 26.7879 0.0608496 26.6667 0.0608496C26.6061 0 26.4848 0 26.3636 0H0.909091C0.424242 0 0 0.425947 0 0.912744V52.0873C0 52.5741 0.424242 53 0.909091 53H37.0909C37.5758 53 38 52.5741 38 52.0873ZM27.2727 3.10333L34.9091 10.7704H27.2727V3.10333ZM36 51H2V2H25.3939V11.6831C25.3939 12.1699 25.8182 12.5959 26.303 12.5959H36V51Z" fill="#4B4B4B"/> <rect x="6" y="35" width="2" height="10" fill="#4B4B4B"/> <rect x="30" y="35" width="2" height="10" fill="#4B4B4B"/> <rect x="17" y="35" width="1" height="10" fill="#4B4B4B"/> <rect x="20" y="35" width="1" height="10" fill="#4B4B4B"/> <rect x="10" y="35" width="1" height="10" fill="#4B4B4B"/> <rect x="13" y="35" width="2" height="10" fill="#4B4B4B"/> <rect x="23" y="35" width="2" height="10" fill="#4B4B4B"/> <rect x="27" y="35" width="1" height="10" fill="#4B4B4B"/> <rect x="6" y="11" width="16" height="2" fill="#4B4B4B"/> <path d="M6 16H22V18H6V16Z" fill="#4B4B4B"/> <rect x="6" y="21" width="26" height="2" fill="#4B4B4B"/> </symbol><symbol viewBox="0 0 38 39" id="svg-icon-returns-package"><title>returns-package</title> <path d="M37.8 9.4L31.8 0.4C31.6 0.2 31.3 0 31 0H7C6.7 0 6.4 0.2 6.2 0.4L0.2 9.4C0.1 9.6 0 9.8 0 10V38C0 38.6 0.4 39 1 39H37C37.6 39 38 38.6 38 38V10C38 9.8 37.9 9.6 37.8 9.4ZM30.5 2L35.2 9H23.9L23.1 2H30.5ZM16.9 2H21.1L21.9 9H16.1L16.9 2ZM16 11H22V17H16V11ZM7.5 2H14.8L14 9H2.9L7.5 2ZM36 37H2V11H14V19H24V11H36V37ZM6 27H22V25H6V27ZM6 32H16V30H6V32Z" fill="#4B4B4B"/> </symbol><symbol viewBox="0 0 15 13.5" id="svg-icon-saved-items"><title>saved-items</title> <g fill="currentColor"> <path d="M12.5,5.3l-5,5.2l-5-5.3c0,0-0.8-0.9-0.8-1.5c0-1,0.8-1.8,1.7-1.8c0.6,0,1.1,0.3,1.4,0.9l2.6,2.7l2.7-2.8l0,0
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for symbol in soup.find_all('symbol'):
        if 'clothing' in symbol.get('id', ''):
            clothing_sections.append(str(symbol))
    return clothing_sections
Results: []
Search result: c0.3-0.5,0.8-0.9,1.5-0.9c0.9,0,1.7,0.8,1.7,1.8C13.4,4.4,12.5,5.3,12.5,5.3 M11.5,0c-1.1,0-2.1,0.6-2.7,1.5L7.5,2.8L6.2,1.5
			C5.6,0.6,4.6,0,3.5,0C1.5,0,0,1.7,0,3.8c0,1.2,0.5,2.3,1.4,3l1.3,1.4l4.9,5.3l0,0l0,0l4.9-5.3l1.2-1.4C14.5,6.1,15,5,15,3.8
			C15,1.7,13.5,0,11.5,0"/> </g> </symbol><symbol viewBox="0 0 33 33" id="svg-icon-search-circle"><title>search-circle</title> <g id="search-circle-search" fill="currentColor"> <path d="M14.90625,19.2484472 C12.75,19.2484472 10.96875,17.3850932 10.96875,15.1490683 C10.96875,12.9130435 12.75,11.0496894 14.90625,11.0496894 C17.0625,11.0496894 18.84375,12.9130435 18.84375,15.1490683 C18.9375,17.3850932 17.15625,19.2484472 14.90625,19.2484472 Z M20.0625,18.3167702 C20.625,17.3850932 20.90625,16.2670807 20.90625,15.1490683 C20.90625,11.7018634 18.28125,9 14.90625,9 C11.625,9 9,11.7018634 9,15.1490683 C9,18.5031056 11.625,21.2981366 14.90625,21.2981366 C16.21875,21.2981366 17.53125,20.8322981 18.46875,20.0869565 L22.3125,24 L24,22.5093168 L20.0625,18.3167702 Z" id="search-circle-search1"/> <path d="M16.5,0 C7.38644476,0 0,7.38644476 0,16.5 C0,25.6135552 7.38644476,33 16.5,33 C25.6135552,33 33,25.6121856 33,16.5 C33,7.38781439 25.6121856,0 16.5,0 Z M16.5,30.4223458 C8.81086578,30.4223458 2.57765419,24.1905039 2.57765419,16.5 C2.57765419,8.80949614 8.80949614,2.57765419 16.5,2.57765419 C24.1905039,2.57765419 30.4223458,8.80949614 30.4223458,16.5 C30.4223458,24.1905039 24.1891342,30.4223458 16.5,30.4223458 Z" id="search-circle-search2"/> </g> </symbol><symbol viewBox="0 0 16 16" id="svg-icon-search"><title>search</title> <g fill="currentColor"> <path d="M6.3,11C4,11,2.1,9,2.1,6.6c0-2.4,1.9-4.4,4.2-4.4c2.3,0,4.2,2,4.2,4.4C10.6,9,8.7,11,6.3,11 M11.8,10
			c0.6-1,0.9-2.2,0.9-3.4C12.7,2.9,9.9,0,6.3,0C2.8,0,0,2.9,0,6.6c0,3.6,2.8,6.6,6.3,6.6c1.4,0,2.8-0.5,3.8-1.3l4.1,4.2l1.8-1.6
			L11.8,10z"/> </g> </symbol><symbol viewBox="0 0 15 14" id="svg-icon-shopping-bag"><title>shopping-bag</title> <g fill="currentColor"> <path d="M13,4.2h-2.4l0-2c0-1.1-1.3-2-3-2s-3,0.8-3,2l0,2H1.9c-1,0-1.6,0.5-1.6,1.2l0.5,7.8h13.4l0.6-7.7
			C14.8,4.7,14,4.2,13,4.2z M6.1,2.2c0.1-0.1,0.6-0.5,1.5-0.5c0.9,0,1.4,0.3,1.5,0.5l0,2h-3L6.1,2.2z M12.8,11.7H2.2L1.8,5.8
			c0,0,0.1,0,0.1,0H13c0.1,0,0.2,0,0.2,0L12.8,11.7z"/> </g> </symbol><symbol viewBox="0 0 36 18" id="svg-icon-size"><title>size</title> <g fill="currentColor"> <path d="M0.717461 17.4883L35.0134 17.4883L35.0134 0.893457L29.5736 0.893457L29.0205 0.893457L23.8573 0.893456L23.3041 0.893456L18.142 0.893456L17.5889 0.893456L12.4257 0.893455L11.8725 0.893455L6.7093 0.893455L6.15614 0.893455L0.717462 0.893454L0.717461 17.4883ZM1.27062 1.44662L6.15614 1.44662L6.15614 10.2507L6.7093 10.2507L6.7093 1.44662L11.8725 1.44662L11.8725 6.62641L12.4257 6.62641L12.4257 1.44662L17.5889 1.44662L17.5889 10.2507L18.142 10.2507L18.142 1.44662L23.3041 1.44662L23.3041 6.62641L23.8573 6.62641L23.8573 1.44662L29.0205 1.44662L29.0205 10.2507L29.5736 10.2507L29.5736 1.44662L34.4603 1.44662L34.4603 16.9351L1.27062 16.9351L1.27062 1.44662Z" fill="#1B1B1B" stroke="#1B1B1B" stroke-width="0.6"/> </g> </symbol><symbol viewBox="0 0 33 27" id="svg-icon-warning"><title>warning</title><g fill="none" fill-rule="evenodd"><path stroke="#1B1B1B" stroke-width="2" d="M16.5 2L31 26H2z"/><path d="M15.26 19.11h2.38V11h-2.38v8.11zM15 21.56c0-.795.645-1.44 1.44-1.44.795 0 1.44.645 1.44 1.44-.005.793-.647 1.435-1.44 1.44-.795 0-1.44-.645-1.44-1.44z" fill="#1B1B1B"/></g></symbol></svg><div class="overlay-background prevent-document-scroll"></div>
		<div class="breakpoints">
			<div class="breakpoint standard" data-breakpoint="standard"></div>
			<div class="breakpoint large" data-breakpoint="large"></div>
			<div class="breakpoint medium" data-breakpoint="medium"></div>
			<div class="breakpoint small" data-breakpoint="small"></div>
			<div class="breakpoint retina" data-breakpoint="retina"></div>
		</div>
        <div class="hide">
            <div id="global-loginError">Invalid email and/or password. Try again or click on "Forgot your password?" link.</div>
            <div id="global-required">This field cannot be empty</div>
            <div id="global-match">The fields do not match</div>
            <div id="global-invadiEmail">Field is not a valid email</div>
            <div id="global-invalidPassword">Please enter valid password.</div>
        </div>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_tags = soup.find_all('div', class_='clothing-section')
    for tag in clothing_tags:
        clothing_sections.append(tag.text.strip())
    return clothing_sections
Results: []
Search result: <div id="page" class="js--handle-header-transparency _position-special">

					<style>
    #header-new-exp #header-main:after, #header-new-exp #header-main:before {
        content: none;
    }

    body #header-main {
        position: absolute;
    }

    #header-main {
        background-color: transparent!important;
    }

    #header-main.funhouse-header {
        height: auto;
        min-height: 72px;
        padding-inline: 0;
        position: relative;
    }

    #header-main:before, #header-main:after {
        content: none;
    }

    .sticky-bar-active #header-main #header-new-exp > div {
        margin-top: 50px;
    }

    .ssa-mobile {
      margin-top: -25px;
    }

    .ssa-mobile__link {
      display: inline;
    }

    @media only screen and (max-width : 1023px) {
        .sticky-bar-active #header-main #header-new-exp > div > nav {
            margin-top: -50px;
        }

        .double-image-pdp #page:not(._servicemenu-active):not(._header-compressed) .breadcrumb-icons-bg.solid-breadcrumb {
            background: rgba(255, 255, 255, 0.9);
            height: 45px;
            position: fixed;
            z-index: 99;
        }

        .double-image-pdp .breadcrumb-icons-bg.breadcrumb-icons-bg {
            top: 80px;
        }
    }

    @media only screen and (max-width : 767px) {
        .double-image-pdp .breadcrumb-icons-bg.breadcrumb-icons-bg {
            top: 50px;
        }

        .ssa-mobile {
            display: none;
        }
    }

    /* Fix for filterbar for PLP */
    body.funhouseHeaderFooter .filter-bar-container.filter-bar-sticky {
        top: 70px;
    }
    body.ssa-active .filter-bar-container.filter-bar-sticky {
        top: 119px;
    }
    @media only screen and (max-width : 1023px) {
        body.funhouseHeaderFooter .filter-bar-container.filter-bar-sticky {
         top: 71px;
        }
        body.ssa-active .filter-bar-container.filter-bar-sticky {
        top: 119px;
    }
    }
    /* Fix for filterbar for PLP - End */

    /* Fix for filterbar Stories page */
    @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter.t-stories .filters {
            transition: top 0.3s linear;
        }
    }
    body.funhouseHeaderFooter.t-stories .filters {
        top: 71px;
    }
    body.funhouseHeaderFooter.ssa-active.t-stories .filters {
        top: 119px;
    }
    body.funhouseHeaderFooter.with-promotional-banner.t-stories .filters:not(.sticky) {
        top: 127px;
    }
    body.funhouseHeaderFooter.ssa-active.with-promotional-banner.t-stories .filters:not(.sticky) {
        top: 175px;
    }
    body.funhouseHeaderFooter.t-stories .style-news-page {
        z-index: 2;
    }
    /* Fix for filterbar Stories page - End */

    /* Fix for filterbar for PDP */
    body.funhouseHeaderFooter.double-image-pdp .breadcrumb-icons-bg.fixed {
        top: 71px;
    }
    body.funhouseHeaderFooter.double-image-pdp.ssa-active .breadcrumb-icons-bg.fixed {
        top: 119px;
    }

    @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter.double-image-pdp #page:not(._servicemenu-active):not(._header-compressed) .breadcrumb-icons-bg {
            background: rgba(255, 255, 255, 0);
            transition: background, top 0.3s linear;
        }
        body.funhouseHeaderFooter.double-image-pdp #page:not(._servicemenu-active):not(._header-compressed) .breadcrumb-icons-bg.fixed {
            background: rgba(255, 255, 255, 0.9);
        }
    }

    @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter.double-image-pdp .breadcrumb-icons-bg {
            top: 71px;
        }
        body.funhouseHeaderFooter.double-image-pdp.ssa-active .breadcrumb-icons-bg {
            top: 119px;
        }
        body.funhouseHeaderFooter.double-image-pdp.with-promotional-banner .breadcrumb-icons-bg:not(.fixed) {
            top: 127px;
        }
        body.funhouseHeaderFooter.double-image-pdp.ssa-active.with-promotional-banner .breadcrumb-icons-bg:not(.fixed) {
            top: 175px;
        }
    }
    /* Fix for filterbar for PDP - End*/

    /* Fix for all paged */
    body.funhouseHeaderFooter #page {
        padding-top: 0;
    }
    /* Fix for Sign in page - End */

    /* Fix for assisted-service page */
    body.funhouseHeaderFooter .sign-in-sales-assistant {
        padding-top: 0;
    }
    /* Fix for assisted-service page - End */

    /* Fix for new order history page - custom select menu  */
    body.funhouseHeaderFooter:not(.double-image-pdp):not(.page-storeDetailsPage) .breadcrumb {
        top: 72px; /* header-height-small-funhouse is 71px, border is 1px */
        display: none; /* in second increment we decide to hide this breadcrumb */
    }
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for div in soup.find_all('div'):
        if 'clothing' in div.get('class', []):
            clothing_sections.append(div)
    return clothing_sections
Results: []
Search result: @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter ._breadcrumbs-on:not(._breadcrumbs-on-pdp) #header-main {
            background-color: transparent!important;
            position: absolute;
        }
    }

    @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter .hero-small {
            margin-top: -48px !important; /* ipad view: keep banner right below new header that is 71px height */
        }
    }

    @media screen and (max-width: 767px) {
        body.funhouseHeaderFooter .hero-small {
            margin-top: -18px !important; /* mobile view: keep banner right below new header that is 71px height */
        }
    }

    body.funhouseHeaderFooter section.history-order.order--collapse.collapse.js--order-mao {
        &:nth-child(n) {
             border-bottom: 1px solid #999;}

        &:nth-last-child(-n + 1)
         { border-bottom: none; }
    }
    /* Fix for new order history page - custom select menu - End*/

    /* Fix for wishlist button in new HF */
    @media only screen and (max-width: 1023px) {
        body.funhouseHeaderFooter li.saved-item.saved-item--private.GucciStyleVariantProductModel {
            padding: 0 16px;
        }

        body.funhouseHeaderFooter div.saved-item-content-price {
            margin-bottom: 6px !important;
        }
    }
    /* Fix for wishlist button in new HF - End*/
    /* Fix for newsearchpage BEGIN */
    body.funhouseHeaderFooter .SearchResults_results {
        margin-top: 0;
    }
    body.funhouseHeaderFooter.ssa-active .SearchResults_results {
        margin-top: -18px;
    }
    body.funhouseHeaderFooter.with-promotional-banner .SearchResults_results {
        margin-top: -10px;
    }
    body.funhouseHeaderFooter.ssa-active.with-promotional-banner .SearchResults_results {
        margin-top: 0;
    }
    body.funhouseHeaderFooter .SearchResults_resultsWrapper {
        top: 0;
    }
    body.funhouseHeaderFooter.ssa-active:not(.with-promotional-banner) .SearchResults_resultsWrapper {
        top: 18px;
    }
    /* Fix for newsearchpage END */
</style>
<script>
    window.addEventListener('scrollbar-on-top', function () {
        const breadCrumb = document.querySelector('.breadcrumb-icons-bg');
        if(breadCrumb && breadCrumb.classList){
            breadCrumb.classList.remove("solid-breadcrumb");
        }
    });

    window.addEventListener('scrollbar-not-on-top', function () {
        const breadCrumb = document.querySelector('.breadcrumb-icons-bg');
        if(breadCrumb && breadCrumb.classList){
            breadCrumb.classList.add("solid-breadcrumb");
        }
    });

</script>
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['GucciStyleVariantProductModel']
    for element in soup.find_all(class_=True):
        if any((keyword in element['class'] for keyword in clothing_keywords)):
            clothing_sections.append(str(element))
    return clothing_sections
Results: []
Search result: <header id="header-main" class="funhouse-header">
    
      
          <script crossorigin src="https://unpkg.com/react@18.2.0/umd/react.production.min.js"></script>
          <script crossorigin src="https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js"></script>
      <style data-styled="true" data-styled-version="5.3.6">.fgqtQM{background:var(--g-color-background,white);box-shadow:0 4px 8px rgb(0 0 0 / 8%);display:block;}/*!sc*/
.fgqtQM[data-isopen='false']{display:none;}/*!sc*/
.fgqtQM > span:first-child{position:absolute;-webkit-transform:translate(0,-12px);-ms-transform:translate(0,-12px);transform:translate(0,-12px);}/*!sc*/
data-styled.g247[id="Flyout__FlyoutContent-sc-1bd69cbe-0"]{content:"fgqtQM,"}/*!sc*/
.bvBqXk{position:relative;z-index:100;color:var(--g-color-foreground);-webkit-transition:min-height 0.8s cubic-bezier(0.5,0,0,1);transition:min-height 0.8s cubic-bezier(0.5,0,0,1);will-change:min-height;min-height:var(--g-header-expanded-height);}/*!sc*/
.bvBqXk[data-expanded='true'][data-transparent='false']{min-height:calc( 100vw / 5.958 + var(--g-header-expanded-height) );}/*!sc*/
@media screen and (min-width:1366px){.bvBqXk[data-expanded='true'][data-transparent='false']{min-height:calc( 1440px / 5.958 + var(--g-header-expanded-height) );}}/*!sc*/
.bvBqXk a,.bvBqXk button{color:var(--g-color-foreground);}/*!sc*/
data-styled.g277[id="Header-styles__HeaderContainer-sc-ac4431f2-0"]{content:"bvBqXk,"}/*!sc*/
.bVmNSK{position:fixed;top:0;left:0;right:0;background:var(--g-color-background);}/*!sc*/
.bVmNSK[data-transparent='true']{background:transparent;}/*!sc*/
.bVmNSK[data-transparent='false']{-webkit-transition:background 1.2s ease;transition:background 1.2s ease;will-change:background;}/*!sc*/
data-styled.g278[id="Header-styles__FixedContainer-sc-ac4431f2-1"]{content:"bVmNSK,"}/*!sc*/
.ilsAMc{box-sizing:border-box;margin:0 auto;max-width:1440px;padding:1.5rem 1rem;}/*!sc*/
.ilsAMc[data-transparent='true']{--g-color-foreground:var(--g-color-white);}/*!sc*/
@media screen and (min-width:768px){.ilsAMc{padding:1.5rem 2rem;}}/*!sc*/
@media screen and (min-width:1024px){.ilsAMc{padding:1.5rem 4rem;}}/*!sc*/
data-styled.g279[id="Header-styles__ContentContainer-sc-ac4431f2-2"]{content:"ilsAMc,"}/*!sc*/
.cCGnOL{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;height:24px;position:relative;}/*!sc*/
@media screen and (min-width:1024px){.cCGnOL{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}}/*!sc*/
data-styled.g280[id="Header-styles__HeaderContent-sc-ac4431f2-3"]{content:"cCGnOL,"}/*!sc*/
.GWyks{-webkit-transition:opacity 0.8s cubic-bezier(0.5,0,0,1), width 0.8s cubic-bezier(0.5,0,0,1), -webkit-transform 0.8s cubic-bezier(0.5,0,0,1), padding-bottom 0.8s cubic-bezier(0.5,0,0,1);-webkit-transition:opacity 0.8s cubic-bezier(0.5,0,0,1), width 0.8s cubic-bezier(0.5,0,0,1), transform 0.8s cubic-bezier(0.5,0,0,1), padding-bottom 0.8s cubic-bezier(0.5,0,0,1);transition:opacity 0.8s cubic-bezier(0.5,0,0,1), width 0.8s cubic-bezier(0.5,0,0,1), transform 0.8s cubic-bezier(0.5,0,0,1), padding-bottom 0.8s cubic-bezier(0.5,0,0,1);width:143px;height:0;padding-bottom:0;will-change:width,transform,padding-bottom;-webkit-transform:translate3d(0,-24px,0);-ms-transform:translate3d(0,-24px,0);transform:translate3d(0,-24px,0);}/*!sc*/
.GWyks[data-expanded='true']{width:100%;-webkit-transform:translate3d(0,24px,0);-ms-transform:translate3d(0,24px,0);transform:translate3d(0,24px,0);height:auto;padding-bottom:24px;}/*!sc*/
@media screen and (min-width:1024px){.GWyks{margin:0 auto;}}/*!sc*/
data-styled.g282[id="Logo-styles__LogoContainer-sc-34f7ed9f-0"]{content:"GWyks,"}/*!sc*/
.kgomaz{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}/*!sc*/
@media screen and (min-width:1024px){.kgomaz{-webkit-box-flex:unset;-webkit-flex-grow:unset;-ms-flex-positive:unset;flex-grow:unset;}}/*!sc*/
data-styled.g283[id="Logo-styles__LogoAnchor-sc-34f7ed9f-1"]{content:"kgomaz,"}/*!sc*/
.iucPUP{position:absolute;-webkit-transform:translateY(-20px);-ms-transform:translateY(-20px);transform:translateY(-20px);}/*!sc*/
.iucPUP a{display:inline-block;top:0;-webkit-transform:translateX(-10000px);-ms-transform:translateX(-10000px);transform:translateX(-10000px);}/*!sc*/
.iucPUP a:focus{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}/*!sc*/
data-styled.g284[id="SkipToMainContent-styles__SkipLinkContainer-sc-69ef5c84-0"]{content:"iucPUP,"}/*!sc*/
.iDExEj{-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:0;margin:0;list-style:none;line-height:0;}/*!sc*/
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_classes = ['clothing-section', 'apparel', 'fashion']
    for clothing_class in clothing_classes:
        sections = soup.find_all(class_=clothing_class)
        for section in sections:
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: .iDExEj > li{padding-left:1rem;}/*!sc*/
@media screen and (min-width:1024px){.iDExEj > li{padding-left:1.5rem;}}/*!sc*/
[dir='rtl'] .HeaderActions-styles__Wrapper-sc-238c46e3-0 > li{padding-right:1rem;padding-left:0;}/*!sc*/
@media screen and (min-width:1024px){[dir='rtl'] .HeaderActions-styles__Wrapper-sc-238c46e3-0 > li{padding-right:1.5rem;}}/*!sc*/
.iDExEj > li > button,.iDExEj > li > nav > button{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:transparent;border:0;box-sizing:border-box;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-family:inherit;font-size:0.75rem;font-weight:700;gap:0.5rem;padding:0;}/*!sc*/
data-styled.g297[id="HeaderActions-styles__Wrapper-sc-238c46e3-0"]{content:"iDExEj,"}/*!sc*/
.dDXDov{position:relative;}/*!sc*/
data-styled.g298[id="Cart-styles__CartIconButton-sc-c1ba3843-0"]{content:"dDXDov,"}/*!sc*/
.hVdhak{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-bottom:1px solid #ccc;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:30px;padding-right:30px;}/*!sc*/
data-styled.g300[id="MiniCart-styles__MiniCartHeader-sc-acaa53ee-0"]{content:"hVdhak,"}/*!sc*/
.jgIXNn{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding:20px 0;text-align:center;}/*!sc*/
data-styled.g301[id="MiniCart-styles__Title-sc-acaa53ee-1"]{content:"jgIXNn,"}/*!sc*/
.KMrDW{background-color:transparent;border:none;cursor:pointer;height:24px;}/*!sc*/
data-styled.g302[id="MiniCart-styles__CloseButton-sc-acaa53ee-2"]{content:"KMrDW,"}/*!sc*/
.nemsV{border-bottom:1px solid #ccc;max-height:260px;overflow-x:hidden;overflow-y:auto;padding:20px 10px 0;}/*!sc*/
.nemsV > .header-nav-bag-item > .header-nav-bag-item-link{-webkit-text-decoration:none;text-decoration:none;display:block;padding:0;}/*!sc*/
.nemsV > .header-nav-bag-item > .header-nav-bag-item-link::before{height:0;}/*!sc*/
.nemsV > .header-nav-bag-item > .header-nav-bag-item-link:hover,.nemsV > .header-nav-bag-item > .header-nav-bag-item-link:focus{background-color:transparent;}/*!sc*/
data-styled.g303[id="MiniCart-styles__CartItemList-sc-acaa53ee-3"]{content:"nemsV,"}/*!sc*/
.frGiZm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:16px 24px;gap:16px;}/*!sc*/
data-styled.g311[id="MiniCart-styles__MiniCartFooter-sc-acaa53ee-11"]{content:"frGiZm,"}/*!sc*/
.ioRsLI{box-shadow:0 8px 25px rgba(0,0,0,0.1);margin:0 1rem;-webkit-transform:translate(0,26px);-ms-transform:translate(0,26px);transform:translate(0,26px);width:calc(100% - 2rem);z-index:1;position:fixed;left:unset;right:0;}/*!sc*/
.ioRsLI > span:first-child{display:none;}/*!sc*/
[dir='rtl'] .MiniCartFlyout-styles__FlyoutContainer-sc-3fa5a85d-0{left:0;right:unset;}/*!sc*/
@media screen and (min-width:768px){.ioRsLI{margin:0;width:488px;position:absolute;}}/*!sc*/
data-styled.g312[id="MiniCartFlyout-styles__FlyoutContainer-sc-3fa5a85d-0"]{content:"ioRsLI,"}/*!sc*/
.eqBCyA{padding:2rem 1rem;}/*!sc*/
.eqBCyA li{list-style:none;margin-bottom:2rem;}/*!sc*/
.eqBCyA li a{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/
.eqBCyA li:last-child{border-bottom:none;margin-bottom:0;}/*!sc*/
data-styled.g313[id="MyAccountList-styles__FlyoutList-sc-ec9cd27-0"]{content:"eqBCyA,"}/*!sc*/
.bHtSkS{box-shadow:0 8px 24px rgba(0,0,0,0.1);border-radius:4px;margin:0 1rem;z-index:10;-webkit-transform:translate(0,16px);-ms-transform:translate(0,16px);transform:translate(0,16px);position:fixed;left:0;right:0;}/*!sc*/
.bHtSkS > span:first-child{display:none;}/*!sc*/
@media screen and (min-width:768px) and (max-width:1023px){.bHtSkS{margin:0 2rem;}}/*!sc*/
@media screen and (min-width:1024px){.bHtSkS{min-width:220px;margin:0;position:absolute;left:unset;right:0;}[dir='rtl'] .MyAccountFlyout-styles__FlyoutContainer-sc-b4ad4d95-0{left:0;right:unset;}.bHtSkS > span:first-child{display:none;}}/*!sc*/
data-styled.g315[id="MyAccountFlyout-styles__FlyoutContainer-sc-b4ad4d95-0"]{content:"bHtSkS,"}/*!sc*/
.iDlpDQ{display:none;text-transform:uppercase;-webkit-transition:color 0.8s cubic-bezier(0.5,0,0,1);transition:color 0.8s cubic-bezier(0.5,0,0,1);}/*!sc*/
@media screen and (min-width:1024px){.iDlpDQ{display:block;}}/*!sc*/
data-styled.g325[id="NavigationDrawer-styles__MenuText-sc-be9db841-0"]{content:"iDlpDQ,"}/*!sc*/
.kXJrBw{-webkit-transition:visibility 0.8s cubic-bezier(0.5,0,0,1);transition:visibility 0.8s cubic-bezier(0.5,0,0,1);visibility:visible;}/*!sc*/
.kXJrBw[data-hidden='true']{visibility:hidden;}/*!sc*/
data-styled.g326[id="NavigationDrawer-styles__DrawerWrapper-sc-be9db841-1"]{content:"kXJrBw,"}/*!sc*/
.dFpUxh{display:contents;}/*!sc*/
data-styled.g327[id="NavigationDrawer-styles__Nav-sc-be9db841-2"]{content:"dFpUxh,"}/*!sc*/
.hAajWu{list-style:none;padding-bottom:2.4rem;padding-top:0;}/*!sc*/
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    sections = soup.find_all(class_='clothing-section')
    for section in sections:
        clothing_sections.append(str(section))
    return clothing_sections
Results: []
Search result: .hAajWu{list-style:none;padding-bottom:2.4rem;padding-top:0;}/*!sc*/
.hAajWu[data-menulevel='l1']{padding-bottom:1.5rem;}/*!sc*/
.hAajWu:not([data-menulevel='l1']),.hAajWu [data-has-submenu='true']{padding-bottom:2rem;}/*!sc*/
.hAajWu[data-is-first-non-shoppable-item='true']{padding-top:1rem;}/*!sc*/
data-styled.g328[id="MenuItem-styles__ListItem-sc-87a3cc41-0"]{content:"hAajWu,"}/*!sc*/
.fZfrjf{margin:2rem 0 3rem;}/*!sc*/
data-styled.g332[id="NavigationLevelCategory-styles__NavigationLevelCategory-sc-3168c9ee-0"]{content:"fZfrjf,"}/*!sc*/
.guAybY{cursor:default;}/*!sc*/
data-styled.g333[id="NavigationLevelCategory-styles__TitleWithoutLink-sc-3168c9ee-1"]{content:"guAybY,"}/*!sc*/
.jtfzdM{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/
data-styled.g334[id="NavigationLevelCategory-styles__TitleWithLink-sc-3168c9ee-2"]{content:"jtfzdM,"}/*!sc*/
.krolXR{padding:3rem 0.25rem 0;}/*!sc*/
.krolXR li{list-style:none;padding-bottom:2.4rem;}/*!sc*/
data-styled.g335[id="NavigationBottomLinks-styles__NavigationBottomLinksList-sc-7a265d69-0"]{content:"krolXR,"}/*!sc*/
.iSpjbW{overflow:hidden;}/*!sc*/
@media screen and (max-width:1024px){.iSpjbW{padding-top:3.5rem;}.iSpjbW::before{content:'';position:absolute;width:100%;height:4rem;top:0;left:0;background:var(--g-color-background);z-index:1;}.iSpjbW::after{content:'';position:absolute;width:100%;height:6rem;bottom:0;left:0;pointer-events:none;background:linear-gradient( 180deg, rgba(0,0,0,0%) 0%, var(--g-color-background,var(--g-color-white)) 100% );}}/*!sc*/
data-styled.g336[id="NavigationMenu-styles__Container-sc-2c41a551-0"]{content:"iSpjbW,"}/*!sc*/
.bVKhNM{position:relative;width:300%;min-height:auto;-webkit-transition:-webkit-transform 0.8s cubic-bezier(0.5,0,0,1);-webkit-transition:transform 0.8s cubic-bezier(0.5,0,0,1);transition:transform 0.8s cubic-bezier(0.5,0,0,1);}/*!sc*/
.bVKhNM[data-menulevel='l1']{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}/*!sc*/
.bVKhNM[data-menulevel='l2']{-webkit-transform:translateX(calc(-100% * (1 / 3)));-ms-transform:translateX(calc(-100% * (1 / 3)));transform:translateX(calc(-100% * (1 / 3)));}/*!sc*/
[dir='rtl'] .NavigationMenu-styles__MenuLevelsContainer-sc-2c41a551-1[data-menulevel='l2']{-webkit-transform:translateX(calc(+100% * (1 / 3)));-ms-transform:translateX(calc(+100% * (1 / 3)));transform:translateX(calc(+100% * (1 / 3)));}/*!sc*/
.bVKhNM[data-menulevel='l3']{-webkit-transform:translateX(calc(-100% * (2 / 3)));-ms-transform:translateX(calc(-100% * (2 / 3)));transform:translateX(calc(-100% * (2 / 3)));}/*!sc*/
[dir='rtl'] .NavigationMenu-styles__MenuLevelsContainer-sc-2c41a551-1[data-menulevel='l3']{-webkit-transform:translateX(calc(100% * (2 / 3)));-ms-transform:translateX(calc(100% * (2 / 3)));transform:translateX(calc(100% * (2 / 3)));}/*!sc*/
data-styled.g337[id="NavigationMenu-styles__MenuLevelsContainer-sc-2c41a551-1"]{content:"bVKhNM,"}/*!sc*/
.bhPUTn{padding:4px;box-sizing:border-box;-webkit-transition:visibility 0.8s cubic-bezier(0.5,0,0,1);transition:visibility 0.8s cubic-bezier(0.5,0,0,1);visibility:visible;}/*!sc*/
.bhPUTn[data-visibility='false']{visibility:hidden;}/*!sc*/
.bhPUTn span,.bhPUTn svg,.bhPUTn path{-webkit-transition:none;transition:none;}/*!sc*/
data-styled.g338[id="NavigationMenu-styles__NavigationListContainer-sc-2c41a551-2"]{content:"bhPUTn,"}/*!sc*/
.ljiuAQ{position:absolute;top:0;}/*!sc*/
data-styled.g339[id="NavigationMenu-styles__NavigationNestedListContainer-sc-2c41a551-3"]{content:"ljiuAQ,"}/*!sc*/
.bwAUal{width:calc(100% / 3);}/*!sc*/
data-styled.g340[id="NavigationMenu-styles__Level1Container-sc-2c41a551-4"]{content:"bwAUal,"}/*!sc*/
.kkucmq{width:calc(100% / 3);-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);}/*!sc*/
[dir='rtl'] .NavigationMenu-styles__Level2Container-sc-2c41a551-5{-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}/*!sc*/
data-styled.g341[id="NavigationMenu-styles__Level2Container-sc-2c41a551-5"]{content:"kkucmq,"}/*!sc*/
.hHiRMk{width:100%;-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);}/*!sc*/
[dir='rtl'] .NavigationMenu-styles__Level3Container-sc-2c41a551-6{-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}/*!sc*/
data-styled.g342[id="NavigationMenu-styles__Level3Container-sc-2c41a551-6"]{content:"hHiRMk,"}/*!sc*/
.cwLFJG{padding:0;margin:0;}/*!sc*/
data-styled.g343[id="NavigationMenu-styles__List-sc-2c41a551-7"]{content:"cwLFJG,"}/*!sc*/
.fxpLwF{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;row-gap:2rem;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:98%;padding-bottom:3.5rem;}/*!sc*/
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: data-styled.g344[id="ThematicNavigation-styles__ThematicNavigation-sc-df60268-0"]{content:"fxpLwF,"}/*!sc*/
.fFmcdv{width:48%;}/*!sc*/
.fFmcdv:only-child{width:100%;}/*!sc*/
data-styled.g345[id="ThematicNavigationItem-styles__Wrapper-sc-2938a222-0"]{content:"fFmcdv,"}/*!sc*/
.kfrYnO{display:block;object-fit:cover;width:100%;vertical-align:top;-webkit-transition:-webkit-transform 0.8s cubic-bezier(0.5,0,0,1);-webkit-transition:transform 0.8s cubic-bezier(0.5,0,0,1);transition:transform 0.8s cubic-bezier(0.5,0,0,1);}/*!sc*/
.kfrYnO:hover{-webkit-transform:scale(0.95);-ms-transform:scale(0.95);transform:scale(0.95);}/*!sc*/
data-styled.g346[id="ThematicNavigationItem-styles__Image-sc-2938a222-1"]{content:"kfrYnO,"}/*!sc*/
.anpAr{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;width:100%;vertical-align:top;padding-top:0.5rem;visibility:hidden;}/*!sc*/
data-styled.g347[id="ThematicNavigationItem-styles__Label-sc-2938a222-2"]{content:"anpAr,"}/*!sc*/
.iBdBrZ{-webkit-text-decoration:none;text-decoration:none;color:inherit;pointer-events:none;}/*!sc*/
data-styled.g348[id="ThematicNavigationItem-styles__Anchor-sc-2938a222-3"]{content:"iBdBrZ,"}/*!sc*/
.fJQUsA{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:transparent;border:0;box-sizing:border-box;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;font-family:inherit;font-size:0.75rem;font-weight:700;gap:0.5rem;color:inherit;visibility:hidden;pointer-events:none;}/*!sc*/
@media screen and (min-width:1024px){.fJQUsA{display:inherit;opacity:1;-webkit-transition:opacity 0.8s cubic-bezier(0.5,0,0,1), visibility 0.8s cubic-bezier(0.5,0,0,1);transition:opacity 0.8s cubic-bezier(0.5,0,0,1), visibility 0.8s cubic-bezier(0.5,0,0,1);visibility:visible;pointer-events:unset;}.fJQUsA:focus-within{opacity:1;visibility:visible;pointer-events:unset;}.fJQUsA[data-hide='true']{opacity:0;pointer-events:none;}}/*!sc*/
.fJQUsA span{-webkit-transition:color 0.8s cubic-bezier(0.5,0,0,1);transition:color 0.8s cubic-bezier(0.5,0,0,1);}/*!sc*/
.fJQUsA svg{-webkit-transition:rotate 0.8s cubic-bezier(0.5,0,0,1);transition:rotate 0.8s cubic-bezier(0.5,0,0,1);}/*!sc*/
.fJQUsA:hover svg{rotate:90deg;}/*!sc*/
data-styled.g350[id="ContactUs-styles__Button-sc-486ee8f4-0"]{content:"fJQUsA,"}/*!sc*/
</style><link rel="stylesheet" href="https://prd-gucci-store-services.guccidigital.io/_next/static/chunks/markup/headerFooter/layoutCSS.084f31e767ce9cd7a507.css?version=c29bd42"><link rel="stylesheet" href="https://prd-gucci-store-services.guccidigital.io/_next/static/chunks/markup/headerFooter/uiKitCSS.084f31e767ce9cd7a507.css?version=c29bd42">
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_classes = ['clothing-section', 'apparel']
    for clothing_class in clothing_classes:
        sections = soup.find_all(class_=clothing_class)
        for section in sections:
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: <div id="header-new-exp" data-testid="header-new-exp"
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_classes = ['clothing-section', 'apparel', 'fashion']
    for clothing_class in clothing_classes:
        sections = soup.find_all(class_=clothing_class)
        for section in sections:
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: data-header="eyJuYXZpZ2F0aW9uTWVudUNvbnRlbnQiOnsibmFtZSI6Ik5PUkFNIC0gTmF2aWdhdGlvbiBNZW51IiwiaXRlbXMiOlt7Im5hbWUiOiJOT1JBTSAtIEwxIEdpZnRzIiwibGFiZWwiOiJHaWZ0cyIsInRoZW1hdGljTmF2aWdhdGlvbiI6W3sibGFiZWwiOiJHaWZ0cyBGb3IgSGVyIiwibmFtZSI6Ik5PUkFNIC0gVGhlbWF0aWMgTmF2IEdpZnRzIEZvciBIZXIiLCJsaW5rIjoiL2NhL2dpZnRzL2dpZnRzLWZvci13b21lbi1jLWdpZnRzLWZvci1oZXIiLCJpbWFnZSI6eyJ0aXRsZSI6IlRoZW1hdGljX0d1Y2NpLVdvbWVuLUZXMjQtSnVseTI0LTE2MjMtR1VDLTAyNkQtMDA3MS12Mi1NRUEiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9SNGpKa0d3ZWlkazgzM044NDZqRkhscmlHb1VPbStkbHBtTWpiclN0dkNncXloT2g1ekRfVFV3STlDMzY3ZkVOUkQ5d29Zc2FPeW83dEZvQ2lzK2JvV1I2M2FDTWorenJDZzVYUXBNVzRpZGlUK1BPcjFXOVU1c3BQRGtqV2VNRV9jYlF6QTJJdGF4WUdBSDZRMkljcXRtb0ZjM3p0MXFSUmVTaTFhVEUybUxONHN6STg5QlM2Z25wcVJnbXkwRFZ1MUZXZFRLNzVUZTdtckNva1JPXzN3OHFGYlZtd09qcHJfUU13OGR5Zlk3N2xsWVc5a1E1MUVpVXNuc3Vnblkwcmt0TUt2V0FRblJWZTRSQUFNY1FvOElnYitKcGt3WDlnSUxSamZINHB3MXlFQkdlNHhMbk8xcnBnVDB5cjlIREpCWHRMb2p0Qm9ScitfZUcwYyttU1RpZGFZWU9CMDlNSEpwanNwR2tqTDA9L1Byb21vQ29tcG9uZW50X0d1Y2NpLVdvbWVuLUZXMjQtSnVseTI0LTE2MjMtR1VDLTAyNkQtMDA3MS12Mi1NRUFfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9PY3BSZHRIdEZKTUg0eWJHSGdoUmdlanRkQ3BRY1orMHhJOEpuSDhYWkROSVFjM2dCbzRrdV9ydFQyQkZLTVMzdWFrZ1V2akNhdmc0WGNERUVXdFlDZit1N0VJVmlzMG1jTEtBeDJnZUVWVkxMdFlYcnpsZ3JpMWJTU1RrQU1idEJMdzJidW9OTUc3ZEg1RkYybHFqVkJVTHpYajNVZEpicG1iNUFTWnVvZ1l2emJzczFXQ0l1RkJXbmw4cjZtZ2wzYkdGRXUxRWU3T1c0bTRUckJXemlISW5lVmNMZklaSWs2NTgwalZ4azFKb0ltTEtVSml3R1UyWEMxWWdGbTdNNUVoczRrRml4WU8xQ2FYeVVIOUxESlhURStTeHdGbXZMN0lvS18rd21pbUpkQ3VxbFlkeUxaNXp6S0I0KzN5a3FCVzdOb0VzcmlrT2dMY1pkcTVzdFZFREhVOE1ZWGRhd19vOUJSVjc1Qm4xTGdPQ0V0aW1OVDZxZXZJUENyVDIvUHJvbW9Db21wb25lbnRfR3VjY2ktV29tZW4tRlcyNC1KdWx5MjQtMTYyMy1HVUMtMDI2RC0wMDcxLXYyLU1FQV8wMDFfRGVmYXVsdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvYWtjRmtQYVcxZ3NRM2JpajludVVhV2VWUUlqMk9IOElxaHowdHZaUkFkMFVhXzJ6MGh0c3hZcmpBUXBzYmFiTGJkQkhEd2JmQ19XbEhhWEdwQl9ZTnNSNElubmQyVzAxMk5vUjIyWXd4c2tZcUcrY0lWWHpPT3ZaV0RnVUhLM3Jta0JGMWVsQkVlZUNwSFJsK3lMaG9JY0k0UDNXWWMzbE1qOEtiN1BFSmhHVGFuY0pzNFRNMXk4bFA1ODF2a29qTFpYRWs3NVNmY2V6NjdRNDR4VEZQVzhNbTRpYXFKc2w0MDdDQ2J0Q1BlYlRDTDJ1RzM4RXRFTFRKaDFYUGFXNlE2MGxzWDJ1TFNzQzdJVGZVS3FlMVRmUWpFWm9jYytwcUJ0N0VZa2YrMm9qdTZXNHlRbEFsemE4d29CQm42aTRNUkxWM29fQUdvdSs3WCtRNEU1VU9LQUZWYmpyWG9XaDEwTXJWSGZ2d2cramVrWFdpZWYwX0Q1YSt5Z24rX1Z4L1Byb21vQ29tcG9uZW50X0d1Y2NpLVdvbWVuLUZXMjQtSnVseTI0LTE2MjMtR1VDLTAyNkQtMDA3MS12Mi1NRUFfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiR2lmdHMgRm9yIEhpbSIsIm5hbWUiOiJOT1JBTSAtIFRoZW1hdGljIE5hdiBHaWZ0cyBGb3IgSGltIiwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItbWVuLWMtZ2lmdHMtZm9yLWhpbSIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfR3VjY2ktTWVuLUp1bmUyNC0xNjIyLUdVQy0wMDRCLTAzNjctRy12MyIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L05aM0ZERk1jcVU5S2F1ZkkzaXlKWTRKakRuSUVLVERIZEdweldXZV9rNjdXNjBwU2N3aEErc3RZRHk1OFRaSVpnUnA0NldlQTFCbXVUN3VGdmw4QUk0d09SanZOZ0V2VURlTHRhQ3NlaCtNdXo3Q1FpUFczQWNsRHV2ZnBjOWlRUTRjNHA3UE55bE1YY1hhdnV5d1d3R00wNjJBNzJiMDBVenBDMEV4bURmU2w2THB0RU8yQW1FK2wydDN1T3BRZXRzdVJxbXBmR1BQaVh3T1JGTXRYQWVTd3BHUGVOUVAyWnlsVTcxazlBYmpWcThIR0M5SFlJMl9fMXZ2NXNSUlZjeit3ZDQ1eDc1eFV1TGgyZnpBdDNrYUJZb19CS3dYTWhXejZ6ZVIzVjVYQVdQaU5yRE16R2ZNZEI2N1graTh6UDBOVnlaaytDb0FFSERlQlR3OTBQd3g1c1NyRk9nclZvM3k4bFRoeVg2ND0vUHJvbW9Db21wb25lbnRfR3VjY2ktTWVuLUp1bmUyNC0xNjIyLUdVQy0wMDRCLTAzNjctRy12M18wMDFfRGVmYXVsdF9fMV8ucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9iVjZzc3Z4bWlqRG5fa0F3b2VTaDNGWDdtUlFxb3hjbjEzVGZySW15V2dKSE1yNUJPcmNCeU13dmg0WXBFcXgzVkp3NExUaVllMmZjRVZqWDk0Sit1WkpyNUNQX3JkYmxiNDBzZlI2d2lRYklLVUQyNWFwblBKVEk5X0lOanN0MzNoK0k0Z1JKZTFjRFpjV3pJUkZRbVRNX21TWGpiS1dzTWFTZDVGMElDM2hNSG1Xbk53d2VCYkpTT29RaVpOZ1Q5em9USjU0bGVfUWxZSWhiOTZXcUFHODZkcDBqSTlWMlBqdnZUNjkwMGVXSTVVMjFLN0dRRE05eV92SmxDN2tyVG02aTlaSjByQ0VEMm4wVDhtWms1Z2dOcjhJN3ZJWDVlZ3p1WG44ZmxoaGJza0RESWtvX01BRXFYRGxVNXNzeGZDUFVZdUVqYXg3a0U3SlVydGF1blJIYjlKWFRQQVBBVktGcnZHSmxLV0U9L1Byb21vQ29tcG9uZW50X0d1Y2NpLU1lbi1KdW5lMjQtMTYyMi1HVUMtMDA0Qi0wMzY3LUctdjNfMDAxX0RlZmF1bHRfXzFfLnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC85YV9PY0E5dURhVXJYTTFrN2lyR1ZQbXZ5cHYrRmFHdHcrbmY0cWFSWWQzMGVESys3d1Rfc3ZJUWN4VXhQX0kxZVVFXzVuRFFFb2RMczNIX0RiSUpQc0J0aDlvWDRmYmk1TThFeGVMRGhCbUtKWEV0TjBTODlyWHg3Y2dpSUtTZF9zZUs5Mzc1c1E5MFFmbHBRX0VTVHptQWJPX1ZvODRiRkx2aFk1aFZZaDFuUEYybG1RdDlaMFFnVm9wZ2Z0RzRDaFVOcGJ3ZlF6blp6NEFPUVpxMnRuUHpOODBrMkNJVlNHQTliTmtLQkh1YUFJVHRoUktJR0wyNmlnRWpqNWJEUXhSd0tTUnhqbkZkMmpWWVhiS3U4Sk1wYVdfRXFlWk85ZDB5RWhzY2dYeURpaWVEUDNtbUNxZ0x4OW41TXhPaFdhemJqdUhicXB2YWNSekRYdEo5MXRQVjI3amFxMnIyRDgwejIwZWhfQVE9L1Byb21vQ29tcG9uZW50X0d1Y2NpLU1lbi1KdW5lMjQtMTYyMi1HVUMtMDA0Qi0wMzY3LUctdjNfMDAxX0RlZmF1bHRfXzFfLnBuZyJ9fX1dLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIFBlcnNvbmFsaXNlZCBHaWZ0cyIsImxhYmVsIjoiUGVyc29uYWxpemVkIEdpZnRzIiwibGluayI6Ii9uc3QvbW9ub2dyYW1taW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtICBMMiBHaWZ0cyBGb3IgQ2hpbGRyZW4iLCJsYWJlbCI6IkdpZn
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    data_header = soup.get('data-header')
    if not data_header:
        return []
    try:
        data = json.loads(data_header)
    except json.JSONDecodeError:
        return []
    clothing_sections = []
    for item in data.get('navigationMenuContent', {}).get('items', []):
        if 'clothing' in item.get('label', '').lower():
            clothing_sections.append(item)
    return clothing_sections
Results: []
Search result: NOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtICBMMiBHaWZ0cyBGb3IgQ2hpbGRyZW4iLCJsYWJlbCI6IkdpZnRzIEZvciBDaGlsZHJlbiIsImxpbmsiOiIvY2EvZ2lmdHMvZ2lmdHMtZm9yLWNoaWxkcmVuLWMtZ2lmdHMtZm9yLWNoaWxkcmVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJlYXV0eSBHaWZ0cyIsImxhYmVsIjoiQmVhdXR5IEdpZnRzIiwibGluayI6Ii9jYS9iZWF1dHkvZ2lmdC1pZGVhcy1jLWJlYXV0eS1naWZ0LWlkZWFzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIERlY29yICYgTGlmZXN0eWxlIEdpZnRzIiwibGFiZWwiOiJEw6ljb3IgJiBMaWZlc3R5bGUgR2lmdHMiLCJsaW5rIjoiL2NhL2dpZnRzL2RlY29yLWxpZmVzdHlsZS1naWZ0cy1jLWRlY29yLWxpZmVzdHlsZS1naWZ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL25zdC9naWZ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMSBOZXcgaW4iLCJsYWJlbCI6Ik5ldyBJbiAiLCJ0aGVtYXRpY05hdmlnYXRpb24iOlt7ImxhYmVsIjoiR3VjY2kgSmFja2llIiwibmFtZSI6Ik5PUkFNIC0gV04gVGhlbWF0aWMgTmF2IEd1Y2NpIEphY2tpZSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9qYWNraWUtMTk2MSIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfR3VjY2ktV29tZW4tRlcyNC1KdWx5MjQtMTYyMy1HVUMtMDIzLTAxOTItdjItTUVBIiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvQm1NNzErMmFFeGt0a3E1SDlZVXZfeHJ3SU1oa0MwVDAwcDZhVnNGMFhUbHdSSmxzUUpLUmUwWjBUNHMrbHNCUF9Ccmg2MVUwcmJLSWd0cFRrUmhXcHRna2dDM1VnZ09JOHBEanFaNzE3b2F5amlSR0FxOGh2Ym1DXzd5ZlFNcnlZRndEaDdJb1l1SzNzTGgrQjdnR0FGcTZLZ0FYTTdmQ3I1bDVtQ1hVUFM2QXlqVk9CRmlsNXJxX1gxTlQxYW1tMWZBVjJtX0ZQdmlZcCtZT2NJYytNUTRMZk14QU1OQnlpQ3Q0UmJHNHVfWlN5Y0ZheVRMbW5TTzl4WWdHM0FaWGpEWjdhYTZSNzhyTHRtVzZLbHk3TzU2UE1GWjlZVUI1bXRNOUs4ak9Oc01nSDhKTlB5RDFKQVZyRmNrRnZHTjNscVVKdk9iaXB1VVpkWWRCOTBoNWZqYittZUVGdGQ5blNWTERsM2tQbDdJPS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1Xb21lbi1GVzI0LUp1bHkyNC0xNjIzLUdVQy0wMjMtMDE5Mi12Mi1NRUFfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9lclRvVlJGR2ZKa2NHaEVUVEVrSng4ZWV5aDZUTkVIditZZDlQOXNGS3NfQjNFU3RCMENPVTFrbzlHMG5OUU93NXhwcFZUZlZDUUdfNW43SlJnUzVydldHRl9TUlJaYXFiTmEzb1Z4ZXgwczN0Yk5SWlBkZ3NqRUNCR2RKOW9rMkhkTDZIaTkyNWFYWU1OUk5tbUttbWpfQWhQVzJUQkRISER3YW5xRmxkS1dQSnhvc0gzUEN0Z1hRYnhxT0QrTG42SEVybGJDNTl0UEd3Sk01ZFlOSzZrU25wcUV5Y0c2cXpkZEx5R3JpVjNDWFU5Z2dHaERRZm5JNnBaSmZhNWFkVXBva3YxZzVmWWt0bDh0cE1naWxhWnRlKzhPOEJBdWlHRmNXTmlUX3NJMElBSU14TDZKWkxkbjJrYk1rTGdBdElYalhQd2RGczRtRkg2Xzd2MjFDN3hObUdMa29XUXQ0YmVoOHdabm41M1E9L1Byb21vQ29tcG9uZW50X0d1Y2NpLVdvbWVuLUZXMjQtSnVseTI0LTE2MjMtR1VDLTAyMy0wMTkyLXYyLU1FQV8wMDFfRGVmYXVsdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvd3owM3E1dU42OExLaWV0elNsK0FPc3NSQ1hWVXBKcnR3VmVBcStEQXlEV092SE13a1h0dnVTZDZOOHFQdlY3VEdzem9BbXhFaGxKek15YVp3UzhQVmkxVnNIZE1yUU94NEJlZjVJaGVzSVM1cTFic2IwTGxBWXlBRnlCTE52RUlZaU13UEMyM2l2b3VKSmxlWWpQK0lMZDVYYXgzdjFBU1lBWWp4Yjd4dkpXVFBDaVZZZnltUEdxQlUzbkw5U3VqaEp3aGh0YUJTU1IzeGZGTUtldlVfRUIzZnBxS0xMb09MNUJYbmh1ejV0dnJlb3drQmdORldsQ21NTlByUG5QcWFhdldvRVNra28ydU5kX04wb3hsbzdWM1BXK18xY3hyNzZKWDNxWWc4b2xHQnN5alJIWG13NlR3bW1GMkl6RzZ3MEEzV1ZjUDVaUmRfQWZEUmRpd3FJT1JmdFltRmR6WDFucFg4Z2IraDdVPS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1Xb21lbi1GVzI0LUp1bHkyNC0xNjIzLUdVQy0wMjMtMDE5Mi12Mi1NRUFfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiV29tZW4ncyBTaG9lcyIsIm5hbWUiOiJOT1JBTSAtIFdOIFRoZW1hdGljIE5hdiBTaG9lcyBXIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4tYy13b21lbi1zaG9lcyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfR3VjY2ktV29tZW4tRlcyNC1KdWx5MjQtMTYyMy1HVUMtMDA5RS0wMDQ0LXY4ICIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0hGc096NEFYelYrbU5LQWQ5SzBLcXBWbTNxRGt1S3ZYRHplSEZ4cE9WVUNtUUFhYldzanJQZUJEQTU4NFlqd0hmbkNYUEZhQmg3WXUyNHVHNWE4akJEbWp6MkV6UURkQ3YrVUE1Nm96TmZnWExPditfZTlmMm1WbUdod1RNQ3A4Y2plRHg3b0N4dlhwMDU1Z2N4WTlGcmZXSlYyTUdadDgxYnowMm5YaWoyMzkza1NNOURhWDdFYXhPQzZGV3N4b1VIYm83eVU2NlVwQlpsc2p3WWd1QTh1VGZEY2VRdGhCTnVod3VnUFlWbzJRdmFMalBuSlF5VmNrNCsyWjlNWlphQlI5TmwrUWRFdGhLMGZFQXdCUU5FK0lzNDJBR1l1cVAreHNfd2xxZWczTWRzVkhfeGRfbW5EUjBzOVhPWWQ0S3RaT19fR0pSZnIxYl84ZlFrT1JrTGFjTFZNVWpjaEF5Xzh2V0ZkUW13az0vUHJvbW9Db21wb25lbnRfR3VjY2ktV29tZW4tRlcyNC1KdWx5MjQtMTYyMy1HVUMtMDA5RS0wMDQ0LXY4XzAwMV9EZWZhdWx0LnBuZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvWmkzU3NKU2xlVk1pM2YrYllkVE9SK1p0NmRrUml0QVk2Z0dUcXRSdytxTHJ2WEdrUGxwNXQ3d1JyeXl3U1JmZVNkbVRHZHoyQWtkenpxTFE3ZGZ2QlBlMFNKRjBwMCswY1I3aUxCME9IUnNwU21JSGFLWGFoWitjZjZPeG02cHRUN1Zmc244ZWRXd1lMZjBzTmRPSHk1ekU3Q2ZOTm5nbWlPQmpDZ2dlcFM5dFRMNGY2UE5VRVQ1Z09iQWt6bW1rNmlFalo2WG9LNGxmQk54ZVJmVzYzN25xRXZjOXhQSkI3QnJTdDRUZ1dWWkxFdXpuVjZwcVNQVWFxcHZ1dHFHaHJCRzA0TlAraFU2ZkNYK3JRTWRQUkFHQmViRWNNTUd1NDErZkFUN1pXd0lhbl9Td3lEK0NzdmtBbTdpaWgxaDROTDhlTFQxTWNzblhWY01RSG1MZkRLS3RGdHRKRXVGSklEX3E3UUdpU2wwPS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1Xb21lbi1GVzI0LUp1bHkyNC0xNjIzLUdVQy0wMDlFLTAwNDQtdjhfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1NwY1J4RUNBOVd1Z0ptbjFlQUdrU29iUzY4dEp5R3I1UTJxMlJkZ0VTVmFvK0FvTXZmcXExS1pnSDVFX25zMHlJUzJqd2FaMEdZZ01sUVZjU0d6MmlETEZCN1hTUG1oYWs2TllwdlhPVkFNbVlNb0dLYWlYV3p2bm1SQWRYUUhRbVM2Wkt0MFZTTF9xSWxHTUp1UVNfRHFrUStMQ2pjWHhPMkxoNWNZaTFfQ2MwN2xTU0tyVzNpY3FHMFZCK2FLSDV2eFZOanlNX2Z1ZnlUdXVzcDRZOVRqOTZZaXdhV0xiM1RZK3dXeHh5ck1tSlU2c1VBaF84Qm1uUml2cH
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['clothing', 'apparel', 'fashion']
    for section in soup.find_all('section'):
        if any((identifier in section.get('class', []) for identifier in clothing_identifiers)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: tyVzNpY3FHMFZCK2FLSDV2eFZOanlNX2Z1ZnlUdXVzcDRZOVRqOTZZaXdhV0xiM1RZK3dXeHh5ck1tSlU2c1VBaF84Qm1uUml2cHpIdUxqVmt6RnlYTTBSQmJINXp4YkhFVWFZV2J6TW5OMUQ2SmJKX2x4T1JyN3lFU05LaU9sMHdFRVpuaWhYSzR2UGsrejFCQnk1a2N3WDFNWXFoTnVTdk5iNEtJTmpjejMrR2Q0dnRMOFc3cEF1Zz0vUHJvbW9Db21wb25lbnRfR3VjY2ktV29tZW4tRlcyNC1KdWx5MjQtMTYyMy1HVUMtMDA5RS0wMDQ0LXY4XzAwMV9EZWZhdWx0LnBuZyJ9fX1dLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMiBOZXcgV29tZW4iLCJsYWJlbCI6IldvbWVuIiwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay13b21lbi1jLW5ldy13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBOZXcgTWVuICIsImxhYmVsIjoiTWVuIiwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay1tZW4tYy1uZXctbWVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdOIEdHIEVtYmxlbSBjYXBzdWxlIiwibGFiZWwiOiJOZXcgR0cgRW1ibGVtIiwibGluayI6Ii9zdC9jYXBzdWxlL2dnLWVtYmxlbSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXTiBCbG9uZGllIENhcHN1bGUiLCJsYWJlbCI6Ikd1Y2NpIEJsb25kaWUgQmFnIiwibGluayI6Ii9zdC9jYXBzdWxlL2d1Y2NpLWJsb25kaWUiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gV04gTG9hZmVycyBNIiwibGFiZWwiOiJNZW4ncyBMb2FmZXJzIiwibGluayI6Ii9jYS9tZW4vc2hvZXMtZm9yLW1lbi9sb2FmZXJzLWZvci1tZW4tYy1tZW4tc2hvZXMtbW9jY2FzaW5zLWFuZC1sb2FmZXJzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdOIFdpbnRlciBTZWxlY3Rpb24gVyIsImxhYmVsIjoiV2ludGVyIFNlbGVjdGlvbiIsImxpbmsiOiIvY2Evd2hhdHMtbmV3L2FwcmVzLXNraS1mb3Itd29tZW4tYy13b21lbi13aW50ZXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gV04gRlcgU0hTIFdvbWVuIiwibGFiZWwiOiJGYWxsIFdpbnRlciBTaG9lcyIsImxpbmsiOiIvY2Evd29tZW4vc2hvZXMtZm9yLXdvbWVuL3dpbnRlci1zaG9lcy1mb3Itd29tZW4tYy13b21lbi13aW50ZXItc2hvZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9zdC93aGF0LW5ldyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMSBIYW5kYmFncyIsImxhYmVsIjoiSGFuZGJhZ3MiLCJ0aGVtYXRpY05hdmlnYXRpb24iOlt7ImxhYmVsIjoiR0cgRW1ibGVtIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgR0cgRW1ibGVtIiwibGluayI6Ii9zdC9jYXBzdWxlL2dnLWVtYmxlbSIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfR0cgRW1ibGVtLTgxNTIxM0ZBRDZMOTc1OCIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1FMNjVabUVHb1dSWG1QZV9PZ1RJTEhfTGJOZFpTMVh5UGhaUVFvZjRVTm04SUE0d1p2dkc5d2F1OGlwUF9MTzJBMThQcmFBSGU4MlVLYWV5SEFWWGRDcTB1NzdjYkVRZnFRcm1lSE90RloyT1BSalB5R2lROGVjbmFzcnpJdTgyOW92dmNJcm92TmRaRGZBVUl2SmxPX1VrdDZJT0plY1NmU3NqZEJpRlM5NlNNVmZ0YXFFRHVHNVNRck5DWF9IOUExeVBVMFA5dnRSTjlpYzlBYUx3YnB5Sm5uUkM0bFUyVUxfQ2ZVaDdsY1pqcSt0MUIwcjc4a2R5Wkx3bGlzQWwvODE1MjEzX0ZBRDZMXzk3NThfMDAxXzEwMF8wMDAwX0xpZ2h0LTEuanBnIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9vV3FhNmFMMnNwT2ZWRDE4X1dKdXZlNFp5VHJQU0tlTGhpaW1reXNKdkJ6U3NFZXZhZ0FUb0p5TnhMdmNGd2NXdHZ0OVFzd1F2MTl3QkFZMUdybHMrdzdpSUN2ajNURnlTZEZNVENqZDlRenRJZUtMUmNzV2EyU0pCdnRyVlo5eGZtaUxuNkVieVc3enQxWHBLWjczMUpxU1V2NUhxYnRibjlyaXZ6QndNX3NzWXJYZEhZaXBVWlJMSFcxU0V1ZHdLNUR2VEEyUzFLcTNwZFRLT1kwWVpxZzk4OUZZSktnVWZ1OUdqckVlSzlTUlRjWGNoaG0wcVhzemxfeTZFV1RTWDRYZVZJRG45SWJ0aE52dTJEVGJiZz09LzgxNTIxM19GQUQ2TF85NzU4XzAwMV8xMDBfMDAwMF9MaWdodC0xLmpwZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9zRUV2UEFBZUxQUV9YVE5jWWU3UndVS2VGNklOUjNSK3NORWVkNXcrSnRPMUpvdHpqRDVFSUU5eERzd21Xd0FQYU55RUtpTlFEaW1OK0ZGMXZEcHRfOUxQQ1VWYUMyMGlmeEJTUzR3WGhEMXQyaVB5dEN1TFJjdllLQTBGMWdQcTRvaUJPSkhUK0dGSUwrNE40dXQzM0lVaVB1MWM3T0V4MDBXUlRsbXJSUTdjR1k2YXhTRjBVSE1DYjRWNWxvckJ1aVFPZjE4Qml1dm1kcnlGN0cwRUp3aXV2SF9mWGtOQUdkVXNQempETXNyMV9hK0RWbk5OSnE2Vmx4dmMraU92NWZHZ3ZJZVR1VFVaaGQ0aVNScHFzUT09LzgxNTIxM19GQUQ2TF85NzU4XzAwMV8xMDBfMDAwMF9MaWdodC0xLmpwZyJ9fX0seyJsYWJlbCI6Ikd1Y2NpIEJsb25kaWUiLCJuYW1lIjoiV1cgLSBUaGVtYXRpYyBDYXBzdWxlIEd1Y2NpIEJsb25kaWUiLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktYmxvbmRpZSIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfTmV3IEJsb25kaWUiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9DcWtVMFMrY3FzVXhId01SbENJQkVuaFZORG52cDk0Zlo2WU9UaEczU01jdFlfRnlJeThNTVhaX3g2OHk1U0xPSXF6QkdLVGdrVGdyaE9VVjlDQVMxRHUyb1lVb0NscnlCV0pXZmZuaFUrVW1BZ1BSRUV2M1lNdlVqY0dqdXpPMFMrcldnTHFpMDJwQjdxeVJmMjByazJpZmxOdjNoX2hUS1drdXJtY19HSE5sTG1KVHBUOWZKalZmaWl5SDA2MXhjMldLeVdReFN4VU90WnlGY0hTSitCaVdrajVFeCs5aTloanpKMVZNNXdQeGdycl85NGtIZW1xSGdkVExTSUNBTFhpQSszRVlMSmRFREV0TjRadFVIZz09LzgxNTcxNF9BQUVDXzIyNzE4XzAwMV8xMDBfMDAwMF9MaWdodC0xLTIwLS5qcGciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3VuV0pOV1hHVk9kd2dfRjhOUnVjWnJJOFdBc21uWF9pcFFxdnEwM0dZb1JGcWc5dUlmMG93TTdXclp0QWtZd2JRbEI3dVNzRElIdzJNTmF6UStGTnlKWl9uM0I4QUg5QTNCVHVkSUZWdENaT21xXzQ0a0xtYkx0Y3paQzRidjdLQ01jNHlZY0RWZGhLQUl2bHNBTWtEWmdmbEtiYllSUjh6Mm05T25UckNDNEJVRjhPeE9Ib1VZal84enNGcXFPYlE2bmVNZzFRYXd2bmV6N3o4NmZDOGplMVk4ZXVmaHZwNnFxWWFvUXBuMUcxWTl4M0FOUmJ4bzBBdmMzV3o4Sk10b2ltR2xrSFE5S28zajFtaUllalFRPT0vODE1NzE0X0FBRUNfMjI3MThfMDAxXzEwMF8wMDAwX0xpZ2h0LTEtMjAtLmpwZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9qSmVqQ2ROOE8xckdHVWlZUmJkSU1EbkxsbzdHWCtDbHFsaUYxU3VaX0laR3JsVkNXcGZpQys5MHl0ZmJXK1oyaG9PVkJQVVlQWGdmd180a2ppOUZZRDRvdityQ3FQZ0pwMXc0aTdTODh5YlVOYzVGR2xKbDFqRlpudCtJN0FORWdwYVZOTU5sU1VhVnBkVUUxR0VRUDhoWStyOGd1ejh5MFd0c2VnMzFwRn
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['clothing', 'apparel', 'fashion', 'wear']
    for section in soup.find_all(['section', 'div']):
        if any((identifier in section.get('class', []) for identifier in clothing_identifiers)) or any((identifier in section.get('id', '') for identifier in clothing_identifiers)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: pwMXc0aTdTODh5YlVOYzVGR2xKbDFqRlpudCtJN0FORWdwYVZOTU5sU1VhVnBkVUUxR0VRUDhoWStyOGd1ejh5MFd0c2VnMzFwRnJnN1JVNXVXa2E2eUJlRlc0NDhqQVFTTlhUUG9RV1g0TjdaV3Q2MU9qOEVJdDNYcVJ3YlBKcDhPQkwyVlZ0b0N4V0xQTEV3YUk4ZnBrbldmR0QyZ3Mra0JKb19ZaGpUcktwcWF4eXlBTEJGdz09LzgxNTcxNF9BQUVDXzIyNzE4XzAwMV8xMDBfMDAwMF9MaWdodC0xLTIwLS5qcGcifX19LHsibGFiZWwiOiJHRyBNYXJtb250IiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBHRyBNYXJtb250IiwibGluayI6Ii9zdC9jYXBzdWxlL2dnLW1hcm1vbnQtY29sbGVjdGlvbiIsImltYWdlIjp7InRpdGxlIjoiR0cgTWFybW9udCIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0dSQUZyR0FBdXZHMThRZFJjT0RGK3Y4NXpuZWxjcGhvT3A0dTdvaXFURDlLUzhuSjdBc0tBWG9tZ2p2MHFFVUh4WTZBTWpxQlR1RU51TDRQZ0NmTHhkeGM3bEM4MjFjVWptX2FuMmZVaGpscFJsVUkxRGpsa19YV0Zock9semdnYmlUOVNUb2ZkekZyWWpnUk51a1FSaUVNWVpDTXdMNWxHdk9Uc0hXdStUOEF4U3BIWWRQZURxSHp3T0xLVDBKby9NYXJtb250LnBuZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvT2hsQmIrdkt1V1pnSVFYT2NCNDZLSmtLcVRucmIyemd4UnJNdmZUd2YzUnVnSWtsNWJtd2RDSDdMdnI2Rmw2bzVXQWdzK2Y4eVNtNjRZV0M0ektuWmdvM2l6TThwMVVwbExBbDlMZ1R0RXpYUW9xZXdFc1FBcVA2TDEzY3FwVHFLcW0rMTdVc2FVNlJhX1JxREwyQ3ZzeTNnbDVOODRmMDlaWmE5YXMxTUp4STN3SXd2aTZqb2hsVm9JQlVaaUNfL01hcm1vbnQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4LytKaStlUDd1dzBpbVltNTM2d0dlQ3NfeGdQWkU1SGVGSTRDdF9uNWE0WndKaFFRbjN5TUlQNHVUellKT3RDdlpCYUNrcUFKNTRxaGxudzJnR3hFaVlUTDhBUmkwOWhKcGdOcWdaMVZZRFh4YUwxQzl0aDJ4MlpBKzBaMjE0RFZLRmlaMl9PdFVzdWdXRGxSeElDeTJ6Tmd3c2IxUEp2WHV2R0h1eU53dDNVK2lMTW92ajJTOEdCN2ZReE5aMXE4Ty9NYXJtb250LnBuZyJ9fX0seyJsYWJlbCI6Ikd1Y2NpIEIiLCJuYW1lIjoiV1cgLSBUaGVtYXRpYyBDYXBzdWxlIEd1Y2NpIEIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktYi1iYWciLCJpbWFnZSI6eyJ0aXRsZSI6IlRoZW1hdGljXzgxNTkyNF9IQUFLR185NzU1XzAwMV8xMDBfMDAwMF9MaWdodCIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3BQMndHRmZaYTdrcTBfclh0NXB2SVZYVDdrdUhTb2xad0FFbXZIcE55dTRWYUEyUEJQZ0E4ZFNfRysxdnkzVjFaOHBmdlB2SFROaXEzU28zKzlWUkVPR0R0bUlydFBWTGZ5Z0FoZDJPYVJqOVNNSVYwQ1RSTms4c2lCTjVIQ1F2a1h1aWJrZzZ2VXV1QlhXVEZ1Y0h4RkJ0ckQ3ZmJNRnVqY1lrYzd1cE44cXRsVUhYUDE2dmR6eV9USGROYmFJZ3ZuYjV0V1RxUVZOYlY4Nnp1NnR6V2o4RDVNcE1jdEE1QnljWUlHb0M4UUtBZ0t2dFlaenJOMm1ndXJaT3NHQlEvODE1OTI0X0hBQUtHXzk3NTVfMDAxXzEwMF8wMDAwX0xpZ2h0LmpwZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvVDFxMkRBNXlOcjJjY3pENkxLNGpxRE12RGJsUUF2NUo4RU9qQzE2X2MwcVhRaUlrc2RRRVYzdXVKblpmWnJTVkFucDFOZkpZY2ludFp6dlpOUHZVaE93RUo5Sjlwc0ZXSU9mZGtzSzB6Ml9lR1lRQ01FVEk0YnFtcXZ0SzExZlpkUjd6eElQcmk3cU8zUURkM0FXWit2Yjd3dG5wR1p3SzV2aTEzMitMWDRMSDZFWTJYakRQTW5lME5jNm5IS1Zhb2QzS3Nkd2V5TUowMng5N1o3azg5bUQ5WlBGbWJwMkVqTWhpeUNGVmVUTUpEZjBkQkFEOTd6a0s1Tnc2WUpKX0VLQjVNWDdjVHBLWDYrZXVNb0J1cFE9PS84MTU5MjRfSEFBS0dfOTc1NV8wMDFfMTAwXzAwMDBfTGlnaHQuanBnIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0U5N3BESlRXbkoxUnR1ZDI2dnZvUDY4M19oY2dkT2dRNE5oNm5LMHZnZzNSTm5ORXQxbUVWN0tiSGtXcXltWWZESzJta05zdXNnemh0Uml1eU42NGVkKzdqSzgwaTc5bHVLVnNJWjMzK05IUVFJWnBlVnR0MmswaXZ1NGh5MnlvSWpyM1BmOVhIcm51UjhiNDVUM0xrMEFta0MzdXptc0JmeG9Db0FWMG5Pd1R1elZUX1FPUWYwb0E0Nyt5a3JhR2xBdmxlNnM4QWpkc1VMXzZvVjM4NkpScUhKbDVjV2w3OU90ZHVyTjNBcGhUWStqMFhwMXZxb3llaU9hM1ByeWE3c1NLNUVBaXFzdXhXVHFsS2Z6a1BRPT0vODE1OTI0X0hBQUtHXzk3NTVfMDAxXzEwMF8wMDAwX0xpZ2h0LmpwZyJ9fX1dLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMiBWaWV3IEFsbCBIYW5kYmFnIExpbmVzIiwibGFiZWwiOiJWaWV3IEFsbCBIYW5kYmFnIExpbmVzIiwic3ViTWVudVRpdGxlIjoiQWxsIEhhbmRiYWdzIExpbmVzIiwidGhlbWF0aWNOYXZpZ2F0aW9uIjpbeyJsYWJlbCI6IkdHIEVtYmxlbSIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIEdHIEVtYmxlbSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9nZy1lbWJsZW0iLCJpbWFnZSI6eyJ0aXRsZSI6IlRoZW1hdGljX0dHIEVtYmxlbS04MTUyMTNGQUQ2TDk3NTgiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9RTDY1Wm1FR29XUlhtUGVfT2dUSUxIX0xiTmRaUzFYeVBoWlFRb2Y0VU5tOElBNHdadnZHOXdhdThpcFBfTE8yQTE4UHJhQUhlODJVS2FleUhBVlhkQ3EwdTc3Y2JFUWZxUXJtZUhPdEZaMk9QUmpQeUdpUThlY25hc3J6SXU4MjlvdnZjSXJvdk5kWkRmQVVJdkpsT19Va3Q2SU9KZWNTZlNzamRCaUZTOTZTTVZmdGFxRUR1RzVTUXJOQ1hfSDlBMXlQVTBQOXZ0Uk45aWM5QWFMd2JweUpublJDNGxVMlVMX0NmVWg3bGNaanErdDFCMHI3OGtkeVpMd2xpc0FsLzgxNTIxM19GQUQ2TF85NzU4XzAwMV8xMDBfMDAwMF9MaWdodC0xLmpwZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvb1dxYTZhTDJzcE9mVkQxOF9XSnV2ZTRaeVRyUFNLZUxoaWlta3lzSnZCelNzRWV2YWdBVG9KeU54THZjRndjV3R2dDlRc3dRdjE5d0JBWTFHcmxzK3c3aUlDdmozVEZ5U2RGTVRDamQ5UXp0SWVLTFJjc1dhMlNKQnZ0clZaOXhmbWlMbjZFYnlXN3p0MVhwS1o3MzFKcVNVdjVIcWJ0Ym45cml2ekJ3TV9zc1lyWGRIWWlwVVpSTEhXMVNFdWR3SzVEdlRBMlMxS3EzcGRUS09ZMFlacWc5ODlGWUpLZ1VmdTlHanJFZUs5U1JUY1hjaGhtMHFYc3psX3k2RVdUU1g0WGVWSURuOUlidGhOdnUyRFRiYmc9PS84MTUyMTNfRkFENkxfOTc1OF8wMDFfMTAwXzAwMDBfTGlnaHQtMS5qcGciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvc0VFdlBBQWVMUFFfWFROY1llN1J3VUtlRjZJTlIzUitzTkVlZDV3K0p0TzFKb3R6akQ1RUlFOXhEc3dtV3dBUGFOeUVLaU5RRGltTitGRjF2RHB0XzlMUENVVmFDMjBpZnhCU1M0d1hoRDF0MmlQeXRDdUxSY3ZZS0EwRjFnUHE0b2lCT0pIVCtHRklMKzRONHV0MzNJVWlQdTFjN09FeDAwV1JUbG1yUlE3Y0dZNmF4U0YwVUhNQ2I0VjVsb3JCdWlRT2YxOEJpdXZtZHJ5RjdHMEVKd2l1dkhfZlhrTkFHZFVzUHpqRE1zcjFfYStEVm5OTkpxNlZseHZjK2lPdjVmR2d2SW
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['clothing', 'apparel', 'fashion']
    for section in soup.find_all('section'):
        if any((identifier in section.get('class', []) for identifier in clothing_identifiers)) or any((identifier in section.get('id', '') for identifier in clothing_identifiers)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: Vsb3JCdWlRT2YxOEJpdXZtZHJ5RjdHMEVKd2l1dkhfZlhrTkFHZFVzUHpqRE1zcjFfYStEVm5OTkpxNlZseHZjK2lPdjVmR2d2SWVUdVRVWmhkNGlTUnBxc1E9PS84MTUyMTNfRkFENkxfOTc1OF8wMDFfMTAwXzAwMDBfTGlnaHQtMS5qcGcifX19LHsibGFiZWwiOiJHdWNjaSBCbG9uZGllIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBHdWNjaSBCbG9uZGllIiwibGluayI6Ii9zdC9jYXBzdWxlL2d1Y2NpLWJsb25kaWUiLCJpbWFnZSI6eyJ0aXRsZSI6IlRoZW1hdGljX05ldyBCbG9uZGllIiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvQ3FrVTBTK2Nxc1V4SHdNUmxDSUJFbmhWTkRudnA5NGZaNllPVGhHM1NNY3RZX0Z5SXk4TU1YWl94Njh5NVNMT0lxekJHS1Rna1RncmhPVVY5Q0FTMUR1Mm9ZVW9DbHJ5QldKV2ZmbmhVK1VtQWdQUkVFdjNZTXZVamNHanV6TzBTK3JXZ0xxaTAycEI3cXlSZjIwcmsyaWZsTnYzaF9oVEtXa3VybWNfR0hObExtSlRwVDlmSmpWZmlpeUgwNjF4YzJXS3lXUXhTeFVPdFp5RmNIU0orQmlXa2o1RXgrOWk5aGp6SjFWTTV3UHhncnJfOTRrSGVtcUhnZFRMU0lDQUxYaUErM0VZTEpkRURFdE40WnRVSGc9PS84MTU3MTRfQUFFQ18yMjcxOF8wMDFfMTAwXzAwMDBfTGlnaHQtMS0yMC0uanBnIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC91bldKTldYR1ZPZHdnX0Y4TlJ1Y1pySThXQXNtblhfaXBRcXZxMDNHWW9SRnFnOXVJZjBvd003V3JadEFrWXdiUWxCN3VTc0RJSHcyTU5helErRk55SlpfbjNCOEFIOUEzQlR1ZElGVnRDWk9tcV80NGtMbWJMdGN6WkM0YnY3S0NNYzR5WWNEVmRoS0FJdmxzQU1rRFpnZmxLYmJZUlI4ejJtOU9uVHJDQzRCVUY4T3hPSG9VWWpfOHpzRnFxT2JRNm5lTWcxUWF3dm5lejd6ODZmQzhqZTFZOGV1Zmh2cDZxcVlhb1FwbjFHMVk5eDNBTlJieG8wQXZjM1d6OEpNdG9pbUdsa0hROUtvM2oxbWlJZWpRUT09LzgxNTcxNF9BQUVDXzIyNzE4XzAwMV8xMDBfMDAwMF9MaWdodC0xLTIwLS5qcGciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvakplakNkTjhPMXJHR1VpWVJiZElNRG5MbG83R1grQ2xxbGlGMVN1Wl9JWkdybFZDV3BmaUMrOTB5dGZiVytaMmhvT1ZCUFVZUFhnZndfNGtqaTlGWUQ0b3YrckNxUGdKcDF3NGk3Uzg4eWJVTmM1RkdsSmwxakZabnQrSTdBTkVncGFWTk1ObFNVYVZwZFVFMUdFUVA4aFkrcjhndXo4eTBXdHNlZzMxcEZyZzdSVTV1V2thNnlCZUZXNDQ4akFRU05YVFBvUVdYNE43Wld0NjFPajhFSXQzWHFSd2JQSnA4T0JMMlZWdG9DeFdMUExFd2FJOGZwa25XZkdEMmdzK2tCSm9fWWhqVHJLcHFheHl5QUxCRnc9PS84MTU3MTRfQUFFQ18yMjcxOF8wMDFfMTAwXzAwMDBfTGlnaHQtMS0yMC0uanBnIn19fSx7ImxhYmVsIjoiR0cgTWFybW9udCIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIENhcHN1bGUgR0cgTWFybW9udCIsImxpbmsiOiIvc3QvY2Fwc3VsZS9nZy1tYXJtb250LWNvbGxlY3Rpb24iLCJpbWFnZSI6eyJ0aXRsZSI6IkdHIE1hcm1vbnQiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9HUkFGckdBQXV2RzE4UWRSY09ERit2ODV6bmVsY3Bob09wNHU3b2lxVEQ5S1M4bko3QXNLQVhvbWdqdjBxRVVIeFk2QU1qcUJUdUVOdUw0UGdDZkx4ZHhjN2xDODIxY1VqbV9hbjJmVWhqbHBSbFVJMURqbGtfWFdGaHJPbHpnZ2JpVDlTVG9mZHpGcllqZ1JOdWtRUmlFTVlaQ013TDVsR3ZPVHNIV3UrVDhBeFNwSFlkUGVEcUh6d09MS1QwSm8vTWFybW9udC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L09obEJiK3ZLdVdaZ0lRWE9jQjQ2S0prS3FUbnJiMnpneFJyTXZmVHdmM1J1Z0lrbDVibXdkQ0g3THZyNkZsNm81V0FncytmOHlTbTY0WVdDNHpLblpnbzNpek04cDFVcGxMQWw5TGdUdEV6WFFvcWV3RXNRQXFQNkwxM2NxcFRxS3FtKzE3VXNhVTZSYV9ScURMMkN2c3kzZ2w1Tjg0ZjA5WlphOWFzMU1KeEkzd0l3dmk2am9obFZvSUJVWmlDXy9NYXJtb250LnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC8rSmkrZVA3dXcwaW1ZbTUzNndHZUNzX3hnUFpFNUhlRkk0Q3RfbjVhNFp3SmhRUW4zeU1JUDR1VHpZSk90Q3ZaQmFDa3FBSjU0cWhsbncyZ0d4RWlZVEw4QVJpMDloSnBnTnFnWjFWWURYeGFMMUM5dGgyeDJaQSswWjIxNERWS0ZpWjJfT3RVc3VnV0RsUnhJQ3kyek5nd3NiMVBKdlh1dkdIdXlOd3QzVStpTE1vdmoyUzhHQjdmUXhOWjFxOE8vTWFybW9udC5wbmcifX19LHsibGFiZWwiOiJHdWNjaSBCIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBHdWNjaSBCIiwibGluayI6Ii9zdC9jYXBzdWxlL2d1Y2NpLWItYmFnIiwiaW1hZ2UiOnsidGl0bGUiOiJUaGVtYXRpY184MTU5MjRfSEFBS0dfOTc1NV8wMDFfMTAwXzAwMDBfTGlnaHQiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9wUDJ3R0ZmWmE3a3EwX3JYdDVwdklWWFQ3a3VIU29sWndBRW12SHBOeXU0VmFBMlBCUGdBOGRTX0crMXZ5M1YxWjhwZnZQdkhUTmlxM1NvMys5VlJFT0dEdG1JcnRQVkxmeWdBaGQyT2FSajlTTUlWMENUUk5rOHNpQk41SENRdmtYdWlia2c2dlV1dUJYV1RGdWNIeEZCdHJEN2ZiTUZ1amNZa2M3dXBOOHF0bFVIWFAxNnZkenlfVEhkTmJhSWd2bmI1dFdUcVFWTmJWODZ6dTZ0eldqOEQ1TXBNY3RBNUJ5Y1lJR29DOFFLQWdLdnRZWnpyTjJtZ3VyWk9zR0JRLzgxNTkyNF9IQUFLR185NzU1XzAwMV8xMDBfMDAwMF9MaWdodC5qcGciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1QxcTJEQTV5TnIyY2N6RDZMSzRqcURNdkRibFFBdjVKOEVPakMxNl9jMHFYUWlJa3NkUUVWM3V1Sm5aZlpyU1ZBbnAxTmZKWWNpbnRaenZaTlB2VWhPd0VKOUo5cHNGV0lPZmRrc0swejJfZUdZUUNNRVRJNGJxbXF2dEsxMWZaZFI3enhJUHJpN3FPM1FEZDNBV1ordmI3d3RucEdad0s1dmkxMzIrTFg0TEg2RVkyWGpEUE1uZTBOYzZuSEtWYW9kM0tzZHdleU1KMDJ4OTdaN2s4OW1EOVpQRm1icDJFak1oaXlDRlZlVE1KRGYwZEJBRDk3emtLNU53NllKSl9FS0I1TVg3Y1RwS1g2K2V1TW9CdXBRPT0vODE1OTI0X0hBQUtHXzk3NTVfMDAxXzEwMF8wMDAwX0xpZ2h0LmpwZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9FOTdwREpUV25KMVJ0dWQyNnZ2b1A2ODNfaGNnZE9nUTROaDZuSzB2Z2czUk5uTkV0MW1FVjdLYkhrV3F5bVlmREsybWtOc3VzZ3podFJpdXlONjRlZCs3aks4MGk3OWx1S1ZzSVozMytOSFFRSVpwZVZ0dDJrMGl2dTRoeTJ5b0lqcjNQZjlYSHJudVI4YjQ1VDNMazBBbWtDM3V6bXNCZnhvQ29BVjBuT3dUdXpWVF9RT1FmMG9BNDcreWtyYUdsQXZsZTZzOEFqZHNVTF82b1YzODZKUnFISmw1Y1dsNzlPdGR1ck4zQXBoVFkrajBYcDF2cW95ZWlPYTNQcnlhN3NTSzVFQWlxc3V4V1RxbEtmemtQUT09LzgxNTkyNF9IQUFLR185NzU1XzAwMV8xMDBfMDAwMF9MaWdodC5qcGcifX19LHsibGFiZWwiOiJPcGhpZGlhIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBPcGhpZGlhIiwibGluayI6Ii9jYS93b21lbi9vcGhpZGlhLWMtb3BoaWRpYS1jb2xsZWN0aW9uIiwiaW1hZ2UiOnsidGl0bGUiOiJPcGhpZGlhIiwiZG
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    sections = soup.find_all('section')
    for section in sections:
        label = section.find('label')
        if label and 'clothing' in label.text.lower():
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: luayI6Ii9jYS93b21lbi9vcGhpZGlhLWMtb3BoaWRpYS1jb2xsZWN0aW9uIiwiaW1hZ2UiOnsidGl0bGUiOiJPcGhpZGlhIiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvU3Y1Wlc0NFpHM2RZWTZ1RW04c2xwYWZ0X2tRMFRsOGxrU1B3MUtwdWVGZVVydG04eGxjcU1iNFc2VXBUQTY4OGdsTnR6Q3Joa2tkVktiQnJoNFVLa0FOTlh3Z2tyKzQrYW05M0lGeDdMUEVpTTZ3VnpPaVNCQ0t1UVdpOENZdUwyTXpYZHhsUTRnR29Ta25YdUtSXysyUHZDcVBFaUZDRVp3Q1M0NVBSSEVSSllHMUJYS0ZUZjJLamtyRE9pU2xML09waGlkaWEucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC8zUDNkZlo1ZURVbUFLVzJGTVlDQ0lxaktvbEF6ejFJZXozRmdidUJ0aDcyOWw0SXViRVpSdkduelNpUmJUTWFoUjFuWm5CcUkzamFUc05fTWs4ZnMxcGk1dDJnb1kwR2ltc0M1UUwzZXpTYXB4b1VpTlUydCs0U0ZUMmJrWjJpc0cxVUdaWE1jY3FtY2hFM3AxZWwzb0psa0RZU09CWF95V09GR3pPTkdWVzBxaU1BNUhwMEsySFV4TFZvSGR4YTgvT3BoaWRpYS5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvUndfeXZSUFZya3JDMUZoc3lNVGU1MDJqa0ViS3kxb0lHdEdYeXhkclEyYm12akJFeEw2dWRmd1ZxQ1FqWitCSDhNNE5lQTFKaldvZ2tqU3lQblR5aUx6NmRSSzJ5RFErbFRqVGFSTWRUSDhKTVFGMVZzeHhYVEF2X1FTYm03NFJ4SEppdXJKM215WHo2SDZfalI4UHgwbjg3cUE3WlpDTkFYRVB1QjVxMGcyYl9xTHFrUXJsRCtDQmZkUnlIaFBML09waGlkaWEucG5nIn19fSx7ImxhYmVsIjoiR3VjY2kgSmFja2llIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBKYWNraWUgUGlzdG9uIiwibGluayI6Ii9zdC9jYXBzdWxlL2phY2tpZS0xOTYxIiwiaW1hZ2UiOnsidGl0bGUiOiJXVyAtIEphY2tpZSBQaXN0b24iLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9hK1F0U0xFT0F1d0pzOWY4NjVHS1pCVV93aXlaV295VHE1b0dhcWMyd09xaThzNithV0hEMFBuRENORVJUcm5VK2p6NXV2R1pYMDdzT0N3dEw4b3hySXRDUGY2TitISVhNV3lqeG5OZTcwbDBaWXE2cGRVWDN5TnVycFRlQm52VjkrN0ZER3NhNGpzSFRkUkxPVEkxODNDaVBnZHlSRTZIdlJXUXJ0WE9GYnlpbmR1VldvY2JuN1VRSW44ekVvWWEvSmFja2llX3Bpc3Rvbi5qcGciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1FnWkdDUWJFQUpKOXEwS3hfQzhwajlUQTUwMXgzWlVUZ01PY0hZc2RxZXFxMl9sOGdZeTM3N2hvNEJhQ1R1TEZIa0l3X3NsazYzMzFiK2g3anlsc2ttNWpsTGkyM1ExcG9VX0J0eWZ5NGpob1QzaXpQX1VTcmxEeXJRZHBQRU1tSnM4NjRUWnhnTU1ZcVNPNjlzdGFEd0hLeEtBN3Nnb0hXNWxEWWZ2SUR4RkVha0U5RUcxbzNSNTV0SGVFSWZKVmkrR1BvZkczcDRRV2JtSFpTbzZHZ3c9PS9KYWNraWVfcGlzdG9uLmpwZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9rM0N1RFpfZURNZVMyc0RhUEhrU2Q5NExib2xOaDVVYnZ1X3pEWEtEZnkxdkNUS0ZsVDlRTjdNTVZsa2F2dE9LK3RBTU8rVm1LRkxxdzZ2OFdoanR6dzh2SENEOEh1alNWVXlPbmJFVkRSekJrK3hVZVhVN05rd1JXTEluTDU0TlhxTHZ5WHVLODF0NHNyVTRhTkhrZ3E1VFg2U2FSYkdteUdMbndZSjFBUFZGWThjUTJnK2ZYN1BkUTYrdzRQZ05rRDV3aE5oSEprUStQX25RTE1uU1NRPT0vSmFja2llX3Bpc3Rvbi5qcGcifX19LHsibGFiZWwiOiJHdWNjaSBIb3JzZWJpdCAxOTU1IiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBHdWNjaSBIb3JzZWJpdCAxOTU1IiwibGluayI6Ii9zdC9jYXBzdWxlL2d1Y2NpLTE5NTUtaG9yc2ViaXQtaGFuZGJhZyIsImltYWdlIjp7InRpdGxlIjoiR3VjY2kgSG9yc2ViaXQgMTk1NSIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L09sZnkraDVPMnVIV29XUzRqelN1bmZqZGJSYWNvMWd1QkZIa0V3MVZOTDNSZXNpcGpVdjd5UWtmK3E1T3hvTEFOYTNuQXdGNXIrQTFTT3RQbEdKb19HWkRwSEJ5eENIX0dkT3NFTEYyVDRESUd1TmJZditDajlnK2FkSjdySXdMajdGSjZXd04ybXBSRUVVR25UYWRxVGc4Mk92M29rN1FpdzFwM0Fad1NrTDI2M3BITjNnR2Z1MTI4ZTZzeTNsTi9Ib3JzZWJpdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1hISTdaaWhDVkU1N2RfRWpLOUlRTGdpbTlVMENuWF8wSU9wRG9ERktodl9LZkZWeUU2WEtxbEg1bkZCSVcxejN4NkdFS2w0eWUxeDNxTHloOGJPVzNFVUh0Y3oraVBpNVhObURqWW9RVE91NkYxdF9IaFpWN2tIZVMwTTFrdW81TW9fclVmd0thclZ6ZkQ1ZXFVd2pjeTFORWNxdXYwNktpMGhtcVNiSW9XeVVuejJuK0FJbXc1cGk5VFZSc25xRi9Ib3JzZWJpdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvaTdUdmVRY0I0TUw1dEE2M2xGeCtJR1NRREVzZHlHMWMxanRvN0pBSFpncHZhNHBHQ2d5VG5kUHBTMjcyM2Mxb2srMWZHZ3FRNEE0eGhEWGd1RXR6U2RBWXZpaXlCR2QzRVZVX2N4YkEwMmxaRHR5YnNzeUtncHo3cDZOWjd4UzVFV0NGUkJVNzFpYmFDRVhYSTM0aFMyRk1jVEcwS0JrNnRLbHlvTlBnRW9XOE9FUU1zSTBsWkorM0tqM3JvREdGL0hvcnNlYml0LnBuZyJ9fX0seyJsYWJlbCI6Ikd1Y2NpIERpYW5hIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBEaWFuYSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9kaWFuYS1jb2xsZWN0aW9uIiwiaW1hZ2UiOnsidGl0bGUiOiJEaWFuYSIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0FiYytSaDVQT3VfMDBROStheUJTYjZBaTEwQUdoc1pSNWR1NUJVTmRJbEtMRkg2b192Y2wzZlRDd0Ixd2o1bTBCeTVRaUZRT0YxZGM1Mmh0NmgxcG53bCs5SEtiU2FEaytJcDJwdVRucnVVTXFlZjFDaG1xQUxDZWt1MUVseUNyaERBZk9TS2ltQ3p6OVRHc1ZObm9PX0tIK0Jpd1RNT3lxT0dYUkhMVkpmWT0vRGlhbmEucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC91THpmQUZ0eno1NmRCeThjc2ZYbDFpcDB2d3hCNTRjVjdDTVlDaFltV1FsVlhERThqMHpLUVk5QTZCbTNSOFdjYnNYaU9maDRwZEZoZmdtc3g4OWc1ZmRDZVhObXZjMEI1Z2RyVF9xMnlwSXVVc1lQalRrckdhTTlPc2xXTWc2OHlsbHVrcXZMSU9vRFM1YWxCOVZ1Y0o1QmlLOVBqRmFRSGF4RVJ6TUNGdHRGRDcyWGd3UXA1MTlEd2JkeU02SEEvRGlhbmEucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3N1MVJ1QVd3Qis0WUVQZXNGNHZBSDFkRzlZNVU4azA2bTJlQ0lOcnRncUVNd2lWcUplMjlPbkRVSHM2a2Qrb0JfRjlUdmQ5WHpJdzhXX2M1VFBoYUdCVXV0V2NDT09VVHdwNTVtY2hmUXJvdDZaWGlNeGhqM3VVV3JEckVkUEpBeW5UOGhjQUJ5N2U1YWQ2X05fTERmS2hfaFdNbDRUdUJna0FZdm5zMzZEcENXX2p3TDMwSjNrRHc4TnZXQlZZNy9EaWFuYS5wbmcifX19LHsibGFiZWwiOiJHdWNjaSBCYW1ib28gMTk0NyIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIENhcHN1bGUgR3VjY2kgQmFtYm9vIDE5NDciLCJsaW
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['clothing', 'apparel', 'fashion']
    for section in soup.find_all('section'):
        if any((identifier in section.get('class', []) for identifier in clothing_identifiers)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: wiOiJHdWNjaSBCYW1ib28gMTk0NyIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIENhcHN1bGUgR3VjY2kgQmFtYm9vIDE5NDciLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktYmFtYm9vLTE5NDciLCJpbWFnZSI6eyJ0aXRsZSI6Ikd1Y2NpIEJhbWJvbyAxOTQ3IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvd3FVKzgwVG5feElCWFpGQU5JaGR5VlpXQ18wVlhJcVBmdkxKX1VjSmtsaHNQSWZVXzd2VlpScHBzT2NiNHZUM0kraEpNSTBoTDQ4b1lTYkRpTXlWblUxa09LZWw2czlHSnRCNDNCMGZ0SW81ZF9MbDVjRjBpR2FURkRWWklqQ0w1WUozY1pHSit2Z0EyakxzNnZJbWRLVXlGQUlfU2ZDaHBZZEQxYzBRUlNvPS9CYW1ib28ucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9HSDR3NVFhUFNOM1NvaklWakJwNXdudEtvZENZUkJBX1ZCZ1NxRVlDNTB5STVVK2VGTDY2Z24rNXlma2tfbG5ubXQxRDBPV1U5VWVWZTVJdUZHb1BfVldOS1JLQzBEaWp5M1Erc3dFQjdwNWw4ZVlDdzJSeTY4YWJJWGJabG1qWUNmcXE1bUU1Z2lqd3RIUElHRlJEMk44cXBhTDd1M2hsSzY1dlByd2kwZVVsVGhBbllZdkozb2xPYk9XbmNuQjQvQmFtYm9vLnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC8reXhwYWU3Slg2cHVSb2hTNmlMalNnc3YxVzFicDYzV2NsUW5yTzNSNVlSZ1VYMEdETVdMX0h5UWVhWmVNOXlFOGpuWmJXODhHT2dNbHExNHZTelNHam9DRGg3Sk5OSXN1cWVmMXUzRlJHV1A0SVNCdGpJQ1VtQjVqaEtUbE85RktNbDlIWFhzdFg1WlB1U2RBX0htNVloTkg5NERZZk1CZHIreXYxWVZKWkdPR3FnMHloMEZTVGVFNzJOWUVCeEkvQmFtYm9vLnBuZyJ9fX0seyJsYWJlbCI6IkRpb255c3VzIiwibmFtZSI6IldXIC0gVGhlbWF0aWMgQ2Fwc3VsZSBEaW9ueXN1cyIsImxpbmsiOiIvc3QvY2Fwc3VsZS9kaW9ueXN1cy1jb2xsZWN0aW9uIiwiaW1hZ2UiOnsidGl0bGUiOiJEaW9ueXN1cyIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L2xMbERXUnBLN0F3TDZQODBrMHAraEowNGRZMWFidmtjM1lVd3U3RUh6THJqUXJYaDlydFJUc1d6R2dyR2JLQUJWOUs1VUlRc2FtQm9RK2lnM19adFNRM1NnV0dRSnhfZl9Tc20yZllXTUdiMjdXVW1HQ2JvSkFlWk9xRXhwejhnZElzc3pvVzdvbkNTTl82Wk9JQTFReHpyUXlQbkxKd29UR2l3dFhlNm1Kd2FFY2RqaHlWRmNQY3VfZ29NT19jay9EaW9ueXN1cy5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0RfNlcrN1ZKeUNST09jYlJZbVBNTCsxakMydWpyX0RPazdUaDB0bUNlYkV1WnhKbktPd1dRZF9QcjlGUXhwYkpQa2ttRXdlekQzWkV5TE9sSGlqY1U1ZUxzMXRSaloxQzNNOExIWXZ2aVlTSGw4TFhJTU1UbEdDclh0S0dRN3ZYTkg1ckRYOFRLaEcxbzd0MmFqZU9DNktKa1lBOXRnV2hkUVJ3MkNPTU41cWNFQ0d6cCs0SmJ5WE44dHEwYTRlcS9EaW9ueXN1cy5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvS3pSa0I5SzFZV1hackVEcGZ1amFaaTh2SmczOGUxOHcyb1RIdlRWZ0NwNnlKN3psTmtEUjVmaDdzZUVfM0ZFNEZicmQydG1RbWtjZHBhZ3Z6cV8rQVpKUjFkeUN0Y0xwWkIxM0hxc2hzZnd5ZWFBSVh0VG91cjRtM3lPNlptR01rWElvTWFtdU8zOVR6c3VBcFVtYk44T190cjROdTdIejhUdlBmVHBIbElWMGltMVpNal8zQWxqRk1rMHE4NW83L0Rpb255c3VzLnBuZyJ9fX1dLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgVmlldyBBbGwgSGFuZGJhZ3MiLCJsYWJlbCI6IlZpZXcgQWxsIEhhbmRiYWdzIiwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy1jLXdvbWVuLWhhbmRiYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFcgQ3Jvc3Nib2R5IEJhZ3MiLCJsYWJlbCI6IkNyb3NzYm9keSBCYWdzIiwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy9jcm9zc2JvZHktYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy1jcm9zc2JvZHkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBNaW5pIEJhZ3MiLCJsYWJlbCI6Ik1pbmkgQmFncyIsImxpbmsiOiIvY2Evd29tZW4vaGFuZGJhZ3MvbWluaS1iYWdzLWZvci13b21lbi1jLXdvbWVuLWhhbmRiYWdzLW1pbmktYmFncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIFNob3VsZGVyIEJhZ3MiLCJsYWJlbCI6IlNob3VsZGVyIEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL3Nob3VsZGVyLWJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3Mtc2hvdWxkZXItYmFncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIFRvdGUgQmFncyIsImxhYmVsIjoiVG90ZSBCYWdzIiwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy90b3RlLWJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3MtdG90ZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBCYWNrcGFja3MgYW5kIGJlbHRiYWdzIiwibGFiZWwiOiJCYWNrcGFja3MgJiBCZWx0IEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL2JhY2twYWNrcy1iZWx0LWJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3MtYmFja3BhY2tzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFcgVG9wIGhhbmRsZSBiYWdzIiwibGFiZWwiOiJUb3AgSGFuZGxlIEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL3RvcC1oYW5kbGUtYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy10b3AtaGFuZGxlcy1hbmQtYm9zdG9uLWJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBDbHV0Y2giLCJsYWJlbCI6IkNsdXRjaGVzICYgRXZlbmluZyBCYWdzIiwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy9jbHV0Y2hlcy1ldmVuaW5nLWJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3MtY2x1dGNoZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBQcmVjaW91cyBIYW5kYmFncyIsImxhYmVsIjoiUHJlY2lvdXMgSGFuZGJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL3ByZWNpb3VzLWhhbmRiYWdzLWZvci13b21lbi1jLXdvbWVuLWhhbmRiYWdzLWV4b3RpY3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy1jLXdvbWVuLWhhbmRiYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTS0gTDEgVHJhdmVsIiwibGFiZWwiOiJUcmF2ZWwiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0tIEwyIFRyYXZlbCBmb3IgV29tZW4iLCJsYWJlbCI6IlRyYXZlbCBmb3IgV29tZW4iLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1saWZlc3R5bGUtYmFncy1hbmQtbHVnZ2FnZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBUcmF2ZWwgZm9yIE1lbiIsImxhYmVsIjoiVHJhdmVsIGZvciBNZW4iLCJsaW5rIjoiL2NhL21lbi90cmF2ZWwtZm9yLW1lbi1jLW1lbi1iYWdzLWx1Z2dhZ2UiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluay
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    sections = soup.find_all('section')
    for section in sections:
        label = section.find('label')
        if label and 'bag' in label.text.lower():
            name = section.find('name').text if section.find('name') else ''
            link = section.find('link').text if section.find('link') else ''
            clothing_sections.append({'name': name, 'label': label.text, 'link': link})
    return clothing_sections
Results: []
Search result: oiL2NhL21lbi90cmF2ZWwtZm9yLW1lbi1jLW1lbi1iYWdzLWx1Z2dhZ2UiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9uc3QvZ3VjY2ktdHJhdmVsIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwxIFdvbWVuICIsImxhYmVsIjoiV29tZW4iLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMiBOZXcgaW4gV29tZW4iLCJsYWJlbCI6Ik5ldyBJbiBXb21lbiIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIFcgTGF0ZXN0IGFycml2YWxzIFZpZXcgYWxsICIsImxhYmVsIjoiVmlldyBBbGwgIiwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay13b21lbi1jLW5ldy13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBXTiBXaW50ZXIgU2VsZWN0aW9uIFciLCJsYWJlbCI6IldpbnRlciBTZWxlY3Rpb24iLCJsaW5rIjoiL2NhL3doYXRzLW5ldy9hcHJlcy1za2ktZm9yLXdvbWVuLWMtd29tZW4td2ludGVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdOIEZXIFNIUyBXb21lbiIsImxhYmVsIjoiRmFsbCBXaW50ZXIgU2hvZXMiLCJsaW5rIjoiL2NhL3dvbWVuL3Nob2VzLWZvci13b21lbi93aW50ZXItc2hvZXMtZm9yLXdvbWVuLWMtd29tZW4td2ludGVyLXNob2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdOIEJsb25kaWUgQ2Fwc3VsZSIsImxhYmVsIjoiR3VjY2kgQmxvbmRpZSBCYWciLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktYmxvbmRpZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXTiBHRyBFbWJsZW0gY2Fwc3VsZSIsImxhYmVsIjoiTmV3IEdHIEVtYmxlbSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9nZy1lbWJsZW0iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay13b21lbi1jLW5ldy13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBHaWZ0cyBXIiwibGFiZWwiOiJHaWZ0cyIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIEwzIEdpZnRzIGZvciBIZXIgIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvZ2lmdHMvZ2lmdHMtZm9yLXdvbWVuLWMtZ2lmdHMtZm9yLWhlciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBHSUZUUyBCZWF1dHkgR2lmdHMiLCJsYWJlbCI6IkJlYXV0eSBHaWZ0cyIsImxpbmsiOiIvY2EvYmVhdXR5L2dpZnQtaWRlYXMtYy1iZWF1dHktZ2lmdC1pZGVhcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIFBlcnNvbmFsaXNlZCBHaWZ0cyIsImxhYmVsIjoiUGVyc29uYWxpemVkIEdpZnRzIiwibGluayI6Ii9uc3QvbW9ub2dyYW1taW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvbnN0L2dpZnRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIEhhbmRiYWdzIFcgICAiLCJsYWJlbCI6IkhhbmRiYWdzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gVyBIYW5kYmFncyBWaWV3IEFsbCIsImxhYmVsIjoiVmlldyBBbGwiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzLWMtd29tZW4taGFuZGJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBDcm9zc2JvZHkgQmFncyIsImxhYmVsIjoiQ3Jvc3Nib2R5IEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL2Nyb3NzYm9keS1iYWdzLWZvci13b21lbi1jLXdvbWVuLWhhbmRiYWdzLWNyb3NzYm9keSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIE1pbmkgQmFncyIsImxhYmVsIjoiTWluaSBCYWdzIiwibGluayI6Ii9jYS93b21lbi9oYW5kYmFncy9taW5pLWJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3MtbWluaS1iYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFcgU2hvdWxkZXIgQmFncyIsImxhYmVsIjoiU2hvdWxkZXIgQmFncyIsImxpbmsiOiIvY2Evd29tZW4vaGFuZGJhZ3Mvc2hvdWxkZXItYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy1zaG91bGRlci1iYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFcgVG90ZSBCYWdzIiwibGFiZWwiOiJUb3RlIEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL3RvdGUtYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy10b3RlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIEJhY2twYWNrcyBhbmQgYmVsdGJhZ3MiLCJsYWJlbCI6IkJhY2twYWNrcyAmIEJlbHQgQmFncyIsImxpbmsiOiIvY2Evd29tZW4vaGFuZGJhZ3MvYmFja3BhY2tzLWJlbHQtYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy1iYWNrcGFja3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBUb3AgaGFuZGxlIGJhZ3MiLCJsYWJlbCI6IlRvcCBIYW5kbGUgQmFncyIsImxpbmsiOiIvY2Evd29tZW4vaGFuZGJhZ3MvdG9wLWhhbmRsZS1iYWdzLWZvci13b21lbi1jLXdvbWVuLWhhbmRiYWdzLXRvcC1oYW5kbGVzLWFuZC1ib3N0b24tYmFncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIENsdXRjaCIsImxhYmVsIjoiQ2x1dGNoZXMgJiBFdmVuaW5nIEJhZ3MiLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzL2NsdXRjaGVzLWV2ZW5pbmctYmFncy1mb3Itd29tZW4tYy13b21lbi1oYW5kYmFncy1jbHV0Y2hlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXIFByZWNpb3VzIEhhbmRiYWdzIiwibGFiZWwiOiJQcmVjaW91cyBIYW5kYmFncyIsImxpbmsiOiIvY2Evd29tZW4vaGFuZGJhZ3MvcHJlY2lvdXMtaGFuZGJhZ3MtZm9yLXdvbWVuLWMtd29tZW4taGFuZGJhZ3MtZXhvdGljcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL3dvbWVuL2hhbmRiYWdzLWMtd29tZW4taGFuZGJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgVHJhdmVsIFciLCJsYWJlbCI6IlRyYXZlbCIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIFcgVHJhdmVsIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiJjYS93b21lbi90cmF2ZWwtZm9yLXdvbWVuLWMtd29tZW4tYWNjZXNzb3JpZXMtbGlmZXN0eWxlLWJhZ3MtYW5kLWx1Z2dhZ2UiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVHJvbGxleXMgVyIsImxhYmVsIjoiVHJvbGxleXMiLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4vdHJvbGxleS1mb3Itd29tZW4tYy13b21lbi10cmF2ZWwtdHJvbGxleSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXZWVrZW5kICYgRHVmZmxlIEJhZ3MiLCJsYWJlbCI6IldlZWtlbmQgJiBEdWZmbGUgQmFncyAiLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4vd2Vla2VuZC1kdWZmbGUtYmFncy1mb3Itd29tZW4tYy13b21lbi1jYXJyeS1vbnMtZHVmZmxlLWJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBUcmF2ZWwgQWNjZXNzb3JpZXMiLCJsYWJlbCI6IkFjY2Vzc29yaWVzIiwibGluay
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['bags', 'shoes', 'clutches', 'belts', 'accessories']
    sections = soup.find_all('subMenu')
    for section in sections:
        label = section.get('label', '').lower()
        if any((keyword in label for keyword in clothing_keywords)):
            section_info = {'name': section.get('name', ''), 'label': section.get('label', ''), 'link': section.get('link', ''), 'isNonShoppable': section.get('isNonShoppable', False)}
            clothing_sections.append(section_info)
    return clothing_sections
Results: []
Search result: I6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVyBUcmF2ZWwgQWNjZXNzb3JpZXMiLCJsYWJlbCI6IkFjY2Vzc29yaWVzIiwibGluayI6ImNhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4vYWNjZXNzb3JpZXMtZm9yLXdvbWVuLWMtd29tZW4tcG9ydGZvbGlvcy1wb3VjaGVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEhhcmQgU2lkZWQgTHVnZ2FnZSBXIiwibGFiZWwiOiJIYXJkIFNpZGVkIEx1Z2dhZ2UiLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4vaGFyZC1zaWRlZC1mb3Itd29tZW4tYy13b21lbi1oYXJkLXNpZGVkIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEdHIEFsdW1pbml1bSBXIiwibGFiZWwiOiJHdWNjaSBQb3J0ZXIiLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4vYWx1bWludW0tZ2ctYy13b21lbi1hbHVtaW51bS1nZyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL3dvbWVuL3RyYXZlbC1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1saWZlc3R5bGUtYmFncy1hbmQtbHVnZ2FnZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBSZWFkeS1Uby1XZWFyIFciLCJsYWJlbCI6IlJlYWR5LVRvLVdlYXIiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBXIFJlYWR5LXRvLXdlYXIgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi1jLXdvbWVuLXJlYWR5dG93ZWFyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdSVFcgRlcyNCBMb29rcyIsImxhYmVsIjoiRmFsbCBXaW50ZXIgMjAyNCBXb21lbidzIExvb2tzIiwibGluayI6Ii9uc3Qvc2hvcC1ieS1sb29rLW5ldy1ndWNjaS1jb2xsZWN0aW9uIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEtuaXR3ZWFyIFciLCJsYWJlbCI6IktuaXR3ZWFyIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9rbml0d2Vhci1mb3Itd29tZW4tYy13b21lbi1yZWFkeXRvd2Vhci1zd2VhdGVycy1hbmQtY2FyZGlnYW5zIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRvcHMgJiBTaGlydHMgVyIsImxhYmVsIjoiVG9wcyAmIFNoaXJ0cyIsImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4vdG9wcy1zaGlydHMtZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItdG9wcy1hbmQtc2hpcnRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFBhbnRzICYgU2hvcnRzIFciLCJsYWJlbCI6IlBhbnRzICYgU2hvcnRzIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9wYW50cy1zaG9ydHMtZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItcGFudHMtYW5kLXNob3J0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTa2lydHMgVyIsImxhYmVsIjoiU2tpcnRzIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9za2lydHMtZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItc2tpcnRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIERyZXNzZXMgJiBKdW1wc3VpdHMgVyIsImxhYmVsIjoiRHJlc3NlcyAmIEp1bXBzdWl0cyIsImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4vZHJlc3Nlcy1hbmQtanVtcHN1aXRzLWZvci13b21lbi1jLXdvbWVuLXJlYWR5dG93ZWFyLWRyZXNzZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ29hdHMgJiBKYWNrZXRzIFciLCJsYWJlbCI6IkNvYXRzICYgSmFja2V0cyIsImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4vY29hdHMtYW5kLWphY2tldHMtZm9yLXdvbWVuLWMtd29tZW4tY29hdHMtamFja2V0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBEZW5pbSBXIiwibGFiZWwiOiJEZW5pbSIsImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4vZGVuaW0tZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItZGVuaW0iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTGVhdGhlciBXIiwibGFiZWwiOiJMZWF0aGVyIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9sZWF0aGVyLWZvci13b21lbi1jLXdvbWVuLXJlYWR5dG93ZWFyLWxlYXRoZXItamFja2V0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBPdXRlcndlYXIgVyIsImxhYmVsIjoiT3V0ZXJ3ZWFyIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9vdXRlcndlYXItZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItbGVhdGhlci1hbmQtY2FzdWFsLWphY2tldHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQWN0aXZld2VhciBXIiwibGFiZWwiOiJBY3RpdmV3ZWFyIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi9hY3RpdmV3ZWFyLWZvci13b21lbi1jLXdvbWVuLXJlYWR5dG93ZWFyLWFjdGl2ZXdlYXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gVC1TaGlydHMgJiBTd2VhdHNoaXJ0cyBXIiwibGFiZWwiOiJULVNoaXJ0cyAmIFN3ZWF0c2hpcnRzIiwibGluayI6Ii9jYS93b21lbi9yZWFkeS10by13ZWFyLWZvci13b21lbi90LXNoaXJ0cy1hbmQtc3dlYXRzaGlydHMtZm9yLXdvbWVuLWMtd29tZW4tdHNoaXJ0cy1zd2VhdHNoaXJ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTd2ltd2VhciBXIiwibGFiZWwiOiJTd2ltd2VhciIsImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4vc3dpbXdlYXItZm9yLXdvbWVuLWMtd29tZW4tcmVhZHl0b3dlYXItc3dpbXdlYXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTGluZ2VyaWUgVyIsImxhYmVsIjoiTGluZ2VyaWUiLCJsaW5rIjoiL2NhL3dvbWVuL3JlYWR5LXRvLXdlYXItZm9yLXdvbWVuL2xpbmdlcmllLWZvci13b21lbi1jLXdvbWVuLWxpbmdlcmllIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2Evd29tZW4vcmVhZHktdG8td2Vhci1mb3Itd29tZW4tYy13b21lbi1yZWFkeXRvd2VhciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBTaG9lcyBXIiwibGFiZWwiOiJTaG9lcyIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIFcgU2hvZXMgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4tYy13b21lbi1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXaW50ZXIgU2hvZXMgVyIsImxhYmVsIjoiRmFsbCBXaW50ZXIgU2hvZXMiLCJsaW5rIjoiL2NhL3dvbWVuL3Nob2VzLWZvci13b21lbi93aW50ZXItc2hvZXMtZm9yLXdvbWVuLWMtd29tZW4td2ludGVyLXNob2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNuZWFrZXJzIFciLCJsYWJlbCI6IlNuZWFrZXJzIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['Tops', 'Shirts', 'Pants', 'Shorts', 'Skirts', 'Dresses', 'Jackets', 'Coats', 'Sweatshirts', 'T-Shirts']
    sections = soup.find_all('section')
    for section in sections:
        label = section.get('label', '')
        if any((keyword in label for keyword in clothing_keywords)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: x7Im5hbWUiOiJOT1JBTSAtIFNuZWFrZXJzIFciLCJsYWJlbCI6IlNuZWFrZXJzIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4vc25lYWtlcnMtZm9yLXdvbWVuLWMtd29tZW4tc2hvZXMtc25lYWtlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTG9hZmVycyAmIExhY2UtdXBzIFciLCJsYWJlbCI6IkxvYWZlcnMgJiBMYWNlLVVwcyIsImxpbmsiOiIvY2Evd29tZW4vc2hvZXMtZm9yLXdvbWVuL2xvYWZlcnMtbGFjZS11cHMtZm9yLXdvbWVuLWMtd29tZW4tc2hvZXMtbW9jY2FzaW5zLWFuZC1sb2FmZXJzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIE11bGVzIFciLCJsYWJlbCI6Ik11bGVzIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4vLW11bGVzLWZvci13b21lbi1jLXdvbWVucy1zaG9lcy1zbGlwcGVycy1hbmQtbXVsZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQm9vdHMgJiBBbmtsZSBCb290cyBXIiwibGFiZWwiOiJCb290cyAmIEFua2xlIEJvb3RzIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4vYm9vdHMtYW5kLWFua2xlLWJvb3RzLWZvci13b21lbi1jLXdvbWVuLXNob2VzLWJvb3RzLWFuZC1ib290aWVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNsaWRlcyBXIiwibGFiZWwiOiJTbGlkZXMiLCJsaW5rIjoiL2NhL3dvbWVuL3Nob2VzLWZvci13b21lbi9zbGlkZXMtZm9yLXdvbWVuLWMtd29tZW5zLXNob2VzLXNsaWRlcy1hbmQtdGhvbmdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNhbmRhbHMgVyIsImxhYmVsIjoiU2FuZGFscyIsImxpbmsiOiIvY2Evd29tZW4vc2hvZXMtZm9yLXdvbWVuL3NhbmRhbHMtZm9yLXdvbWVuLWMtd29tZW4tc2hvZXMtc2FuZGFscyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBQdW1wcyBXIiwibGFiZWwiOiJQdW1wcyIsImxpbmsiOiIvY2Evd29tZW4vc2hvZXMtZm9yLXdvbWVuL3B1bXBzLWZvci13b21lbi1jLXdvbWVuLXNob2VzLXB1bXBzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJhbGxlcmluYXMgVyIsImxhYmVsIjoiQmFsbGV0IEZsYXRzIiwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4vYmFsbGV0LWZsYXRzLWZvci13b21lbi1jLXdvbWVuLXNob2VzLWJhbGxlcmluYS1mbGF0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBFdmVuaW5nIFNob2VzIFciLCJsYWJlbCI6IkV2ZW5pbmcgU2hvZXMiLCJsaW5rIjoiL2NhL3dvbWVuL3Nob2VzLWZvci13b21lbi9ldmVuaW5nLXNob2VzLWZvci13b21lbi1jLXdvbWVuLWV2ZW5pbmctc2hvZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS93b21lbi9zaG9lcy1mb3Itd29tZW4tYy13b21lbi1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBTbWFsbCBMZWF0aGVyIEdvb2RzIFciLCJsYWJlbCI6IlNtYWxsIExlYXRoZXIgR29vZHMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBXIFNtYWxsIExlYXRoZXIgR29vZHMgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS93b21lbi93YWxsZXRzLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy13YWxsZXRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIExvbmcgV2FsbGV0cyBXIiwibGFiZWwiOiJMb25nIFdhbGxldHMiLCJsaW5rIjoiL2NhL3dvbWVuL3dhbGxldHMtYW5kLXNtYWxsLWFjY2Vzc29yaWVzLWZvci13b21lbi9sb25nLXdhbGxldHMtZm9yLXdvbWVuLWMtd29tZW4tYWNjZXNzb3JpZXMtd2FsbGV0cy0xIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIENoYWluIFdhbGxldHMgVyIsImxhYmVsIjoiQ2hhaW4gV2FsbGV0cyIsImxpbmsiOiIvY2Evd29tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLXdvbWVuL2NoYWluLXdhbGxldHMtZm9yLXdvbWVuLWMtd29tZW4tYWNjZXNzb3JpZXMtd2FsbGV0cy1jaGFpbi1hbmQtc3RyYXAtd2FsbGV0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDb21wYWN0IFdhbGxldHMgVyIsImxhYmVsIjoiQ29tcGFjdCBXYWxsZXRzIiwibGluayI6Ii9jYS93b21lbi93YWxsZXRzLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3Itd29tZW4vY29tcGFjdC13YWxsZXRzLWZvci13b21lbi1jLXdvbWVuLWFjY2Vzc29yaWVzLXdhbGxldHMtc21hbGwtd2FsbGV0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXJkIEhvbGRlcnMgJiBTbWFsbCBhY2Nlc3NvcmllcyBXIiwibGFiZWwiOiJDYXJkIEhvbGRlcnMgJiBTbWFsbCBBY2Nlc3NvcmllcyIsImxpbmsiOiIvY2Evd29tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLXdvbWVuL2NhcmQtaG9sZGVyLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy13YWxsZXRzLTIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUG91Y2hlcyBXIiwibGFiZWwiOiJQb3VjaGVzIiwibGluayI6Ii9jYS93b21lbi93YWxsZXRzLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3Itd29tZW4vcG91Y2hlcy1mb3Itd29tZW4tYy13b21lbi1wb3VjaGVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRlY2ggQWNjZXNzb3JpZXMgVyIsImxhYmVsIjoiVGVjaCBBY2Nlc3NvcmllcyIsImxpbmsiOiIvY2Evd29tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLXdvbWVuL3RlY2gtYWNjZXNzb3JpZXMtZm9yLXdvbWVuLWMtd29tZW4tdGVjaC1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL3dvbWVuL3dhbGxldHMtYW5kLXNtYWxsLWFjY2Vzc29yaWVzLWZvci13b21lbi1jLXdvbWVuLWFjY2Vzc29yaWVzLXdhbGxldHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQWNjZXNzb3JpZXMgVyIsImxhYmVsIjoiQWNjZXNzb3JpZXMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBXIEFjY2Vzc29yaWVzIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2Evd29tZW4vYWNjZXNzb3JpZXMtZm9yLXdvbWVuLWMtd29tZW4tYWNjZXNzb3JpZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQmVsdHMgVyIsImxhYmVsIjoiQmVsdHMiLCJsaW5rIjoiL2NhL3dvbWVuL2FjY2Vzc29yaWVzLWZvci13b21lbi9iZWx0cy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1iZWx0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXQgRXlld2VhciBXICIsImxhYmVsIjoiRXlld2VhciIsImxpbmsiOiIvY2Evd29tZW4vYWNjZXNzb3JpZXMtZm9yLXdvbWVuL2V5ZXdlYXItZm9yLXdvbWVuLWMtd29tZW4tZXlld2VhciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSAgRmFzaGlvbiBKZXdlbHJ5IFciLCJsYWJlbCI6IiBGYXNoaW9uIEpld2VscnkiLCJsaW5rIjoiLWMtamV3ZWxyeS13YXRjaGVzLWZhc2hpb24tamV3ZW
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for item in soup.find_all('item'):
        label = item.find('label')
        if label and any((keyword in label.text.lower() for keyword in ['loafers', 'sneakers', 'boots', 'slides', 'sandals', 'pumps', 'flats', 'shoes'])):
            link = item.find('link')
            if link:
                clothing_sections.append({'name': item.find('name').text if item.find('name') else '', 'label': label.text, 'link': link.text})
    return clothing_sections
Results: []
Search result: dlbHJ5IFciLCJsYWJlbCI6IiBGYXNoaW9uIEpld2VscnkiLCJsaW5rIjoiLWMtamV3ZWxyeS13YXRjaGVzLWZhc2hpb24tamV3ZWxyeS13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTaWxrICYgU2NhcnZlcyBXIiwibGFiZWwiOiJTaWxrcyAmIFNjYXJ2ZXMiLCJsaW5rIjoiL2NhL3dvbWVuL2FjY2Vzc29yaWVzLWZvci13b21lbi9zaWxrcy1hbmQtc2NhcnZlcy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1zaWxrcy1hbmQtc2NhcnZlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBIYXRzICYgR2xvdmVzIFciLCJsYWJlbCI6IkhhdHMgJiBHbG92ZXMiLCJsaW5rIjoiL2NhL3dvbWVuL2FjY2Vzc29yaWVzLWZvci13b21lbi9oYXRzLWdsb3Zlcy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1oYXRzLWFuZC1nbG92ZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gSGFpciBBY2Nlc3NvcmllcyBXIiwibGFiZWwiOiJIYWlyIEFjY2Vzc29yaWVzIiwibGluayI6Ii9jYS93b21lbi9hY2Nlc3Nvcmllcy1mb3Itd29tZW4vaGFpci1hY2Nlc3Nvcmllcy1mb3Itd29tZW4tYy13b21lbi1oYWlyLWFjY2Vzc29yaWVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNvY2tzICYgVGlnaHRzIFciLCJsYWJlbCI6IlNvY2tzICYgVGlnaHRzIiwibGluayI6Ii9jYS93b21lbi9hY2Nlc3Nvcmllcy1mb3Itd29tZW4vc29ja3MtYW5kLXRpZ2h0cy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3Nvcmllcy1zb2Nrcy10aWdodHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS93b21lbi9hY2Nlc3Nvcmllcy1mb3Itd29tZW4tYy13b21lbi1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBKZXdlbHJ5ICYgV2F0Y2hlcyBXIiwibGFiZWwiOiJKZXdlbHJ5ICYgV2F0Y2hlcyIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIEwzIFZpZXcgYWxsIEpld2VscnkiLCJsYWJlbCI6IlZpZXcgQWxsIEpld2VscnkiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9nb2xkLWpld2VscnktYy1qZXdlbHJ5LXdhdGNoZXMtZmluZS1qZXdlbHJ5IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIEZpbmUgUmluZ3MgZm9yIFdvbWVuIiwibGFiZWwiOiJSaW5ncyIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL2ZpbmUtamV3ZWxyeS9maW5lLWpld2VscnktZm9yLXdvbWVuL3JpbmdzLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS13b21lbi1yaW5ncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGaW5lIE5lY2tsYWNlcyBmb3IgV29tZW4iLCJsYWJlbCI6Ik5lY2tsYWNlcyIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL2ZpbmUtamV3ZWxyeS9maW5lLWpld2VscnktZm9yLXdvbWVuL25lY2tsYWNlcy1jLWpld2Vscnktd2F0Y2hlcy1maW5lLWpld2Vscnktd29tZW4tbmVja2xhY2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIEZpbmUgQnJhY2VsZXRzIGZvciBXb21lbiIsImxhYmVsIjoiQnJhY2VsZXRzIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZmluZS1qZXdlbHJ5L2ZpbmUtamV3ZWxyeS1mb3Itd29tZW4vYnJhY2VsZXRzLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS13b21lbi1icmFjZWxldHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDMgRmluZSBFYXJyaW5ncyBmb3IgV29tZW4iLCJsYWJlbCI6IkVhcnJpbmdzIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZmluZS1qZXdlbHJ5L2ZpbmUtamV3ZWxyeS1mb3Itd29tZW4vZWFycmluZ3MtYy1qZXdlbHJ5LXdhdGNoZXMtZmluZS1qZXdlbHJ5LXdvbWVuLWVhcnJpbmdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIFdhdGNoZXMgZm9yIFdvbWVuIiwibGFiZWwiOiJXYXRjaGVzIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvd2F0Y2hlcy93YXRjaGVzLWZvci13b21lbi1jLWpld2Vscnktd2F0Y2hlcy13YXRjaGVzLXdvbWVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2Evd29tZW4vYWNjZXNzb3JpZXMtZm9yLXdvbWVuL2pld2Vscnktd2F0Y2hlcy1mb3Itd29tZW4tYy13b21lbi1qZXdlbHJ5IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2Evd29tZW4tYy13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMSBNZW4gIiwibGFiZWwiOiJNZW4iLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMiBOZXcgaW4gTWVuICIsImxhYmVsIjoiTmV3IEluIE1lbiIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIE0gTGF0ZXN0IGFycml2YWxzIFZpZXcgYWxsICIsImxhYmVsIjoiVmlldyBBbGwgIiwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay1tZW4tYy1uZXctbWVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIFdOIFdpbnRlciBTZWxlY3Rpb24gTSIsImxhYmVsIjoiV2ludGVyIFNlbGVjdGlvbiIsImxpbmsiOiIvY2Evd2hhdHMtbmV3L2FwcmVzLXNraS1mb3ItbWVuLWMtbWVuLXdpbnRlciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXTiBGVyBTSFMgTSIsImxhYmVsIjoiRmFsbCBXaW50ZXIgU2hvZXMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL3dpbnRlci1zaG9lcy1mb3ItbWVuLWMtbWVuLXdpbnRlci1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXTiBMb2FmZXJzIE0iLCJsYWJlbCI6Ik1lbidzIExvYWZlcnMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL2xvYWZlcnMtZm9yLW1lbi1jLW1lbi1zaG9lcy1tb2NjYXNpbnMtYW5kLWxvYWZlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS93aGF0cy1uZXcvbmV3LWluL3RoaXMtd2Vlay1tZW4tYy1uZXctbWVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIEdpZnRzIE0iLCJsYWJlbCI6IkdpZnRzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTDMgR2lmdHMgZm9yIEhpbSAiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItbWVuLWMtZ2lmdHMtZm9yLWhpbSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBHSUZUUyBCZWF1dHkgR2lmdHMiLCJsYWJlbCI6IkJlYXV0eSBHaWZ0cyIsImxpbmsiOiIvY2EvYmVhdXR5L2dpZnQtaWRlYXMtYy1iZWF1dHktZ2lmdC1pZGVhcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIFBlcnNvbmFsaXplZCBHaWZ0cyBNIiwibGFiZWwiOiJQZXJzb25hbGl6ZWQgR2lmdHMiLCJsaW5rIjoiL3N0L21vbm9ncmFtbWluZyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL25zdC9naWZ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBCYWdzIE0iLCJsYWJlbCI6IkJhZ3MiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBNIEJhZ3MgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9tZW4vYm
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for item in soup.find_all('item'):
        label = item.find('label')
        if label and any((keyword in label.text.lower() for keyword in ['fashion', 'clothing', 'apparel', 'wear'])):
            link = item.find('link')
            if link:
                clothing_sections.append({'name': item.find('name').text if item.find('name') else '', 'label': label.text, 'link': link.text})
    return clothing_sections
Results: []
Search result: 51IjpbeyJuYW1lIjoiTk9SQU0gLSBNIEJhZ3MgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9tZW4vYmFncy1mb3ItbWVuLWMtbWVuLWJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTWVzc2VuZ2VyICYgQ3Jvc3Nib2R5IGJhZ3MgTSIsImxhYmVsIjoiTWVzc2VuZ2VyICYgQ3Jvc3Nib2R5IEJhZ3MiLCJsaW5rIjoiL2NhL21lbi9iYWdzLWZvci1tZW4vbWVzc2VuZ2Vycy1jcm9zc2JvZHktYmFncy1mb3ItbWVuLWMtbWVuLWJhZ3MtbWVzc2VuZ2VyLWJhZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQmVsdCBCYWdzIE0iLCJsYWJlbCI6IkJlbHQgQmFncyIsImxpbmsiOiIvY2EvbWVuL2JhZ3MtZm9yLW1lbi9iZWx0LWJhZ3MtZm9yLW1lbi1jLW1lbi1iYWdzLWJlbHQtYmFncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBCYWNrcGFja3MgTSIsImxhYmVsIjoiQmFja3BhY2tzIiwibGluayI6Ii9jYS9tZW4vYmFncy1mb3ItbWVuL2JhY2twYWNrcy1mb3ItbWVuLWMtbWVuLWJhZ3MtYmFja3BhY2tzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRvdGUgQmFncyBNIiwibGFiZWwiOiJUb3RlIEJhZ3MiLCJsaW5rIjoiL2NhL21lbi9iYWdzLWZvci1tZW4vdG90ZS1iYWdzLWZvci1tZW4tYy1tZW4tYmFncy10b3RlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBCdXNpbmVzcyBCYWdzIE0iLCJsYWJlbCI6IkJ1c2luZXNzIEJhZ3MiLCJsaW5rIjoiL2NhL21lbi9iYWdzLWZvci1tZW4vYnVzaW5lc3MtYmFncy1mb3ItbWVuLWMtbWVuLWJhZy1idXNpbmVzcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTbWFsbCBCYWcgTSIsImxhYmVsIjoiU21hbGwgQmFncyAiLCJsaW5rIjoiL2NhL21lbi9iYWdzLWZvci1tZW4vc21hbGwtYmFncy1mb3ItbWVuLWMtbWVuLWJhZ3Mtc21hbGwiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRHVmZmxlIGJhZ3MgTSIsImxhYmVsIjoiRHVmZmxlIEJhZ3MiLCJsaW5rIjoiL2NhL21lbi9iYWdzLWZvci1tZW4vZHVmZmxlLWJhZ3MtZm9yLW1lbi1jLW1lbi1iYWdzLWR1ZmZsZS1iYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvbWVuL2JhZ3MtZm9yLW1lbi1jLW1lbi1iYWdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIFRyYXZlbCBNICIsImxhYmVsIjoiVHJhdmVsIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTSBUcmF2ZWwgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9tZW4vdHJhdmVsLWZvci1tZW4tYy1tZW4tYmFncy1sdWdnYWdlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFdlZWtlbmQgJiBEdWZmbGUgQmFncyBNIiwibGFiZWwiOiJXZWVrZW5kICYgRHVmZmxlIEJhZ3MiLCJsaW5rIjoiL2NhL21lbi90cmF2ZWwtZm9yLW1lbi93ZWVrZW5kLWR1ZmZsZS1iYWdzLWZvci1tZW4tYy1tZW4tYmFncy1sdWdnYWdlLWNhcnJ5b25zIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRyb2xsZXlzIE0iLCJsYWJlbCI6IlRyb2xsZXlzIiwibGluayI6Ii9jYS9tZW4vdHJhdmVsLWZvci1tZW4vdHJvbGxleXMtZm9yLW1lbi1jLW1lbi10cmF2ZWwtdHJvbGxleSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBUcmF2ZWwgQWNjZXNzb3JpZXMgTSIsImxhYmVsIjoiQWNjZXNzb3JpZXMiLCJsaW5rIjoiL2NhL21lbi90cmF2ZWwtZm9yLW1lbi9hY2Nlc3Nvcmllcy1mb3ItbWVuLWMtbWVuLXRyYXZlbC1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBIYXJkIFNpZGVkIEx1Z2dhZ2UgTSIsImxhYmVsIjoiSGFyZCBTaWRlZCBMdWdnYWdlIiwibGluayI6Ii9jYS9tZW4vdHJhdmVsLWZvci1tZW4vaGFyZC1zaWRlZC1sdWdnYWdlLWZvci1tZW4tYy1tZW4taGFyZC1zaWRlZCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBHdWNjaSBQb3J0ZXIiLCJsYWJlbCI6Ikd1Y2NpIFBvcnRlciIsImxpbmsiOiIvY2EvbWVuL3RyYXZlbC1mb3ItbWVuL2FsdW1pbnVtLWdnLWMtbWVuLWFsdW1pbnVtLWdnIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvbWVuL3RyYXZlbC1mb3ItbWVuLWMtbWVuLWJhZ3MtbHVnZ2FnZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBSZWFkeS1Uby1XZWFyIE0gIiwibGFiZWwiOiJSZWFkeS1Uby1XZWFyIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTSBSZWFkeS10by13ZWFyIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi1jLW1lbi1yZWFkeXRvd2VhciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBULVNoaXJ0cyAmIFBvbG9zIE0iLCJsYWJlbCI6IlQtU2hpcnRzICYgUG9sb3MiLCJsaW5rIjoiL2NhL21lbi9yZWFkeS10by13ZWFyLWZvci1tZW4vdC1zaGlydHMtcG9sby1zaGlydHMtZm9yLW1lbi1jLW1lbi1yZWFkeXRvd2Vhci10c2hpcnRzLWFuZC1wb2xvcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBUcmFja3N1aXRzICYgU3dlYXRzaGlydHMgTSIsImxhYmVsIjoiVHJhY2tzdWl0cyAmIFN3ZWF0c2hpcnRzIiwibGluayI6Ii9jYS9tZW4vcmVhZHktdG8td2Vhci1mb3ItbWVuL3RyYWNrc3VpdHMtc3dlYXRzaGlydC1mb3ItbWVuLWMtbWVuLXJlYWR5dG93ZWFyLW5ldy1zd2VhdHNoaXJ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBPdXRlcndlYXIgTSIsImxhYmVsIjoiT3V0ZXJ3ZWFyIiwibGluayI6Ii9jYS9tZW4vcmVhZHktdG8td2Vhci1mb3ItbWVuL291dGVyd2Vhci1mb3ItbWVuLWMtbWVuLXJlYWR5dG93ZWFyLW91dGVyd2VhciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTaGlydHMgTSIsImxhYmVsIjoiU2hpcnRzIiwibGluayI6Ii9jYS9tZW4vcmVhZHktdG8td2Vhci1mb3ItbWVuL3NoaXJ0cy1mb3ItbWVuLWMtbWVuLXJlYWR5dG93ZWFyLWRyZXNzLXNoaXJ0cy1hbmQtc3BvcnRzLXNoaXJ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBLbml0d2VhciBNIiwibGFiZWwiOiJLbml0d2VhciIsImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi9rbml0d2Vhci1mb3ItbWVuLWMtbWVuLXJlYWR5dG93ZWFyLXN3ZWF0ZXJzLWFuZC1jYXJkaWdhbnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ29hdHMgTSIsImxhYmVsIjoiQ29hdHMiLCJsaW5rIjoiL2NhL21lbi9yZWFkeS10by13ZWFyLWZvci1tZW4vY29hdHMtZm9yLW1lbi1jLW1lbi1yZWFkeXRvd2Vhci1jb2F0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBQYW50cyAmIFNob3J0cyBNIiwibGFiZWwiOiJQYW50cyAmIFNob3J0cyIsImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi9wYW50cy1hbmQtc2hvcnRzLWZvci1tZW4tYy1tZW4tcmVhZHl0b3dlYXItcGFudHMtYW5kLXNob3J0cyIsImlzTm9uU2hvcHBhYm
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['bags', 'shirts', 'pants', 'shorts', 'coats', 'jackets', 'suits']
    for item in soup.find_all(attrs={'label': True}):
        label = item.get('label', '').lower()
        if any((keyword in label for keyword in clothing_keywords)):
            clothing_sections.append({'name': item.get('name', ''), 'label': item.get('label', ''), 'link': item.get('link', '')})
    return clothing_sections
Results: []
Search result: 9wYW50cy1hbmQtc2hvcnRzLWZvci1tZW4tYy1tZW4tcmVhZHl0b3dlYXItcGFudHMtYW5kLXNob3J0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBGb3JtYWx3ZWFyIE0iLCJsYWJlbCI6IkZvcm1hbHdlYXIiLCJsaW5rIjoiL2NhL21lbi9yZWFkeS10by13ZWFyLWZvci1tZW4vZm9ybWFsd2Vhci1mb3ItbWVuLWMtbWVuLWphY2tldHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRGVuaW0gTSIsImxhYmVsIjoiRGVuaW0iLCJsaW5rIjoiL2NhL21lbi9yZWFkeS10by13ZWFyLWZvci1tZW4vZGVuaW0tZm9yLW1lbi1jLW1lbi1yZWFkeS10by13ZWFyLWRlbmltIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIExlYXRoZXIgTSIsImxhYmVsIjoiTGVhdGhlciIsImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi9sZWF0aGVyLWZvci1tZW4tYy1tZW4tbGVhdGhlciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTd2ltd2VhciBNIiwibGFiZWwiOiJTd2ltd2VhciIsImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi9zd2ltd2Vhci1mb3ItbWVuLWMtbWVuLXN3aW13ZWFyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvbWVuL3JlYWR5LXRvLXdlYXItZm9yLW1lbi1jLW1lbi1yZWFkeXRvd2VhciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBTaG9lcyBNIiwibGFiZWwiOiJTaG9lcyIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIE0gU2hvZXMgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9tZW4vc2hvZXMtZm9yLW1lbi1jLW1lbi1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBXaW50ZXIgU2hvZXMgTSIsImxhYmVsIjoiRmFsbCBXaW50ZXIgU2hvZXMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL3dpbnRlci1zaG9lcy1mb3ItbWVuLWMtbWVuLXdpbnRlci1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMb2FmZXJzIE0iLCJsYWJlbCI6IkxvYWZlcnMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL2xvYWZlcnMtZm9yLW1lbi1jLW1lbi1zaG9lcy1tb2NjYXNpbnMtYW5kLWxvYWZlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU25lYWtlcnMgTSIsImxhYmVsIjoiU25lYWtlcnMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL3NuZWFrZXJzLWZvci1tZW4tYy1tZW4tc2hvZXMtc25lYWtlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQm9vdHMgJiBBbmtsZSBCb290cyBNIiwibGFiZWwiOiJCb290cyAmIEFua2xlIEJvb3RzIiwibGluayI6Ii9jYS9tZW4vc2hvZXMtZm9yLW1lbi9ib290cy1hbmtsZS1ib290cy1mb3ItbWVuLWMtbWVuLXNob2VzLWJvb3RzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNsaWRlcyAmIFNhbmRhbHMgTSIsImxhYmVsIjoiU2xpZGVzICYgU2FuZGFscyIsImxpbmsiOiIvY2EvbWVuL3Nob2VzLWZvci1tZW4vc2xpZGVzLXNhbmRhbHMtZm9yLW1lbi1jLW1lbnMtc2hvZXMtc2FuZGFscy1hbmQtc2xpZGVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIERyZXNzIFNob2VzIE0iLCJsYWJlbCI6IkRyZXNzIFNob2VzIiwibGluayI6Ii9jYS9tZW4vc2hvZXMtZm9yLW1lbi9kcmVzcy1zaG9lcy1mb3ItbWVuLWMtbWVuLXNob2VzLWxhY2UtdXBzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIERyaXZlcnMgTSIsImxhYmVsIjoiRHJpdmVycyIsImxpbmsiOiIvY2EvbWVuL3Nob2VzLWZvci1tZW4vZHJpdmVycy1mb3ItbWVuLWMtbWVuLXNob2VzLWRyaXZlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTXVsZXMgTSIsImxhYmVsIjoiTXVsZXMiLCJsaW5rIjoiL2NhL21lbi9zaG9lcy1mb3ItbWVuL211bGVzLWZvci1tZW4tYy1tZW5zLXNob2VzLXNsaXBwZXJzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvbWVuL3Nob2VzLWZvci1tZW4tYy1tZW4tc2hvZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgU21hbGwgTGVhdGhlciBHb29kcyBNIiwibGFiZWwiOiJTbWFsbCBMZWF0aGVyIEdvb2RzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTSBTbWFsbCBMZWF0aGVyIEdvb2RzIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvbWVuL3dhbGxldHMtYW5kLXNtYWxsLWFjY2Vzc29yaWVzLWZvci1tZW4tYy1tZW4tYWNjZXNzb3JpZXMtd2FsbGV0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gU21hbGwgQmFncyAmIFBvdWNoZXMgTSBNYXkgMzAiLCJsYWJlbCI6IlNtYWxsIEJhZ3MgJiBQb3VjaGVzIiwibGluayI6Ii9jYS9tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLW1lbi9zbWFsbC1iYWdzLXBvdWNoZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy1zbWFsbC1iYWdzLXBvdWNoIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJpLUZvbGQgV2FsbGV0cyBNIiwibGFiZWwiOiJCaS1Gb2xkIFdhbGxldHMiLCJsaW5rIjoiL2NhL21lbi93YWxsZXRzLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3ItbWVuL2JpLWZvbGQtd2FsbGV0cy1mb3ItbWVuLWMtbWVuLXdhbGxldHMtYmktZm9sZCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMb25nIFdhbGxldHMgTSIsImxhYmVsIjoiTG9uZyBXYWxsZXRzIiwibGluayI6Ii9jYS9tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLW1lbi9sb25nLXdhbGxldHMtZm9yLW1lbi1jLW1lbi13YWxsZXRzLXppcC1hcm91bmQiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ2FyZCBIb2xkZXJzIE0iLCJsYWJlbCI6IkNhcmQgSG9sZGVycyIsImxpbmsiOiIvY2EvbWVuL3dhbGxldHMtYW5kLXNtYWxsLWFjY2Vzc29yaWVzLWZvci1tZW4vY2FyZC1ob2xkZXJzLWZvci1tZW4tYy1tZW4td2FsbGV0cy1jYXJkLWNvaW4tY2FzZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gS2V5cmluZ3MgJiBLZXkgQ2FzZXMgTSIsImxhYmVsIjoiS2V5cmluZ3MgJiBLZXkgQ2FzZXMiLCJsaW5rIjoiL2NhL21lbi93YWxsZXRzLWFuZC1zbWFsbC1hY2Nlc3Nvcmllcy1mb3ItbWVuL2tleXJpbmdzLWFuZC1rZXktY2FzZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy1zbWFsbC1hY2Nlc3Nvcmllcy10ZWNoLWtleXJpbmdzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRlY2ggQWNjZXNzb3JpZXMgTSIsImxhYmVsIjoiVGVjaCBBY2Nlc3NvcmllcyIsImxpbmsiOiIvY2EvbWVuL3dhbGxldHMtYW5kLXNtYWxsLWFjY2Vzc29yaWVzLWZvci1tZW4vdGVjaC1hY2Nlc3Nvcmllcy1mb3ItbWVuLWMtbWVuLXRlY2gtYWNjZXNzb3JpZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9tZW4vd2FsbGV0cy1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy13YWxsZXRzIiwiaXNOb25TaG9wcGFibGUiOm
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['jackets', 'shoes', 'sneakers', 'boots', 'sandals', 'dress', 'mules']
    sections = soup.find_all('section')
    for section in sections:
        if any((keyword in section.text.lower() for keyword in clothing_keywords)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: 1hbmQtc21hbGwtYWNjZXNzb3JpZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy13YWxsZXRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEFjY2Vzc29yaWVzIE0iLCJsYWJlbCI6IkFjY2Vzc29yaWVzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTSBBY2Nlc3NvcmllcyBWaWV3IEFsbCAiLCJsYWJlbCI6IlZpZXcgQWxsICIsImxpbmsiOiIvY2EvbWVuL2FjY2Vzc29yaWVzLWZvci1tZW4tYy1tZW4tYWNjZXNzb3JpZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQmVsdHMgTSIsImxhYmVsIjoiQmVsdHMiLCJsaW5rIjoiL2NhL21lbi9hY2Nlc3Nvcmllcy1mb3ItbWVuL2JlbHRzLWZvci1tZW4tYy1tZW4tYWNjZXNzb3JpZXMtYmVsdHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ2F0IEV5ZXdlYXIgTSIsImxhYmVsIjoiRXlld2VhciIsImxpbmsiOiIvY2EvbWVuL2FjY2Vzc29yaWVzLWZvci1tZW4vZXlld2Vhci1mb3ItbWVuLWMtbWVuLWV5ZXdlYXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRmFzaGlvbiBKZXdlbHJ5IE0iLCJsYWJlbCI6IkZhc2hpb24gSmV3ZWxyeSIsImxpbmsiOiItYy1qZXdlbHJ5LXdhdGNoZXMtZmFzaGlvbi1qZXdlbHJ5LW1lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBUaWVzIE0iLCJsYWJlbCI6IlRpZXMiLCJsaW5rIjoiL2NhL21lbi9hY2Nlc3Nvcmllcy1mb3ItbWVuL3RpZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy10aWVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNjYXJ2ZXMgTSIsImxhYmVsIjoiU2NhcnZlcyIsImxpbmsiOiIvY2EvbWVuL2FjY2Vzc29yaWVzLWZvci1tZW4vc2NhcnZlcy1mb3ItbWVuLWMtbWVuLWFjY2Vzc29yaWVzLXNjYXJ2ZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gSGF0cyAmIEdsb3ZlcyBNIiwibGFiZWwiOiJIYXRzICYgR2xvdmVzIiwibGluayI6Ii9jYS9tZW4vYWNjZXNzb3JpZXMtZm9yLW1lbi9oYXRzLWFuZC1nbG92ZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3Nvcmllcy1oYXRzLWFuZC1nbG92ZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU29ja3MgTSIsImxhYmVsIjoiU29ja3MiLCJsaW5rIjoiL2NhL21lbi9hY2Nlc3Nvcmllcy1mb3ItbWVuL3NvY2tzLWZvci1tZW4tYy1tZW4tYWNjZXNzb3JpZXMtc29ja3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9tZW4vYWNjZXNzb3JpZXMtZm9yLW1lbi1jLW1lbi1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBKZXdlbHJ5ICYgV2F0Y2hlcyBNIiwibGFiZWwiOiJKZXdlbHJ5ICYgV2F0Y2hlcyAiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMyBWaWV3IGFsbCBKZXdlbHJ5IE0iLCJsYWJlbCI6IlZpZXcgQWxsIEpld2VscnkiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9nb2xkLWpld2VscnkvZ29sZC1qZXdlbHJ5LWZvci1tZW4tYy1qZXdlbHJ5LXdhdGNoZXMtZmluZS1qZXdlbHJ5LW1lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGaW5lIFJpbmdzIGZvciBNZW4iLCJsYWJlbCI6IlJpbmdzIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZ29sZC1qZXdlbHJ5L2dvbGQtamV3ZWxyeS1mb3ItbWVuL3JpbmdzLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS1tZW4tcmluZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDMgRmluZSBOZWNrbGFjZXMgZm9yIE1lbiIsImxhYmVsIjoiTmVja2xhY2VzIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZ29sZC1qZXdlbHJ5L2dvbGQtamV3ZWxyeS1mb3ItbWVuL25lY2tsYWNlcy1jLWpld2Vscnktd2F0Y2hlcy1maW5lLWpld2VscnktbWVuLW5lY2tsYWNlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGaW5lIEJyYWNlbGV0cyBmb3IgTWVuIiwibGFiZWwiOiJCcmFjZWxldHMiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9nb2xkLWpld2VscnkvZ29sZC1qZXdlbHJ5LWZvci1tZW4vYnJhY2VsZXRzLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS1tZW4tYnJhY2VsZXRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIEZpbmUgRWFycmluZ3MgZm9yIE1lbiIsImxhYmVsIjoiRWFycmluZ3MiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9nb2xkLWpld2VscnkvZ29sZC1qZXdlbHJ5LWZvci1tZW4vZWFycmluZ3MtYy1qZXdlbHJ5LXdhdGNoZXMtZmluZS1qZXdlbHJ5LW1lbi1lYXJyaW5ncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBXYXRjaGVzIGZvciBNZW4iLCJsYWJlbCI6IldhdGNoZXMiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy93YXRjaGVzL3dhdGNoZXMtZm9yLW1lbi1jLWpld2Vscnktd2F0Y2hlcy13YXRjaGVzLW1lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL21lbi9hY2Nlc3Nvcmllcy1mb3ItbWVuL2pld2Vscnktd2F0Y2hlcy1mb3ItbWVuLWMtbWVuLWpld2VscnkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9tZW4tYy1tZW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDEgQ2hpbGRyZW4iLCJsYWJlbCI6IkNoaWxkcmVuIiwidGhlbWF0aWNOYXZpZ2F0aW9uIjpbeyJsYWJlbCI6Ikd1Y2NpIFN0cm9sbGVyIiwibmFtZSI6Ik5PUkFNIC0gVGhlbWF0aWMgTDIgQ2hpbGRyZW4gU3Ryb2xsZXIiLCJsaW5rIjoiL25zdC9ndWNjaS1zdHJvbGxlcnMiLCJpbWFnZSI6eyJ0aXRsZSI6IlByb21vQ29tcG9uZW50X3RoZW1hdGljLXN0cm9sbGVyXzAwMV9EZWZhdWx0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvOFJScEVfY205WndUMWJSOWs4OGVqRmRha3AwT056dldObDVTUmg3UUY2aGhwK3hUYTNuM25xT0JWS1RqaDdrUktGaFhlZ2FfK1ZVN3MzbFBjd0hzZDlNTnhQKzFIZzJOQzB3aHBsZUlqRTkzZzJwQ2R4ZUhHTnBwSWlsRGx1bHo0bjZiUlhaVzBsY012ejBpMERKb3U0MFc5WXRvd3BRUDVtK05OaWVmQzIwRTE5eFlyUSt3QUVfV3k5OFVHeEpCaGRqdV84NXRHcTA5SWpNZStqSEswVjlUN1RfdFd4dnJpaXRyU082SElrM0NaaVpkUnppOExsZzhPanRPMkQ2dWhfUnFVUk1NelFLVmprVVV4Rzh4Smp3RFJhRjVJTVRmT3pTdmJwSWZab3Y3Ukw0eStjZld3dzRpcGV3ckVEb04vUHJvbW9Db21wb25lbnRfR3VjY2ktS0lEUy1GVzI0LU1heTI0LTI0MDMyNy0xLTQzMV8wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1JqaE9uM1VrallQREp1R05sU1ZoNDlVMHYzWVdJNFNlRWNoX19GUHNoQ28xRDYxUzZ5cW0xR2R1ZnJuWXE4UllsV1NnT2hVYUZCdlJQTlZaSHR6VDF5a3NsQnZ4TXcreitORGFxYW04KzUyV1JmMXFRSUZyT3ZlRkVERFhSSnpuYmUySzJIVDRsczRIdVJOOGRMNEVqMWNLeG9Bbk9BaWRlM2lKU1lqWGJnOUVBMVJzTjZfVlR2ZWpCdHFiK2FORTV2ZDE5bm1jZ2JfOGVmUmI2QkVyQnkzSHpSRGdUK3VqQ1d1V3JweXJfZ2RQal
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section'):
        if any((keyword in section.get_text().lower() for keyword in ['fashion', 'hats', 'gloves', 'socks', 'belts', 'ties', 'scarves'])):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: lKU1lqWGJnOUVBMVJzTjZfVlR2ZWpCdHFiK2FORTV2ZDE5bm1jZ2JfOGVmUmI2QkVyQnkzSHpSRGdUK3VqQ1d1V3JweXJfZ2RQalZtVHY5VzRFTlBoc2xJZ2FCb3VPWHNNSUEzNmd3K0hoR2FJS1g2cWd5OWVBYnZiT05OQWdFQ2NKWm16djhoSEdfdDF0cmh6WF9VYXdqaV9CMGJJemlDQU1RTDNuYloyYkNQb1k3QVd2QT09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUtJRFMtRlcyNC1NYXkyNC0yNDAzMjctMS00MzFfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3lWenMyb3Azam1BU0FIcnpoKzVuTW8zZ1hvWnV1R25sVjQ4SXF2QXo2aDBRWmpGWmgyZ1dPTVBEdHQ5bDhndkU1dHUzRFU1WVpvUmRkTEtzY01DWWlSdVRfakZkcnB4ZElUczNjaitFVnVHMWNNWWNFeV9WZkNmUlRsbjd0MjZMOWxvX0FkQkc4YkhfWTBhMnVxNW1GcUhPNmRlWU1qTHZ6ZnFRYm4rTF9CTVZzamNaeDhEYTZWR1hRM0FfNXo1K3QyZkorNG41OWJnSW1jd0xxVHZ4RUx0Mm1teWVZSkU3ZTNNNHg1M0dtallpNWJ5eVJOemRkWnVGSE9ENVoyd1hfaTJMaDZGNzdJYW5wdkRmOW96XzJKcV9CSTdhNkdHM2hFRW02czFsY1Q5TUdJZU02YldLY2xBZXNyRG9kWXZfcmVtR1BwaWpQeElEWWcwRk05bklSUT09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUtJRFMtRlcyNC1NYXkyNC0yNDAzMjctMS00MzFfMDAxX0RlZmF1bHQucG5nIn19fV0sInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIEwyIEJhYnkiLCJsYWJlbCI6IkJhYnkiLCJ0aGVtYXRpY05hdmlnYXRpb24iOlt7ImxhYmVsIjoiQmFieSIsIm5hbWUiOiJOT1JBTSAtIFRoZW1hdGljIE5hdiBDaGlsZHJlbiBCYWJ5IiwibGluayI6Ii9jYS9jaGlsZHJlbi9iYWJ5LWMtY2hpbGRyZW4tYmFieSIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfQmFieUZXMjRfTWFpbl9KdW5lMjAyNCIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0tpdUpsckw0QkpuS29ZZnhadjFnRkk4RHBPMk5fZ210NmJGNWx6dWVZNzNxcEhCNEhNUjNJZGhBZHFXWHB3eFpXbXVXdDRyTU41ZWpOWU02YzBmTmVDakh3UGs3eFZCODRMV3RMSnRZN25CZTdlYmlYQmxIcEtEK3l0VU9pYWhLWXhSZTlJS3dtQzVCOW85QVhWeFJ3NVN3K1Baa2grdTB6MFYzWnR4dWgrSGpkSzFQcTF2WWUzR1UzM0F0cHdZYmszN2lNUmtzN0pORGVKUkF0VzNFam1hYTNMZzRDTV9oZ1QwQWJ5U2pUeGh5WmRIRGcrNFdQcmwyVkFybVM3TEMvUHJvbW9Db21wb25lbnRfTU5LTG9vazAyOF8wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3pnaTRZeXRDUHVzZ1h0Q3BlTUZqUDBPWjRrK3RkWWlHY3BuWmloRGhyNmVCd1dGRjljZ3grOFNTc1FDdGJGc1ZsT2NIRnEwM01vTzl6ZktOVUF4OFN0aEZFVGZmcnl3SkN2ZXJCdjNCSTBCMmpfWWdwX1BfaURWQ0RZQytmeWZVRU5fTW5yYXA1bWVhd3lETXpoWXRGVG9hS3BWbXlSWnIrbit4TXZ2QzYwb2JYTWJwS3Nfc3B4azZESksraEZJekpjRW9SZ3Z4c0JIZituX1Nfbm9CdXh2aWtjbHhNdWNteHdiaWlXVGZNcHVzU085R2NQSTlEQTFlN2pqemNHdFE1dWkrbktHdkFRN0ttUnRmbkJjeDJ3PT0vUHJvbW9Db21wb25lbnRfTU5LTG9vazAyOF8wMDFfRGVmYXVsdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvR2U4WFJqdGNHUUpIMDNXNVFZbTlyUERSVXFxVTl0V1dzNjFCc2htVk1GN2E1ZW1SUkZsTDVNR0dQZ2lJYTg3OG8wd2dYTDlsQ0Q1MnR1UTdUR05kSzF0alh5M1dfNnF0ZjJnM2xIbXplUFhPanFUcFVLX0Z1RGdqek9mRjRXdElZYUZ6ZFFRU0ZjOFFTS0RZTUxvR2k5UGhyTlR6amVDMThJQXcydERjeDl6ZkpjMnNKUkFnKzV1U3FPOUI2NjBGVjdlYjF6WmRUK3IrMmlJa05VZ2VSYSttNEE2Zl9RZkhvdXZNOUU1a0xNRzhqbTgwaWpQdHhaYmJ0bXhxN0VtZGFscnllblE4Nl83cGlxQlJZV1kwY1E9PS9Qcm9tb0NvbXBvbmVudF9NTktMb29rMDI4XzAwMV9EZWZhdWx0LnBuZyJ9fX1dLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBiYWJ5IFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvY2hpbGRyZW4vYmFieS1jLWNoaWxkcmVuLWJhYnkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQ2hpbGRyZW4gU3Ryb2xsZXIiLCJsYWJlbCI6Ikd1Y2NpIFN0cm9sbGVyIiwibGluayI6Ii9uc3QvZ3VjY2ktc3Ryb2xsZXJzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIE5ld2Jvcm4iLCJsYWJlbCI6Ik5ld2Jvcm4iLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JhYnkvbmV3Ym9ybi1jbG90aGVzLWMtY2hpbGRyZW4tYmFieS1uZXdib3JuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJhYnkgR2lybHMiLCJsYWJlbCI6IkJhYnkgR2lybHMiLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JhYnkvY2xvdGhlcy1mb3ItYmFieS1naXJscy1jLWNoaWxkcmVuLWJhYnktZ2lybHMtMC0zNi1tIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJhYnkgQm95cyIsImxhYmVsIjoiQmFieSBCb3lzIiwibGluayI6Ii9jYS9jaGlsZHJlbi9iYWJ5L2Nsb3RoZXMtZm9yLWJhYnktYm95cy1jLWNoaWxkcmVuLWJhYnktYm95cy0wLTM2LW0iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQmFieSBTaG9lcyIsImxhYmVsIjoiQmFieSBTaG9lcyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vYmFieS9iYWJ5LXNob2VzLWMtY2hpbGRyZW4tYmFieS1iYWJ5LXNob2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRvZGRsZXIgU2hvZXMiLCJsYWJlbCI6IlRvZGRsZXIgU2hvZXMiLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JhYnkvc2hvZXMtZm9yLXRvZGRsZXJzLWMtY2hpbGRyZW4tYmFieS10b2RkbGVyLXNob2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIERpYXBlciBCYWdzIiwibGFiZWwiOiJEaWFwZXIgQmFncyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vYmFieS9kaWFwZXItYmFncy1hbmQtdG90ZXMtYy1jaGlsZHJlbi1iYWJ5LWRpYXBlci1iYWdzLWFuZC10b3RlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBBY2Nlc3NvcmllcyAuIiwibGFiZWwiOiJBY2Nlc3NvcmllcyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vYmFieS9hY2Nlc3Nvcmllcy1mb3ItYmFiaWVzLWMtY2hpbGRyZW4tYmFieS1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JhYnktYy1jaGlsZHJlbi1iYWJ5IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIEdpcmxzIiwibGFiZWwiOiJHaXJscyIsInRoZW1hdGljTmF2aWdhdGlvbiI6W3sibGFiZWwiOiJHaXJscyIsIm5hbWUiOiJOT1JBTSAtIFRoZW1hdGljIE5hdiBDaGlsZHJlbiBHaXJscyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vZ2lybHMtYy1jaGlsZHJlbi1naXJscyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfSnVuaW9yR2lybEZXMjRfTWFpbl9KdW5lMjAyNCIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L05acXpxZm5xOHBhT3dhUEVEVWU1Nnd5MzJCaUhhVHlGTW1TN29wUnRsK0JlSF
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('subMenu'):
        label = section.get('label', '').lower()
        if 'clothes' in label or 'clothing' in label:
            clothing_sections.append({'name': section.get('name', ''), 'label': section.get('label', ''), 'link': section.get('link', ''), 'isNonShoppable': section.get('isNonShoppable', False)})
    return clothing_sections
Results: []
Search result: 9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L05acXpxZm5xOHBhT3dhUEVEVWU1Nnd5MzJCaUhhVHlGTW1TN29wUnRsK0JlSFJPK0dwTm5TbFZrVzhQQ2NoaUV5R0R5Tm1VTHZYM1VvU2h6bllGckFfVDVjVGF6R3dMK0lPaWJjMGwycVMzSm5QOW50eWt5YnlCaldhUXIzYjQxQ3l5dCsyOTk5dGJiZlROQUhNVmVpb1VGdndIaWZGaVRwMEZuazRVbEZNN1NnOXlMMjE5a3N5K2Q1YXVneWwrVzZaTUs4TkRTZ2F2SVIyK2Z3TjA2djZZRUFRYnpEcStzQnVrT2k2RVduT1QxQWxZc1V4bzhwN1N6Y2RGeWRyUlA4ZnVJMlg4aXZVa2RsXzJnbnZzeVVnVnpSc1FQVEZYSzgrcVpOQjdlV3diZTFueDBFdGNtVUd5WDFldG1YRk45eThRa3loVVNmOWlPS080Nlo3QXloZz09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUtJRFMtRlcyNC1NYXkyNC0yNDAzMjctTEIxMS0xMzNfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9USWVVZ2FOM3RORDlVOHB4eTNxM3hzSHlmcDFaUmw1Z0JibnoxNFk1d1cyck1PKzhTZHRtWEJvTldoWGljT1dDclVIcXdobGprY2pKVmhuZkVsQmd1ZE1fTVNWanEzSDhvaXpkcnBfQ0pzOVNXZlpjczdFYkZDb1pMRlhia2F4WThUUzU3QXVkSllNZENuMzJQSjJmZkFPakRYSjR6aDBDY016MkJmbHZnYTBkSHFGWVJNaUFPejduTDBNR0N0X0Rha1A3eFM0OW4rNVYrdjhLakpJeTZ1eGpDbldQS3lFZ29BYmhJYzFya0JXaW80VU1RMTFYRmV6RU5YcFlvcHo3b0NZMW4rTU9yaXlRbkNxWlRxTWNLbVpTRFJGM3lQcnhzell0cXRxZ2ZfOFNUaWZXOXFuMXBvaWhkK1hfSkR2RnVjeFRfT01sK3c0N2tjc1dEQ0FRQ2c9PS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1LSURTLUZXMjQtTWF5MjQtMjQwMzI3LUxCMTEtMTMzXzAwMV9EZWZhdWx0LnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9WNFZwNXV0dkcwd3R6U0VDZmlIKzlUUTZpVUtZMCtvWUlwaXRVU3hfNmEzVG5Da1dRdm1OYVF1YUpxVHdIRXpvVEoxSG1VRFYzUkhRT2t2cWxhQVA1T1BxcDZiSmVyeF9OTXI5UStkY19uUUwrMUJ4dWlBU2RCSFFLbFhwbEczWXZidTNWQkMyX0JPUDBkT002RTVIeGdVbmZISlErQUgzSzR3dDZOSlhUSXZ4WU84QTVPWmcrZU52SHg3SmRtVlZMNEdTQnJRRjFHUEJyTVZZQXpNNGt4YVljQkcxU1Nzek5sMk5iZDdJTzI0ZFd2YW15dmVrb21wcGFCU1dRc1ljRk94SThhX2lCSUNSdUhJcUw2alUrZ3ViM2lHS1BCWkR1bWV3b1VNSVdXQm04MGtqZkpOYm5FWWMxUnhselhOTUJKSzNGMGZ6S3daWkl4VCtJOThYRkE9PS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1LSURTLUZXMjQtTWF5MjQtMjQwMzI3LUxCMTEtMTMzXzAwMV9EZWZhdWx0LnBuZyJ9fX1dLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBHaXJsIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvY2hpbGRyZW4vZ2lybHMtYy1jaGlsZHJlbi1naXJscyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBDaGlsZHJlbiBTdHJvbGxlciIsImxhYmVsIjoiR3VjY2kgU3Ryb2xsZXIiLCJsaW5rIjoiL25zdC9ndWNjaS1zdHJvbGxlcnMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ2xvdGhpbmcgR2lybHMiLCJsYWJlbCI6IkNsb3RoaW5nIiwibGluayI6Ii9jYS9jaGlsZHJlbi9naXJscy9jbG90aGVzLWZvci1naXJscy1jLWNoaWxkcmVuLWdpcmxzLWNsb3RoaW5nLTQtMTIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU2hvZXMgR2lybHMiLCJsYWJlbCI6IlNob2VzIiwibGluayI6Ii9jYS9jaGlsZHJlbi9naXJscy9zaG9lcy1mb3ItZ2lybHMtYy1jaGlsZHJlbi1naXJscy1zaG9lcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBHaXJsIEJhZ3MgJiBCYWNrcGFja3MiLCJsYWJlbCI6IkJhZ3MgJiBCYWNrcGFja3MiLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2dpcmxzL2JhZ3MtYmFja3BhY2tzLWZvci1naXJscy1jLWdpcmxzLWJhZ3MtYW5kLWJhY2twYWNrcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBHaXJsIEJlbHRzIiwibGFiZWwiOiJCZWx0cyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vZ2lybHMvYmVsdHMtZm9yLWdpcmxzLWMtY2hpbGRyZW4tZ2lybHMtYWNjZXNzb3JpZXMtYmVsdHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gR2lybCBTb2Z0IEFjY2Vzc29yaWVzIiwibGFiZWwiOiJTb2Z0IEFjY2Vzc29yaWVzIiwibGluayI6Ii9jYS9jaGlsZHJlbi9naXJscy9zb2Z0LWFjY2Vzc29yaWVzLWZvci1naXJscy1jLWdpcmxzLXNvZnQtYWNjZXNzb3JpZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9jaGlsZHJlbi9naXJscy1jLWNoaWxkcmVuLWdpcmxzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIEJveXMiLCJsYWJlbCI6IkJveXMiLCJ0aGVtYXRpY05hdmlnYXRpb24iOlt7ImxhYmVsIjoiQm95cyIsIm5hbWUiOiJOT1JBTSAtIFRoZW1hdGljIE5hdiBDaGlsZHJlbiBCb3lzIiwibGluayI6Ii9jYS9jaGlsZHJlbi9ib3lzLWMtY2hpbGRyZW4tYm95cyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfSnVuaW9yQm95RlcyNF9NYWluX0p1bmUyMDI0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvbVd5SV8zSldBREdPcjFNX2hGcXBMN0gxV2tGWjlzbkVUTzdyZVRzRVVzSmFteWJ3RkJzbVJ1UXZITWhlZVZqQl8rRERRZ1hsaGcremRqekU5Unk2ZkVXN01rN25RT0RXUXBHeGw0cHl1aENJYnZNM1I4dnRQelk5VmE2MDZqZFdpSnJLaTJ3OWMyRUQ2UGh5cHMrZFROVnJ6eWVZdk1GTkNQTGtHdnJTdytXNCs1MktLS2U1Zlg1MVZrZjNLd1B1YlVocWwySExLTUJiWEZrQ0tIVlZUS2g2aTA0Qm5tYnM5cGxjUW9RemM3eGRZZHorSlBvY1FFNGJVTVp1cm56ZnJTdzhqdjNpc2dHR3ZMeEFTQ3orWkRsc3hFNm9lZmxWVl8xVUZVSVBBTkdxRFhReXBacnB5VWNNRVhRTWhFVDlsNnJlRXFISnB4a1YxWFhNX1dXcEp3PT0vUHJvbW9Db21wb25lbnRfR3VjY2ktS0lEUy1GVzI0LU1heTI0LTI0MDMyNy1MQjEyLTMzNl8wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L3lNMG9LUnp2OG1CX1oyNksrR2d6Qm42NnZuUUd4amxaSktjZ1B4MSt4NXo2Y0VsdWR6bEFXQ3lKRjB3TTZqK25YK1pLX2JVdzl1Njdlc1N2Q0F0SnUyWUcrZ0xkVWxrYlZIOGVVZHRtbG5abFdDb1VlWGZrd3ByUkFsMlR3NEViX1dyREpuMkRZcDdLeFJ5TFlrVTdxbDQwNWNZazNFNzkxQjVPWFlScDQ3c1Erc19YM2hGUjE0YXBXVGNDRUZQek1yYk5HODBUaW0zK1FjSk9aVGF6SGRrWWtKX1JMQjZqejFXeGJHeEgxZE0xZlVpdjR1dnQ4bGhBRVdhMTQ5SndIWm5mY3JuRUFxb2JsRlpoQTdCWEIrYnRfcUZXal82S2pCSWphSmdKZzBZcGJVSTJDa3ExamRYdnJhRExWUV9MZCtrRjVnR0ZkMXU3TTI1N0xCSVJ1dz09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUtJRFMtRlcyNC1NYXkyNC0yNDAzMjctTEIxMi0zMzZfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L2l5ejNlTnVGQUVJOFlIZlVvczd5V0t5aXR3Z2c3T0NLanBMWEorWktUZ3k4TW45Zytydk1ieWM3d1U5TkdHSW
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section'):
        if 'clothing' in section.text.lower():
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: luYW1pYy9iM2M4L2l5ejNlTnVGQUVJOFlIZlVvczd5V0t5aXR3Z2c3T0NLanBMWEorWktUZ3k4TW45Zytydk1ieWM3d1U5TkdHSWp5QXhFd3J6bngxOXJLZEpySGtwUmVUdEdsTHJjb0tsQUFiVGJNQXJ1aW1BMStUMSszcUl3RlJocENZMFE0N3dnV0lUX3puV3FKSV9TTTlOMFc0ZGlhV1U0V1Z6eHgzK0hEODJxdWc4Q3hzS2FLaHNKdUNaOXpYNzNVeGQ0M2t4emtzejRPQjVFU3J0Z3p0d1BMcmF0WmhmeHpQK0tzVnptY1dKcGFlRHBKZDVmMnVzRk5OV0l6dXl4ZTVONF85SStuQ2V1RnpjTm9FT0pZa3lLVTRXYko4UCtEZVdISjMwVmRCUzZRMVdYTHk1UFVheHNGK0QrX3NnX3FyT3JLWGJzeGxKM3huMkRjWlpVczJNYUZ5OHJ2Zz09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUtJRFMtRlcyNC1NYXkyNC0yNDAzMjctTEIxMi0zMzZfMDAxX0RlZmF1bHQucG5nIn19fV0sInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIEJveSBWaWV3IEFsbCIsImxhYmVsIjoiVmlldyBBbGwiLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JveXMtYy1jaGlsZHJlbi1ib3lzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIENoaWxkcmVuIFN0cm9sbGVyIiwibGFiZWwiOiJHdWNjaSBTdHJvbGxlciIsImxpbmsiOiIvbnN0L2d1Y2NpLXN0cm9sbGVycyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDbG90aGluZyBCb3kiLCJsYWJlbCI6IkNsb3RoaW5nIiwibGluayI6Ii9jYS9jaGlsZHJlbi9ib3lzL2Nsb3RoaW5nLWZvci1ib3lzLTQtMTIteWVhcnMtYy1jaGlsZHJlbi1ib3lzLWNsb3RoaW5nLTQtMTIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU2hvZXMgQm95cyIsImxhYmVsIjoiU2hvZXMiLCJsaW5rIjoiL2NhL2NoaWxkcmVuL2JveXMvc2hvZXMtZm9yLWJveXMtYy1jaGlsZHJlbi1ib3lzLXNob2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJveSBCYWdzICYgQmFja3BhY2tzIiwibGFiZWwiOiJCYWdzICYgQmFja3BhY2tzIiwibGluayI6Ii9jYS9jaGlsZHJlbi9ib3lzL2JhZ3MtYmFja3BhY2tzLWZvci1ib3lzLWMtYm95cy1iYWdzLWFuZC1iYWNrcGFja3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQm95IEJlbHRzIiwibGFiZWwiOiJCZWx0cyIsImxpbmsiOiIvY2EvY2hpbGRyZW4vYm95cy9iZWx0cy1mb3ItYm95cy1jLWNoaWxkcmVuLWJveXMtYWNjZXNzb3JpZXMtYmVsdHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQm95IHNvZnQgYWNjZXNzb3JpZXMiLCJsYWJlbCI6IlNvZnQgQWNjZXNzb3JpZXMgIiwibGluayI6Ii9jYS9jaGlsZHJlbi9ib3lzL3NvZnQtYWNjZXNzb3JpZXMtZm9yLWJveXMtYy1jaGlsZHJlbi1ib3lzLWFjY2Vzc29yaWVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvY2hpbGRyZW4vYm95cy1jLWNoaWxkcmVuLWJveXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQ2hpbGRyZW4gR2lmdHMiLCJsYWJlbCI6IkdpZnRzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gR2lmdHMgZm9yIENoaWxkcmVuIFZpZXcgQWxsIiwibGFiZWwiOiJWaWV3IEFsbCIsImxpbmsiOiIvY2EvZ2lmdHMvZ2lmdHMtZm9yLWNoaWxkcmVuLWMtZ2lmdHMtZm9yLWNoaWxkcmVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJhYnkgR2lybCIsImxhYmVsIjoiQmFieSBHaXJsIiwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItY2hpbGRyZW4vYmFieS1naXJsLWMtYmFieS1naXJsLWdpZnRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJhYnkgQm95IiwibGFiZWwiOiJCYWJ5IEJveSIsImxpbmsiOiIvY2EvZ2lmdHMvZ2lmdHMtZm9yLWNoaWxkcmVuL2JhYnktYm95LWMtYmFieS1ib3ktZ2lmdHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gSnVuaW9yIEdpcmwiLCJsYWJlbCI6Ikp1bmlvciBHaXJsIiwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItY2hpbGRyZW4vanVuaW9yLWdpcmwtYy1qdW5pb3ItZ2lybC1naWZ0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBKdW5pb3IgQm95IiwibGFiZWwiOiJKdW5pb3IgQm95IiwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItY2hpbGRyZW4vanVuaW9yLWJveS1jLWp1bmlvci1ib3ktZ2lmdHMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9naWZ0cy9naWZ0cy1mb3ItY2hpbGRyZW4tYy1naWZ0cy1mb3ItY2hpbGRyZW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9jaGlsZHJlbi1jLWNoaWxkcmVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwxIEpld2VscnkgJiBXYXRjaGVzICAgIiwibGFiZWwiOiJKZXdlbHJ5ICYgV2F0Y2hlcyAgIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTDIgSmV3ZWxyeSBDYXRlZ29yaWVzIiwibGFiZWwiOiJKZXdlbHJ5IENhdGVnb3JpZXMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMyBWaWV3IGFsbCBKZXdlbHJ5IiwibGFiZWwiOiJWaWV3IEFsbCBKZXdlbHJ5IiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZ29sZC1qZXdlbHJ5LWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGaW5lIFJpbmdzIGZvciBXb21lbiIsImxhYmVsIjoiUmluZ3MiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9maW5lLWpld2VscnkvZmluZS1qZXdlbHJ5LWZvci13b21lbi9yaW5ncy1jLWpld2Vscnktd2F0Y2hlcy1maW5lLWpld2Vscnktd29tZW4tcmluZ3MiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDMgRmluZSBOZWNrbGFjZXMgZm9yIFdvbWVuIiwibGFiZWwiOiJOZWNrbGFjZXMiLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy9maW5lLWpld2VscnkvZmluZS1qZXdlbHJ5LWZvci13b21lbi9uZWNrbGFjZXMtYy1qZXdlbHJ5LXdhdGNoZXMtZmluZS1qZXdlbHJ5LXdvbWVuLW5lY2tsYWNlcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGaW5lIEJyYWNlbGV0cyBmb3IgV29tZW4iLCJsYWJlbCI6IkJyYWNlbGV0cyIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL2ZpbmUtamV3ZWxyeS9maW5lLWpld2VscnktZm9yLXdvbWVuL2JyYWNlbGV0cy1jLWpld2Vscnktd2F0Y2hlcy1maW5lLWpld2Vscnktd29tZW4tYnJhY2VsZXRzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIEZpbmUgRWFycmluZ3MgZm9yIFdvbWVuIiwibGFiZWwiOiJFYXJyaW5ncyIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL2ZpbmUtamV3ZWxyeS9maW5lLWpld2VscnktZm9yLXdvbWVuL2VhcnJpbmdzLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS13b21lbi1lYXJyaW5ncyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMyBGb3IgTWVuIiwibGFiZWwiOiJGb3IgTWVuIiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZmluZS1qZXdlbHJ5L2ZpbmUtamV3ZWxyeS1mb3ItbWVuLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS1tZW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for item in soup.find_all('item'):
        label = item.find('label')
        if label and 'Clothing' in label.text:
            name = item.find('name').text if item.find('name') else ''
            link = item.find('link').text if item.find('link') else ''
            clothing_sections.append({'name': name, 'label': label.text, 'link': link})
    return clothing_sections
Results: []
Search result: UtamV3ZWxyeS1mb3ItbWVuLWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeS1tZW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZ29sZC1qZXdlbHJ5LWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBKZXdlbHJ5IE1ldGFsc+KAiyIsImxhYmVsIjoiSmV3ZWxyeSBNZXRhbHPigIsiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMyBHb2xkIEpld2VscnkiLCJsYWJlbCI6IkdvbGQgSmV3ZWxyeSIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL2ZpbmUtamV3ZWxyeS1jLWpld2Vscnktd2F0Y2hlcy1maW5lLWpld2VscnkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDMgU2lsdmVyIEpld2VscnkiLCJsYWJlbCI6IlNpbHZlciBKZXdlbHJ5IiwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvc2lsdmVyLWpld2VscnktYy1qZXdlbHJ5LXdhdGNoZXMtc2lsdmVyLWpld2VscnkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9qZXdlbHJ5LXdhdGNoZXMvZ29sZC1qZXdlbHJ5LWMtamV3ZWxyeS13YXRjaGVzLWZpbmUtamV3ZWxyeSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBXYXRjaGVzICAgIiwibGFiZWwiOiJXYXRjaGVzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTDIgV2F0Y2hlcyBmb3IgV29tZW4iLCJsYWJlbCI6IkZvciBXb21lbiIsImxpbmsiOiIvY2EvamV3ZWxyeS13YXRjaGVzL3dhdGNoZXMvd2F0Y2hlcy1mb3Itd29tZW4tYy1qZXdlbHJ5LXdhdGNoZXMtd2F0Y2hlcy13b21lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBXYXRjaGVzIGZvciBNZW4iLCJsYWJlbCI6IkZvciBNZW4iLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy93YXRjaGVzL3dhdGNoZXMtZm9yLW1lbi1jLWpld2Vscnktd2F0Y2hlcy13YXRjaGVzLW1lbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL2pld2Vscnktd2F0Y2hlcy93YXRjaGVzLWMtamV3ZWxyeS13YXRjaGVzLXdhdGNoZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQ29sbGVjdGlvbnMiLCJsYWJlbCI6IkNvbGxlY3Rpb25zIiwidGhlbWF0aWNOYXZpZ2F0aW9uIjpbeyJsYWJlbCI6Ikd1Y2NpIEhvcnNlYml0IEZpbmUgSmV3ZWxyeSIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIEd1Y2NpIEhvcnNlYml0IEZpbmUgSmV3ZWxyeSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9ndWNjaS1ob3JzZWJpdC1qZXdlbHJ5IiwiaW1hZ2UiOnsidGl0bGUiOiJUaGVtYXRpY19HdWNjaS1Ib3JzZWJpdC1KV0wtSnVseTI0LTA1LTUyOC1WOSIsImRlc2NyaXB0aW9uIjoiIiwidXJsIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L2hFYUFtU2lZK3k2WncrUWN5cDhqNXRuZ1JGZWdUREhEMWNRajFJYjRqY25jTXV3ajdoVkFPTFdUbFg5T2VnQldiN1ZOcE4wV0hnaUc5bjNMSllTenB0TStNdWI5SEdrR3lIRlRHZDhkS3ZTWjRxWmpCeE4xZCtPb1RldW5JWjk3R3dfNWtVa0JoVU1VODFZZl9GK3ZqcVpvOUw0X0s4c3JqaDRubkNVWGlGMV9SZ3dXNlVRVlo1MEduamk5dzVoTmxUTFpYb2hmZDJmZ3dqbUhramZxUGpXRzcrTkZhUzY3MTFDOWljNUhNN09wbGZGRmhBYlhKejVNVzZZNE8xU0VCazBjQzZaM1IrdG5fNG1Nd2p2U05VNDVQUkdKZXM3YlNCN0FiOVRPZmJmUnBqV2Y4Y1RLSXhqZ0N3K2MrQjcwODVKVkJ3NDB1aWd2MHZ4TkRRSmxVQT09L0hQX0NpbmFtYXRpY0xhbmRzY2FwZV9HdWNjaS1Ib3JzZWJpdC1KV0wtSnVseTI0LTA1LTUyOC1WN18wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L21vem0rd3dRTXlRSmdaNzU3UUFaSlpMc0huYko0ZmdaU21fWjV1Z2Z6bENTaV96M3NFZzM2Q01jbDM5UnVvNVhVdWhhbFgySzFsTXBMbFpyUG5WbVFYZTgyelhfR0hyTXdOOFB6b25QNXd2Y3RSRkxTQlhYNGJZZWpIdDhob0t4c0Ntb19UN2lSbHQ2ZXVLR2d3NHFRTXR5QjcrMGVfMDRoSGFTZGxLcmtWNXpVWnpxUVcxV0c2OEE4YVZzOGFjd2lqbkJWbzB2NUZPampLNjVUU0U3Y3JYTitnMDltTnVtSktuV0hOaWxoXzltNGNfamF4OFZRZ2lmT0ZTb2xfRnRqY2llZ1NJTFB5eCtOakU3MUN2c1ZCaEQrX19lYmNJcURHQmFaeiswdGM1Q0JvNjM5VE5lcnFlR2ZSOCt6UkRxQTlPM2lXdEtiVGxuamdTR3paMkRPeXFCbytINkRjTDIxcl9NRTNsV0ZWQT0vSFBfQ2luYW1hdGljTGFuZHNjYXBlX0d1Y2NpLUhvcnNlYml0LUpXTC1KdWx5MjQtMDUtNTI4LVY3XzAwMV9EZWZhdWx0LnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9RbU9rOFA3UUJISVJ3SGxJV1UrOGh5RWhPMFBsZHk3Tl9BdnNXZW45SklVWXpMNmpZU3NxVUJaZXFscFVlb2tlQmlCN3B6K3VqNDFaTnNMR0VjWUY0anNoc2tueFVEQnNtQkxUOTY1d1V4a2pGMU05WmpvOXZfUm14dXJRbStRUjNVc2lZdGxlcUNKUGRwM1BIM1RhR2FocWNLemR0MVlWcHlRVG1ZUEFHckVuM2Jsa3VZMTZVU2I0T1d3YlBZa2c5Wl9tbXhYSDdRaFlmUjFINE96T1Z4bUN2OFpVMmZSQm8rWG5kSVBoVlFycXlNb3B1RHpKdlAwRXA3alppN3BvTzZrdk12Ykhnb3d0Z0JBdm95cHdMbEdseWV2SzdaYUcrYzRQN2tNR2ZOM29FK0JUS1l3RmtONHpCbE55dXpmbWRSbzJOQW9aMU8zRF9HeHo0VzYxT2VZRUNTalQwSVhEdW1obHI4aHY4S0U9L0hQX0NpbmFtYXRpY0xhbmRzY2FwZV9HdWNjaS1Ib3JzZWJpdC1KV0wtSnVseTI0LTA1LTUyOC1WN18wMDFfRGVmYXVsdC5wbmcifX19LHsibGFiZWwiOiJHdWNjaSBMaW5rIHRvIExvdmUiLCJuYW1lIjoiV1cgLSBMMyBUaGVtYXRpYyBMaW5rIHRvIGxvdmUiLCJsaW5rIjoiL3N0L2xpbmstdG8tbG92ZS1jb2xsZWN0aW9uIiwiaW1hZ2UiOnsidGl0bGUiOiJUaGVtYXRpY19HdWNjaS1MaW5rLXRvLUxvdmUtT2N0MjQtTDJMLU1VTFRJLVJJTkdTXzAwMV9EZWZhdWx0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvcGhzVlZDMmo5Skl4d2dwRDJBZGJrY3Bsd1hmeU9uUUdLdGZvTDlUUm5RTDFvb1BGdk9NQmhlZnF4amN0ZDZ5V1gyZ3U1eitVQ3o0WkxQbjBKRURwclg5aWJGS3V1MlIrcm4yZ3pNR2s5U2dLVUJWRF9feWt4ZUNpc0lnMTZidW9XK1NRdUJERlJ1TkxjNTlQUGxJQ1ozUFB1VkdLZXhucml3WFNzWVlyWDU5K1R2ZGt5Z2VtZjVkTGZ0SnlTNWFtX01vMDBOX2ZzN1ROVUQ5cXBrRm1CemJKdk1CcU4xcjNJQmJ2blBWelM5Z0dGZmRkd2NHcVVpRlBVVWduNHVaWlh4MkxCc2pwS3g4K0NlOFRzT1ZCVEF1ZzVPTWRUVnRQZzRFY19yS1FQdU16UHFJV3Y1cWVSa3g3dDNvcDFUTzJNME42ZVhHY2lLNDdITmNWNTRqVVh3PT0vUHJvbW9Db21wb25lbnRfR3VjY2ktTGluay10by1Mb3ZlLU9jdDI0LUwyTC1NVUxUSS1SSU5HU18wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0g5TW9xZ0ZvUkxiRzNBb1V2Sm5lWXJxdEQwSDdBVzN5R3RtS1FuMlJ2ZHRSNXROaFNSOUdpa1lCYnM2ck5QN2FaaW42ODVLTzZ5c2Zza0kzV1kwU3RwTUI0NjlIeFRhanNqbjRNaHozZXhkYUsrVmJiTTZUMFJjT3E4MFo2cDljOHFublZEa0V1dEUralozMW
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['clothing', 'apparel', 'fashion']
    for identifier in clothing_identifiers:
        sections = soup.find_all(class_=identifier)
        for section in sections:
            clothing_sections.append(section.get_text(strip=True))
    return clothing_sections
Results: []
Search result: VLTzZ5c2Zza0kzV1kwU3RwTUI0NjlIeFRhanNqbjRNaHozZXhkYUsrVmJiTTZUMFJjT3E4MFo2cDljOHFublZEa0V1dEUralozMWpmazFJTTFqR0Zoam5OQnY1SHA2VDBUdm1iNDgrTE5XUElPTDliUlZlQVdGdW9rbjlkQm95UTVSSXNFUzAxTTdFU3dLY2hERTVWSnRHTjkzQWFlZmdRZU1WNlVzb3FIcXZZU2xVRTR5aGY4NHFUeEU1dTYzSGg3ZnNxekFlRW9YRUZ2N2MrZVhoSElIZzYwRHVGZkRBaWZpVTlpR2N3QmVFNVVqY1RaaUp2Y0ZVbkkzK19BVGRoNWU3Uk9kbW9uaFBybjlSQT09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUxpbmstdG8tTG92ZS1PY3QyNC1MMkwtTVVMVEktUklOR1NfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L2FJMTRyYzdtNXRoTkpmaWxtWDZLRkVBMm9mNjlSRV8xckM4eXArUUZIWEdUcnZvdHdKQk54anJCV2RpSDJNbEw2Q2VvMnR4UXlJUHB2RHI1MUdVeGNPNXh4aFFvZ1hOWkY4TXBKM24zbExYU1JSWjNKSDYwUWRBajNKMTN4UGFiMlcxSHdvejhwbEFWcU1tX1ZobDJpdF8xV3RaNWF0NHZ0c2lRcFhXN3J6S21CbkpoWHhhblNaVzE1b0RhaWtiYWFxNGplZWJWUWxvZUoyNDFFVXFhY0E1cXlXcDZ6aFJsZXVMY1pobDBaallpWEZiaWxVR3dSVGFaUzh6clVEdlI3V1MwZ2tCSmNibVhhSkZTZzRMM0ZTWEUxUFVXNlc4aWVCeXplVmhYN3g3S3g4SWhucFU2V1ZjSUZTTEE4YkJ2NElJRUhfaHdRVUZCYmhnNlFOa3p3QT09L1Byb21vQ29tcG9uZW50X0d1Y2NpLUxpbmstdG8tTG92ZS1PY3QyNC1MMkwtTVVMVEktUklOR1NfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiR3VjY2kgSW50ZXJsb2NraW5nIiwibmFtZSI6IldXIC0gTDMgVGhlbWF0aWMgR3VjY2kgSW50ZXJsb2NraW5nIiwibGluayI6Ii9zdC9jYXBzdWxlL2ludGVybG9ja2luZy1nLWZpbmUiLCJpbWFnZSI6eyJ0aXRsZSI6IlRoZW1hdGljX0d1Y2NpLUVtYmxlbWF0aWNMaW5lcy1KdWx5MjMtMDAzIiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvdVJCUHZfMEFpR0p0UXVCYmJVQV82VjRsTTIwS2huRl8rVHhIbHRUZkVKOWtGMXZ4Q1FqMHFOb1RGSDdOcnQ3SWt2NFJmbXAyM25vczQyTmdhczZUNDB5Rnoxc052WEhOM2NOdmZkbWtwNllTcHNaVm41QmJSY2VJVkVmQWYzamEwWmIzSEtpOWFKVWM3R1FPaXZENHpCcTBGQ2MrTVFoeXBjVlRMMG9xdl9CQjBCUHUwUml5bXZMbm5vZTUrUjlCcytPaWpUVU0xYUVpeml0TFlUSGsrckpmWjJROGIwdnhhVm9weHlISjBBMjN4Sll0YjMxcithMzhZRWRkNjYrNHRjaUV1RVNRdGRlcG5fZ2c3SHdIOSs0SXpnVTRCWFkyQWpDZmZJTEREOU1ZdTNCN1ppbXlsalErYnJLYmJSaFpYQmN6ZkJFWlgxcW9vb3VqMFN4K2dBPT0vSGVyb1JlZ3VsYXJTdGFuZGFyZF9HdWNjaS1FbWJsZW1hdGljTGluZXMtSnVseTIzLTAwM18wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L241WnpvaUgrYTVBWVYyZmNXaWFiN3lUcEFmb0VRbXE2OEQ1bmY4b1hGeHdLOFYwejdueVZYUklNUFI1RkZYTEdiOUxlaGRadmZZcEx5Z3RsMzl6VWhxWngwTGlqNXlpRlpuQWxaQXRSQnVWdlluQWk4MUNZNlBzU2pWRzhrWHVEUmlUNURodjNNVHE1S0I3RzYyQ2JXYVJtdlhCK2RYYnVKRzhkOHZaUmVtU05aKzc0YUY2VEkyMGJjNDdDcXV6SU1EbTB0RFplbWlXTEFtd09LSUJfSSs1Nmd5c3BOWkM4Z0t3bXA5c1VMcjI5NTE2VnVTaHloSmRLWktHbXB0bEJJYXl6RU9pRkN2YWZpMEJ1MnZCTHN3cVpmM19zSEx2VEdaUUJiUzl3bjFsSXVwbGdya0VoT2FsSE9tUmlpRUxzT09XK0dXaEI0bjNXUmRhNnduaG1KZz09L0hlcm9SZWd1bGFyU3RhbmRhcmRfR3VjY2ktRW1ibGVtYXRpY0xpbmVzLUp1bHkyMy0wMDNfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0R4ZkYyYl80bnY0Wk5ETE5xTTExUmR0YXd6N1BoX3VmTXg3SnJJbV9jeXY1MjJXTHp0TkxYcFlNRkJXYU1tUlNuX2tvSzNjX25hY3ordk5oME9uZTBBOF9MM0hlT0liSWNvNUtkNTNQSmNhTnFReXBKanFuODkrbEh4am82M2lZZV9BRmFXc2dwMVBKNWxERlZLMFRLV2dQTDhrcFZWVzBUcGk5RFFHTXoyZW43bENsbnY1MHRTSk84Zm9NTVUyNXlSSnBDYlZDcEQreXczYmhPZUtIOUhyMWdCdGtQS0UzZ2ZtZUhlN1I0VFRNbVNkTG56UXplUkJSQUNTWGRybGtNUEU0aXJZOV9KMnFQWmxSZEd5WGlDTHJCRXlKcUlvQlpjb3pRNXFhbEozaVBJS2lOS0tVNVBlR0Y4bV9ham5iRHltNmhNd1hEZm5GWGhBSGNubjhGdz09L0hlcm9SZWd1bGFyU3RhbmRhcmRfR3VjY2ktRW1ibGVtYXRpY0xpbmVzLUp1bHkyMy0wMDNfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiR3VjY2kgRGl2ZSIsIm5hbWUiOiJXVyAtIEwzIFRoZW1hdGljIEd1Y2NpIERpdmUiLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktZGl2ZSIsImltYWdlIjp7InRpdGxlIjoiUHJvbW9Db21wb25lbnQgR3VjY2ktR3VjY2lEaXZlLUp1bHkyNC1HdWNjaS1ESVZFLUJMVUUtRElHSVRBTC1QUkVTUy1QUi0zMDBkcGkgMDAxIERlZmF1bHQiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9feGdKNXVndmtVOHA5aitaVE9OaWc2UzlzdEl2Ym5CdFFDYVJPWDhzK21mWE9sanU1X1JZRjhLckloZ3c3MkZxQTNONUFWdWR1MlhpaUQxVXBsT1NCMWF0aW9kY201SW5QNWNrUFZTc1o4K3h5ZHNCdDUyRjRITGZ6OTZfY0R6eXM1bkdNa0xBTmRjbnpsdUNucXk2VGx6RUhIbW5IalUxdF9GTGxZZ3lHRlVkT1V2c3FCUTd6SEN3NlhSaExuQlB6Rmp1TDl2Tkp5anR5cnVHK2hYeVVoVWFEM1I5M0JkOEZjZ3JQT2pUNTQ1UDQzM1FOcytYeEtYOVVjVWE4QVI1ZlJYcW9faWxROGZBSThCK0V0NFVqdTdCY19FeGkyd0U4RUtsX2VMQ2d2RXZRQWFVbUJrOGFxMkM0cUtSeWphTVBkZlZPSTk3Vmw1OHVsOXllaDd1aFVGaWppX2V1UFdoa2xKWlVRXzBkV3N6VWloWGVnSGdadnpveHRFOGtucUhNaVVFS0lWNkV5eENEbGZKMzVvUlN3PT0vUHJvbW9Db21wb25lbnRfR3VjY2ktR3VjY2lEaXZlLUp1bHkyNC1HdWNjaS1ESVZFLUJMVUUtRElHSVRBTC1QUkVTUy1QUi0zMDBkcGlfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9OVTlQb3NWa3d4VnFNZFlBNG5uMDhrMSttdHZPQV9Ma00xNmxDS2p1NHc1V3pUR1FjbUxoRDZCaGd0blU2cFYrYVBtQzAxbnVLa08wdlBJcm1XQW04RG5pZ3dVX044U2NaZzZ2TXY2TTArckRDWjVnSXJ3dnVSM1NKbEl6bHZ6akE1ZVVuRGtnX2J6eXgwczRLR1ZnaUFucVNRejAyVVg2OEJLc1Fkbmp0NUxTaWl4TkFwZ3lWYXVtWVZnQVp6aktNQmNrM2RXZGUxTVdWRzdvaW5KVm44cXlrVTVrd3NHX1ZscWJkMUxRSkhCUUJIV0VrQlh2M1FoOXBHN2ZWQTF1cFBIVEZnalFhcVZ0aFU1b3NKZEZqaXJhX3BsUjRmeEdJUmpCTmVmNE1SS09TWVhNMzhUTEhJQ0I2YkhNU0JHakpDa1Z6QjQ1ZnppRVN3cXU5cnh3TXM2amFwcnhja1JTZUgyeWlrbUFSczFnbkhpOHcrVU40aDZfMGFGRVBCYWJacU1MSXB2dUY4R1Z4eHNrcDFZV1hnPT0vUHJvbW9Db21wb25lbnRfR3VjY2ktR3VjY2lEaXZlLUp1bHkyNC1HdWNjaS1ESVZFLUJMVUUtRElHSVRBTC1QUkVTUy1QUi0zMDBkcGlfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb2
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all(class_='clothing-section'):
        section_info = {'label': section.get('label', ''), 'name': section.get('name', ''), 'link': section.get('link', ''), 'image': {'title': section.find('image').get('title', ''), 'description': section.find('image').get('description', ''), 'url': section.find('image').get('url', '')}}
        clothing_sections.append(section_info)
    return clothing_sections
Results: []
Search result: JMVUUtRElHSVRBTC1QUkVTUy1QUi0zMDBkcGlfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1hmWlZRSjN1XzJHZlNIcGlEZFFMMVBaelZLMnRxTEJvTnR6dTdCSDlLbTM1dDZrTGNUYTdxY3VkX1FTcDNsd2xlaWRsK0JSdGZqOHFRTERJUENhd2ZrSitFR1JFM1hWM1RpeWRtT3dRRXBNTUdhM0F4REowVExkTENNcXhBU3VzSnowenBfMTVXRm1ZVitHdlBNUTFGUTBlaHJZdGR3SUVxdlVvb2daUEdhYldkXzlFVUJaQXVWSzJ3X2VPYWxTUHlJSnR0RjNZV1ZjZTZSd1RJejN5Nnl3ZDg4Q3BoNEhQWkx6eGMrRnd6cTJnODVwSTlRVCtNNUM4cE9nbVFsOEJ6bVdVTjNseHdRK01ibXFJZytqX3N5Sk9Hc2pTS2NYS3ZkaUZiV0c2bW5lMXRhMGZxdEhORjhwY0wyNl9uaElWR2J0b3kwekd0SW9aNm1QVGkzMkFiSXo5ZndjaEhUcFF1UE9Ubkh2M0MyODJGWkhXQjhNZ2gwZWN6NTdNMG5GZDlQcEp0b0k2OHdoR1J5OFYxX2RSbWc9PS9Qcm9tb0NvbXBvbmVudF9HdWNjaS1HdWNjaURpdmUtSnVseTI0LUd1Y2NpLURJVkUtQkxVRS1ESUdJVEFMLVBSRVNTLVBSLTMwMGRwaV8wMDFfRGVmYXVsdC5wbmcifX19LHsibGFiZWwiOiJHdWNjaSAyNUgiLCJuYW1lIjoiV1cgLSBMMyBUaGVtYXRpYyBHdWNjaSAyNWgiLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktMjVoLXdhdGNoZXMiLCJpbWFnZSI6eyJ0aXRsZSI6IlByb21vQ29tcG9uZW50IEd1Y2NpLVdhdGNoZXMtMjVILU1heTI0LTI1SC1CTFVFIDAwMSBEZWZhdWx0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvV0ozMTZjT2Y3K2N4UFJHR1ZRT3JJSXg5TUpsUnhqWTNhdTdwVzU4RFpNYl9BRFV2TGtlYlJCMG5tUm5ZcjM4ZzlIbERoM2RwTDM1NVpHVFJEalJWVjcyVHZxR2xmS05PTHJqYnNobFNOQkNXQ0g2UGtSRnIxTldacURiYTA0aXkxbXBRR2g4K3N2N1ZWNCtDSFhrNk1ieDV2Wnp1Uko5RzlDRFI2TlNiYm9RemtRMDBvVUFienZJY0JFb0ZYeHByZGpRT0x0dVJYTzNQZ0duZkltMG0xalVxWFJEbnlralhFVVRVeFdDcUE0RHp6eE8rbFVTenNkbENMSSs1c2ZhcWd0eTc1M3diUWxadHE3V2RIbFB0UlhoeXVLckpENXc2RzJQRU0zR0Z5eDFkSmdXdWNDNlIzUk5jK2ptMExIeEYvUHJvbW9Db21wb25lbnRfR3VjY2ktV2F0Y2hlcy0yNUgtTWF5MjQtMjVILUJMVUVfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9WTmRlQzIybmpaQVh4d2lXeWZ2dElUbHk3ZHQwOFk2Z0ZFZVppbVJTQk1KR0FpZldzSGR1VHhLR096K0UwVUVrWUdQZno1eWY0dk5GZjVPbjF3NlJGRTZDRkNWbktvX1NDTTlGRU9hRlh5ekdVdVc5NWZxV1c0ZXRkSFZxV3lMVkNIOXYwWUNQcWRGV2dYZmp1cklSRllEWU0ydTdTN0V4bDM0aFpKaWREWDZwN3ZfSm5hYVgxMzBPQ1l0Wlo5b0kxdDkrT2pDVzhiQTBiZXVRZVpzNkp5d1RHZnVJRUxQekV4TU9FNjFvX0RfSVFad085elhxS1kzbFdtYWtSX3c0WWhBdXVHeGFCaytIWjA5c1RMQXV4T09yWGxVQnpOMXcyZ1dXa0ZJem03bXJDcXB0SjBtd2FZbDJyQlJzMktvMy9Qcm9tb0NvbXBvbmVudF9HdWNjaS1XYXRjaGVzLTI1SC1NYXkyNC0yNUgtQkxVRV8wMDFfRGVmYXVsdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvVWhaSURZRXBWWDJ1Y19TZ0o1TWlKUEQzUWZTVDdGMWV3RG5GN3RfZ3pPdlVZSG1OTWtnWk5GWU1WZ040MTM4KzNwWUxTUTdHN1BqSjU4M1RyOE16SHVxT3JLZFpGajc2amJGdUthV1BnN2xsMFVWNkdKOEVrNmh2SHVBUHJLY1dwWGNXeDU4OXVKbU1PaGNyc1ZzZXQ4bWxQMUFjV2tXR2lhVFUzRHlkZFE4bzU5Y1NfTmduTWZPVEt2NEdLMnhKbTIxczREQ1FqSkRXRzZ5SEVaV3k5MG5hUDhVelY3T2V2TUNDM3VfTG9wbnJGeHdGbXhDVVZIZTZYUWxzZkJhTUc2MFAxdERvejJuc2x3bXg4K2R1V0dYN2VaYW5sdVNDZUI2QmNiUnZGYmsySnorc181M19uaXRHRXJ0REt6alIvUHJvbW9Db21wb25lbnRfR3VjY2ktV2F0Y2hlcy0yNUgtTWF5MjQtMjVILUJMVUVfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiRy1UaW1lbGVzcyIsIm5hbWUiOiJXVyAtIEwzIFRoZW1hdGljIEctdGltZWxlc3MiLCJsaW5rIjoiL3N0L2NhcHN1bGUvZy10aW1lbGVzcyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfRy1UaW1lbGVzcy1Xb21lbi1GZWIyMDI0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvZGgxX2ZEWHkrd2dKcWh0SzUyU3JvZjVtN3NUcG5hakhyVXdvaU1JMHJiQUJKRnpKd0pETnEweFQ4ejB5bDVLNktfemhwdGRTdjEwT3RqcExETWJoRW9KSF9HeGd6Um1EQlZjU0M3TTRkVnZXSW0xYXlQMzFrX3hDbGJfUTBCQmRiZkNBM3dCK2VxYVgxdXFEYURjeHV3ejFKYnJfR3Z4Q3h5ZXBNVkpsTDR1TVRIanN2bklCTks4SVVvNysxS1JQT3kwRVFVR0RIdlZFOUZTZ0lIVjhqRDNfOWNzelFWU3p3UE85eTVwWXBRd3RpZl81M0dsMHRudk9NT3k5enM3aV9STGswdHErZWRBNW5rK3YwRHdFMjZIdmV1eEFkMVZqSU1EQWJNUVBuU0hXME1nSzRhOVhKbk5sUjYycjVBUDQvUHJvbW9Db21wb25lbnRfRy1UaW1lbGVzcy1Xb21lbi1GZWIyMDI0XzAwMV9EZWZhdWx0X18xXy5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L21iN2tabldJRFRfVmJDU1pDMkJrVHFPa2pldnN0dkFzV1pvVEZ0YnBoWjlrZllISDVuUXM2RktraXNCZlo0djhmTG5pSDRVcWF4MWV3N20rakpuemM3d21KTzlTSHhUWjRBb1JjSlZFMFdXNFUxaCtNUmJRZWlJV09WVGNZQTY4Y2lHcVgzUUlBV1B1anY1V1VJVVdvVklJdHR6ZmVXQURabnlod19GeGVNZkd0dWx6V2U1bklReHFvcG9JRmlRSXNVZ2ZGajZYYWY1dHg3bkdVSXAyVDVSS1htMWhUaXZDMmFXSUNQX2VJaFNZTVlvczZFMG9uRnlQM2hRek82dmt5VCttelo3QTJXcTVjd2VTUitTSUNfVER5QVpxR1FVZnlZRVFUTGI0bnA1S3BtNFh0M2NhSXFNVm9YU1FiSlVuL1Byb21vQ29tcG9uZW50X0ctVGltZWxlc3MtV29tZW4tRmViMjAyNF8wMDFfRGVmYXVsdF9fMV8ucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L18zK0QxMmg5WEdIT3R6UTF3Z2RyeEdYT2VxQTBZYzRoWXh0bm9POXNjSmIyMTQ5RHNRTWM2dDZSQTRJMnNUMW1yUG1adm11d1BvMCtpNk5rR1I2djFnWTk5Z0h4eUpOZ1dRckFtekV2VHJmT3FKZXdFTXh2WFE2cUE3Y0dxRUx3SVVVdEtQbnZfV0pIZ1lqUTNscitjbUNuY3M3RjZPOGNEU1JFMnhSeTFORnJrQ2hYQlJVWVUyZTNERUNjdGdfckxiZjhrUkZsV202SG5uenhXZlFBelRrSU5Fckg3YTAwRXNfd1VGSVhMZ1JwTXhMV0kzNjgzZTFvNjVhRytLOGtMMXo0aF93cENuNzhYNDNvWmVKc0x3Z1VBMENPczZkTEV0K3hDeUNrOGJqY3FZaG1tRXNKcEdKVTYwSyszb3ZxL1Byb21vQ29tcG9uZW50X0ctVGltZWxlc3MtV29tZW4tRmViMjAyNF8wMDFfRGVmYXVsdF9fMV8ucG5nIn19fV0sImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIEd1Y2NpIEhpZ2ggSmV3ZWxyeSIsImxhYmVsIjoiR3VjY2kgSGlnaCBKZXdlbHJ5IiwibGluayI6Ii9uc3QvZ3VjY2ktaGlnaC1qZXdlbHJ5IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAgLSBDYXBzdWxlIEd1Y2NpIEhpZ2ggV2F0Y2htYWtpbmciLC
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section'):
        label = section.find('label')
        name = section.find('name')
        if label and ('G-timeless' in label.text or 'Gucci' in label.text):
            clothing_sections.append(section)
        elif name and ('G-timeless' in name.text or 'Gucci' in name.text):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: wiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAgLSBDYXBzdWxlIEd1Y2NpIEhpZ2ggV2F0Y2htYWtpbmciLCJsYWJlbCI6Ikd1Y2NpIEhpZ2ggV2F0Y2htYWtpbmciLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktaGlnaC13YXRjaG1ha2luZyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiLWMtamV3ZWxyeS13YXRjaGVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwxIETDqWNvciAmIExpZmVzdHlsZSIsImxhYmVsIjoiRMOpY29yICYgTGlmZXN0eWxlIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gTDIgRMOpY29yIiwibGFiZWwiOiJEw6ljb3IiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSAgREVDT1IgVklFVyBBTEwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvZ3VjY2ktZGVjb3ItYy1kZWNvciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBUYWJsZXdhcmUiLCJsYWJlbCI6IlRhYmxld2FyZSIsImxpbmsiOiIvY2EvZGVjb3ItbGlmZXN0eWxlL2d1Y2NpLWRlY29yL3RhYmxld2FyZS1jLXRhYmxld2FyZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBIb21lIEFjY2Vzc29yaWVzIiwibGFiZWwiOiJIb21lIEFjY2Vzc29yaWVzIiwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvZ3VjY2ktZGVjb3IvaG9tZS1hY2Nlc3Nvcmllcy1jLWRlY29yLWFjY2Vzc29yaWVzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRleHRpbGVzIiwibGFiZWwiOiJUZXh0aWxlcyIsImxpbmsiOiIvY2EvZGVjb3ItbGlmZXN0eWxlL2d1Y2NpLWRlY29yL3RleHRpbGVzLWMtdGV4dGlsZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gV2FsbHBhcGVyIiwibGFiZWwiOiJXYWxscGFwZXIiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9ndWNjaS1kZWNvci93YWxscGFwZXItYy1kZWNvci13YWxscGFwZXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRnVybml0dXJlIiwibGFiZWwiOiJGdXJuaXR1cmUiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9ndWNjaS1kZWNvci9mdXJuaXR1cmUtYy1mdXJuaXR1cmUiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvZ3VjY2ktZGVjb3ItYy1kZWNvciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBMaWZlc3R5bGUiLCJsYWJlbCI6IkxpZmVzdHlsZSIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIExpZmVzdHlsZSB2aWV3IGFsbCIsImxhYmVsIjoiVmlldyBBbGwiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9saWZlc3R5bGUtYy1saWZlc3R5bGUiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTGlmZXN0eWxlIEd1Y2NpIFByb3NwZXR0aXZlIEJvb2tzIiwibGFiZWwiOiJHdWNjaSBQcm9zcGV0dGl2ZSBCb29rcyIsImxpbmsiOiIvc3QvY2Fwc3VsZS9ndWNjaS1wcm9zcGV0dGl2ZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBTdGF0aW9uZXJ5IiwibGFiZWwiOiJTdGF0aW9uZXJ5IiwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvbGlmZXN0eWxlL3N0YXRpb25lcnktYy1saWZlc3R5bGUtc3RhdGlvbmVyeSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMZWlzdXJlIFBpZWNlcyIsImxhYmVsIjoiTGVpc3VyZSBQaWVjZXMiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9saWZlc3R5bGUvbGVpc3VyZS1waWVjZXMtYy1saWZlc3R5bGUtZ2FtZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU3BvcnRpbmcgR29vZHMiLCJsYWJlbCI6IlNwb3J0aW5nIEdvb2RzIiwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvbGlmZXN0eWxlL3Nwb3J0aW5nLWdvb2RzLWMtbGlmZXN0eWxlLXNwb3J0aW5nLWdvb2RzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvZGVjb3ItbGlmZXN0eWxlL2xpZmVzdHlsZS1jLWxpZmVzdHlsZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBHdWNjaSBQZXQgQ29sbGVjdGlvbiIsImxhYmVsIjoiR3VjY2kgUGV0IENvbGxlY3Rpb24iLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBHdWNjaSBQZXQgVmlldyBBbGwiLCJsYWJlbCI6IlZpZXcgQWxsIiwibGluayI6Ii9jYS9kZWNvci1saWZlc3R5bGUvZ3VjY2ktcGV0LWNvbGxlY3Rpb24tYy1saWZlc3R5bGUtcGV0IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEFjY2Vzc29yaWVzIiwibGFiZWwiOiJBY2Nlc3NvcmllcyIsImxpbmsiOiIvY2EvZGVjb3ItbGlmZXN0eWxlL2d1Y2NpLXBldC1jb2xsZWN0aW9uL2FjY2Vzc29yaWVzLWMtbGlmZXN0eWxlLXBldC1hY2Nlc3NvcmllcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBQZXQgQ2xvdGhlcyIsImxhYmVsIjoiUGV0IENsb3RoZXMiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9ndWNjaS1wZXQtY29sbGVjdGlvbi9wZXQtY2xvdGhlcy1jLWxpZmVzdHlsZS1wZXQtcmVhZHl0b3dlYXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUGV0IEhvbWV3YXJlIiwibGFiZWwiOiJQZXQgSG9tZXdhcmUiLCJsaW5rIjoiL2NhL2RlY29yLWxpZmVzdHlsZS9ndWNjaS1wZXQtY29sbGVjdGlvbi9wZXQtaG9tZXdhcmUtYy1saWZlc3R5bGUtcGV0LWhvbWUtZm9vZCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL3N0L2NhcHN1bGUvZ3VjY2ktcGV0LWNvbGxlY3Rpb24iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gR3VjY2kgRGVzaWduIEFuY29yYSIsImxhYmVsIjoiR3VjY2kgRGVzaWduIEFuY29yYSIsImxpbmsiOiIvbnN0L2Rlc2lnbi1hbmNvcmEtZ3VjY2kiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9zdC9kZWNvci1saWZlc3R5bGUiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDEgRnJhZ3JhbmNlcyAmIE1ha2UtVXAgICIsImxhYmVsIjoiRnJhZ3JhbmNlcyAmIE1ha2UtVXAiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBMMiBOZXcgSW4gRnJhZ3JhbmNlcyAmIE1ha2UtVXAiLCJsYWJlbCI6Ik5ldyBJbiBGcmFncmFuY2VzICYgTWFrZS1VcCIsInN1Yk1lbnUiOlt7Im5hbWUiOiJOT1JBTSAtIFdOIEJlYXV0eSBHaWZ0IElkZWFzIiwibGFiZWwiOiJCZWF1dHkgR2lmdCBJZGVhcyIsImxpbmsiOiIvY2EvYmVhdXR5L2JlYXV0eS1naWZ0cy1jLWJlYXV0eS1naWZ0LWlkZWFzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIEd1aWx0eSBFc3NlbmNlIiwibGFiZWwiOiJHdWNjaSBHdWlsdHkgRXNzZW5jZSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9ndWNjaS1ndWlsdHktZnJhZ3JhbmNlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEhpZ2hsaWdodGluZyBQb3dkZXIiLCJsYWJlbCI6IkhpZ2hsaWdodGluZyBQb3dkZXIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWZhY2UtbWFrZXVwIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIE
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section'):
        if any((keyword in section.get_text().lower() for keyword in ['clothes', 'apparel', 'fashion', 'wear'])):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: NhcHN1bGUvYmVhdXR5LWZhY2UtbWFrZXVwIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIEZsb3JhIiwibGFiZWwiOiJHdWNjaSBGbG9yYSIsImxpbmsiOiIvbnN0L2d1Y2NpLWZsb3JhIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvY2EvYmVhdXR5LWMtYmVhdXR5IiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwzIEJlYXV0eSBHaWZ0cyIsImxhYmVsIjoiR2lmdHMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBXTiBCZWF1dHkgR2lmdCBJZGVhcyIsImxhYmVsIjoiQmVhdXR5IEdpZnQgSWRlYXMiLCJsaW5rIjoiL2NhL2JlYXV0eS9iZWF1dHktZ2lmdHMtYy1iZWF1dHktZ2lmdC1pZGVhcyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBCZWF1dHkgR2lmdCBTZXRzIiwibGFiZWwiOiJHaWZ0IFNldHMiLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWdpZnRzZXQiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gIENhcHN1bGUgVGhlIEFsY2hlbWlzdCdzIEdhcmRlbiIsImxhYmVsIjoiVGhlIEFsY2hlbWlzdCdzIEdhcmRlbiIsImxpbmsiOiIvc3QvY2Fwc3VsZS90aGUtYWxjaGVtaXN0LWdhcmRlbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL2JlYXV0eS9naWZ0LWlkZWFzLWMtYmVhdXR5LWdpZnQtaWRlYXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQmVhdXR5IExpcHMiLCJsYWJlbCI6IkxpcHMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBNYXR0ZSBMaXBzdGljayIsImxhYmVsIjoiTWF0dGUgTGlwc3RpY2siLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWxpcHMtbWFrZS11cCNtYXR0ZSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMaXF1aWQgTGlwc3RpY2siLCJsYWJlbCI6IkxpcXVpZCBMaXBzdGljayIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktbGlwcy1tYWtlLXVwI2xpcXVpZC1zb2Z0LW1hdHQiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU2F0aW4gTGlwc3RpY2siLCJsYWJlbCI6IlNhdGluIExpcHN0aWNrIiwibGluayI6Ii9zdC9jYXBzdWxlL2JlYXV0eS1saXBzLW1ha2UtdXAjc2F0aW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gR2xvdyAmIENhcmUgTGlwc3RpY2siLCJsYWJlbCI6Ikdsb3cgJiBDYXJlIExpcHN0aWNrIiwibGluayI6Ii9zdC9jYXBzdWxlL2JlYXV0eS1saXBzLW1ha2UtdXAjZ2xvdy1jYXJlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNoZWVyIExpcHN0aWNrIiwibGFiZWwiOiJTaGVlciBMaXBzdGljayIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktbGlwcy1tYWtlLXVwI3NoZWVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIExpcCBCYWxtIiwibGFiZWwiOiJMaXAgQmFsbSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktbGlwcy1tYWtlLXVwI2JhbG0iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6IlZpcnR1YWwgVHJ5LU9uIiwibGFiZWwiOiJWaXJ0dWFsIFRyeS1PbiIsImxpbmsiOiIvc3QvdnRvLWxhbmRpbmciLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9zdC9jYXBzdWxlL2JlYXV0eS1saXBzLW1ha2UtdXAiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQmVhdXR5IEV5ZXMiLCJsYWJlbCI6IkV5ZXMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBFeWVzaGFkb3ciLCJsYWJlbCI6IkV5ZXNoYWRvdyIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZXllcy1tYWtldXAjcXVhZC1wYWxldHRlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEV5ZWxpbmVyIiwibGFiZWwiOiJFeWVsaW5lciIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZXllcy1tYWtldXAjaW5rLWxpbmVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEV5ZWJyb3cgUGVuY2lsIiwibGFiZWwiOiJFeWVicm93IFBlbmNpbCIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZXllcy1tYWtldXAjd2F0ZXJwcm9vZi1icm93LXBlbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBNYXNjYXJhIiwibGFiZWwiOiJNYXNjYXJhIiwibGluayI6Ii9wci9iZWF1dHkvbWFrZS11cC9leWVzL21hc2NhcmEtbG9ic2N1ci1ibGFjay1wLTYxNDY3MDlQTUE0MTAwMCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiVmlydHVhbCBUcnktT24iLCJsYWJlbCI6IlZpcnR1YWwgVHJ5LU9uIiwibGluayI6Ii9zdC92dG8tbGFuZGluZyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWV5ZXMtbWFrZXVwIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIEJlYXV0eSBGYWNlIiwibGFiZWwiOiJGYWNlIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gSGlnaGxpZ2h0aW5nIFBvd2RlciIsImxhYmVsIjoiSGlnaGxpZ2h0aW5nIFBvd2RlciIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZmFjZS1tYWtldXAiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUG93ZGVyIiwibGFiZWwiOiJQb3dkZXIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWZhY2UtbWFrZXVwI3Bvd2RlciIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDb25jZWFsZXIiLCJsYWJlbCI6IkNvbmNlYWxlciIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZmFjZS1tYWtldXAjY29uY2VhbGVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIExpcXVpZCBIaWdobGlnaHRlciIsImxhYmVsIjoiTGlxdWlkIEhpZ2hsaWdodGVyIiwibGluayI6Ii9zdC9jYXBzdWxlL2JlYXV0eS1mYWNlLW1ha2V1cCNpbGx1bWluYXRldXIiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQnJvbnplciIsImxhYmVsIjoiQnJvbnplciIsImxpbmsiOiIvcHIvYmVhdXR5L21ha2UtdXAvZmFjZS8wMS1wb3VkcmUtZGUtYmVhdXRlLWVjbGF0LXNvbGVpbC1wb3dkZXItcC02MjQ5NzU5UEJSMjAwMDEiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRm91bmRhdGlvbiIsImxhYmVsIjoiRm91bmRhdGlvbiIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZmFjZS1tYWtldXAiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQmx1c2giLCJsYWJlbCI6IkJsdXNoIiwibGluayI6Ii9zdC9jYXBzdWxlL2JlYXV0eS1mYWNlLW1ha2V1cCNibHVzaCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBOb3VyaXNoaW5nIEJhbG0iLCJsYWJlbCI6Ik5vdXJpc2hpbmcgQmFsbSIsImxpbmsiOiIvcHIvYmVhdXR5L21ha2UtdXAvZmFjZS9ndWNjaS1iYXVtZS1ub3Vycmlzc2FudC11bml2ZXJzZWwtbm91cmlzaGluZy1iYWxtLXAtNjg0MzA2OVBSRDk5MDAwIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEJlYXV0eSBNaXN0IiwibGFiZWwiOiJCZWF1dHkgTWlzdCIsImxpbmsiOiIvcHIvYmVhdXR5L21ha2UtdXAvZmFjZS9ndWNjaS1icnVtZS
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_identifiers = ['Lipstick', 'Eyebrow Pencil', 'Blush', 'Highlighting Powder', 'Concealer']
    for identifier in clothing_identifiers:
        elements = soup.find_all(lambda tag: tag.name == 'div' and identifier in tag.text)
        for element in elements:
            clothing_sections.append(element.text.strip())
    return clothing_sections
Results: []
Search result: V0eSBNaXN0IiwibGFiZWwiOiJCZWF1dHkgTWlzdCIsImxpbmsiOiIvcHIvYmVhdXR5L21ha2UtdXAvZmFjZS9ndWNjaS1icnVtZS1kZS1iZWF1dGUtYmVhdXR5LW1pc3QtcC02NzM5NDY5UFJEOTk5OTkiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUHJpbWVyIiwibGFiZWwiOiJQcmltZXIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvYmVhdXR5LWZhY2UtbWFrZXVwI3NlcnVtLWdsb3NzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEZhY2UgR2xvc3MiLCJsYWJlbCI6IkZhY2UgR2xvc3MiLCJsaW5rIjoiL3ByL2JlYXV0eS9tYWtlLXVwL2ZhY2UvZWNsYXQtZGUtYmVhdXRlLWVmZmV0LWx1bWllcmUtZ2VsLWZhY2UtZ2xvc3MtcC02MjQ5NzY5UFJEOTAwMDEiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU2hhZGUgRmluZGVyIiwibGFiZWwiOiJBUiBTaGFkZSBGaW5kZXIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvc2hhZGUtZmluZGVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktZmFjZS1tYWtldXAiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgQmVhdXR5IE5haWxzIiwibGFiZWwiOiJOYWlscyIsImxpbmsiOiIvc3QvY2Fwc3VsZS9iZWF1dHktbmFpbHBvbGlzaCIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMiBGcmFncmFuY2VzIiwibGFiZWwiOiJGcmFncmFuY2VzIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gV29tZW4ncyBGcmFncmFuY2VzIiwibGFiZWwiOiJXb21lbidzIEZyYWdyYW5jZXMiLCJsaW5rIjoiL2NhL2JlYXV0eS9mcmFncmFuY2VzL2ZyYWdyYW5jZXMtZm9yLXdvbWVuLWMtZnJhZ3JhbmNlcy1mb3Itd29tZW4iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTWVuJ3MgRnJhZ3JhbmNlcyIsImxhYmVsIjoiTWVuJ3MgRnJhZ3JhbmNlcyIsImxpbmsiOiIvY2EvYmVhdXR5L2ZyYWdyYW5jZXMvZnJhZ3JhbmNlcy1mb3ItbWVuLWMtZnJhZ3JhbmNlcy1mb3ItbWVuIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIEd1aWx0eSBFc3NlbmNlIiwibGFiZWwiOiJHdWNjaSBHdWlsdHkgRXNzZW5jZSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9ndWNjaS1ndWlsdHktZnJhZ3JhbmNlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIEZsb3JhIiwibGFiZWwiOiJHdWNjaSBGbG9yYSIsImxpbmsiOiIvbnN0L2d1Y2NpLWZsb3JhIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEd1Y2NpIEJsb29tIiwibGFiZWwiOiJHdWNjaSBCbG9vbSIsImxpbmsiOiIvc3QvY2Fwc3VsZS9ndWNjaS1ibG9vbSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL2JlYXV0eS9mcmFncmFuY2VzLWMtYmVhdXR5LWZyYWdyYW5jZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgTHV4dXJ5IENvbGxlY3Rpb24iLCJsYWJlbCI6Ikx1eHVyeSBDb2xsZWN0aW9uIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gIENhcHN1bGUgVGhlIEFsY2hlbWlzdCdzIEdhcmRlbiIsImxhYmVsIjoiVGhlIEFsY2hlbWlzdCdzIEdhcmRlbiIsImxpbmsiOiIvc3QvY2Fwc3VsZS90aGUtYWxjaGVtaXN0LWdhcmRlbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIEVhdSBkZSBQYXJmdW0iLCJsYWJlbCI6IkVhdSBkZSBQYXJmdW0iLCJsaW5rIjoiL3N0L2NhcHN1bGUvdGhlLWFsY2hlbWlzdC1nYXJkZW4jdGFnX2VhdWRlcGFyZnVtX3Byb2R1Y3RzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIENhcHN1bGUgQWNxdWEgUHJvZnVtYXRhIiwibGFiZWwiOiJBY3F1YSBQcm9mdW1hdGEiLCJsaW5rIjoiL3N0L2NhcHN1bGUvdGhlLWFsY2hlbWlzdC1nYXJkZW4jdGFnX2FjcXVhcHJvZnVtYXRhX3Byb2R1Y3RzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIENhcHN1bGUgUGVyZnVtZWQgT2lscyIsImxhYmVsIjoiUGVyZnVtZWQgT2lscyIsImxpbmsiOiIvc3QvY2Fwc3VsZS90aGUtYWxjaGVtaXN0LWdhcmRlbiN0YWdfb2xpaXByb2Z1bWF0aV9wcm9kdWN0cyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIFRoZSBBcnQgb2YgTGF5ZXJpbmciLCJsYWJlbCI6IlRoZSBBcnQgb2YgTGF5ZXJpbmciLCJsaW5rIjoiL3N0L2NhcHN1bGUvdGFnLWxheWVyaW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImxpbmsiOiIvc3QvY2Fwc3VsZS90aGUtYWxjaGVtaXN0LWdhcmRlbiIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLUwyIEluc2lkZSBHdWNjaSBCZWF1dHkiLCJsYWJlbCI6Ikluc2lkZSBHdWNjaSBCZWF1dHkiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBDYXJpbmcgQ29sbGVjdGlvbiIsImxhYmVsIjoiQ2FyaW5nIENvbGxlY3Rpb24iLCJsaW5rIjoiL3N0L2NhcHN1bGUvY2FyaW5nLWNvbGxlY3Rpb24iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gQVIgU2hhZGUgZmluZGVyIiwibGFiZWwiOiJBUiBTaGFkZSBGaW5kZXIiLCJsaW5rIjoiL3N0L2NhcHN1bGUvc2hhZGUtZmluZGVyIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJWaXJ0dWFsIFRyeS1PbiIsImxhYmVsIjoiVmlydHVhbCBUcnktT24iLCJsaW5rIjoiL3N0L3Z0by1sYW5kaW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFRoZSBBcnQgb2YgTGF5ZXJpbmciLCJsYWJlbCI6IlRoZSBBcnQgb2YgTGF5ZXJpbmciLCJsaW5rIjoiL3N0L2NhcHN1bGUvdGFnLWxheWVyaW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfV0sImlzTm9uU2hvcHBhYmxlIjpmYWxzZX1dLCJsaW5rIjoiL2NhL2JlYXV0eS1jLWJlYXV0eSIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBMMSBHdWNjaSBTZXJ2aWNlcyIsImxhYmVsIjoiR3VjY2kgU2VydmljZXMiLCJzdWJNZW51IjpbeyJuYW1lIjoiTk9SQU0gLSBWaWV3IEFsbCBHdWNjaSBTZXJ2aWNlcyIsImxhYmVsIjoiVmlldyBBbGwgR3VjY2kgU2VydmljZXMiLCJsaW5rIjoiL25zdC9jYXBzdWxlL2dpZnRzLXNlcnZpY2VzIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIENvbXBsaW1lbnRhcnkgU2hpcHBpbmcgJiBSZXR1cm5zIiwibGFiZWwiOiJDb21wbGltZW50YXJ5IFNoaXBwaW5nICYgUmV0dXJucyIsImxpbmsiOiIvbnN0L2NhcHN1bGUvZ2lmdHMtc2VydmljZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gU2VydmljZSAtIENvbGxlY3QgaW4gc3RvcmUiLCJsYWJlbCI6IkNvbGxlY3QgSW4gU3RvcmUiLCJsaW5rIjoiL25zdC9jb2xsZWN0LWluLXN0b3JlIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFNlcnZpY2VzIC0gUHJpdmF0ZSBBcHBvaW50bWVudCIsImxhYmVsIjoiQm9vayBhbiBJbiBTdG9yZSBBcHBvaW50bWVudCIsImxpbmsiOiIvbnN0L2Jvb2stYW4tYXBwb2ludG1lbnQiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUGFja2FnaW5nIiwibGFiZWwiOiJQYWNrYWdpbmciLC
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    clothing_keywords = ['clothing', 'apparel', 'fashion', 'wear', 'garment']
    sections = soup.find_all(['div', 'section', 'li', 'a'], recursive=True)
    for section in sections:
        label = section.get('label', '').lower()
        name = section.get('name', '').lower()
        if any((keyword in label for keyword in clothing_keywords)) or any((keyword in name for keyword in clothing_keywords)):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: QiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gUGFja2FnaW5nIiwibGFiZWwiOiJQYWNrYWdpbmciLCJsaW5rIjoiL25zdC9naWZ0LXdyYXBwaW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIFBlcnNvbmFsaXphdGlvbiIsImxhYmVsIjoiUGVyc29uYWxpemF0aW9uIiwibGluayI6Ii9uc3QvbW9ub2dyYW1taW5nIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEdVQ0NJIFRBRyIsImxhYmVsIjoiR3VjY2kgVGFnIiwibGluayI6Ii9zdC9uZmMtdGFnLWV4cGVyaWVuY2UiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwibGluayI6Ii9uc3QvY2Fwc3VsZS9naWZ0cy1zZXJ2aWNlcyIsImlzTm9uU2hvcHBhYmxlIjp0cnVlfSx7Im5hbWUiOiJOT1JBTSAtIEwxIFdvcmxkIG9mIEd1Y2NpIiwibGFiZWwiOiJXb3JsZCBvZiBHdWNjaSIsInN1Yk1lbnUiOlt7Im5hbWUiOiJXVyAtIEhpc3RvcnkgT2YgR3VjY2kiLCJsYWJlbCI6Ikhpc3RvcnkgT2YgR3VjY2kiLCJsaW5rIjoiL25zdC9oaXN0b3J5LW9mLWd1Y2NpIiwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIFByb2plY3RzIGJ5IHRoZSBIb3VzZSIsImxhYmVsIjoiUHJvamVjdHMgYnkgdGhlIEhvdXNlIiwic3ViTWVudSI6W3sibmFtZSI6Ik5PUkFNIC0gQ2Fwc3VsZSBHdWNjaSBPc3RlcmlhIGRhIE1hc3NpbW8gQm90dHVyYSIsImxhYmVsIjoiR3VjY2kgT3N0ZXJpYSBkYSBNYXNzaW1vIEJvdHR1cmEiLCJsaW5rIjoiaHR0cHM6Ly93d3cuZ3VjY2lvc3RlcmlhLmNvbS8iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gRVhUIEd1Y2NpIEdhcmRlbiIsImxhYmVsIjoiR3VjY2kgR2FyZGVuIiwibGluayI6Imh0dHBzOi8vZ3VjY2lwYWxhenpvLmd1Y2NpLmNvbS8iLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNLSBFWFQgR3VjY2kgR2lhcmRpbm8gMjUiLCJsYWJlbCI6Ikd1Y2NpIEdpYXJkaW5vIDI1IiwibGluayI6Imh0dHBzOi8vZ3VjY2lwYWxhenpvLmd1Y2NpLmNvbS8jL2VuL2d1Y2NpLWdpYXJkaW5vLTI1LyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBFWFQgR3VjY2kgRXF1aWxpYnJpdW0iLCJsYWJlbCI6Ikd1Y2NpIEVxdWlsaWJyaXVtIiwibGluayI6Imh0dHBzOi8vZXF1aWxpYnJpdW0uZ3VjY2kuY29tLyIsImlzTm9uU2hvcHBhYmxlIjpmYWxzZX0seyJuYW1lIjoiTk9SQU0gLSBDYXBzdWxlIENoaW1lIEZvciBDaGFuZ2UiLCJsYWJlbCI6Ikd1Y2NpIENISU1FIiwibGluayI6Ii9zdC9jYXBzdWxlL2NoaW1lLWZvci1jaGFuZ2UiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9XSwiaXNOb25TaG9wcGFibGUiOmZhbHNlfSx7Im5hbWUiOiJOT1JBTSAtIEwyIFN0b3JpZXMiLCJsYWJlbCI6IlN0b3JpZXMiLCJsaW5rIjoiL3N0L3N0b3JpZXMiLCJpc05vblNob3BwYWJsZSI6ZmFsc2V9LHsibmFtZSI6Ik5PUkFNIC0gTDIgRmFzaGlvbiBTaG93cyIsImxhYmVsIjoiRmFzaGlvbiBTaG93cyIsInRoZW1hdGljTmF2aWdhdGlvbiI6W3sibGFiZWwiOiJXb21lbidzIFNwcmluZyBTdW1tZXIgMjAyNSIsIm5hbWUiOiJXVyBUaGVtYXRpYyAtIFNwcmluZyBTdW1tZXIgMjAyNSBXb21lbidzIEZhc2hpb24gU2hvdyIsImxpbmsiOiIvbXMvd29tZW4tc3ByaW5nLXN1bW1lci0yMDI1LWZhc2hpb24tc2hvdyIsImltYWdlIjp7InRpdGxlIjoiZ3VjY2ktd3NzMjUtbGluZXVwIiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvc0Y5UFpSSVBCTWw5K1VxYm05V1AyWFM2OEI0NlZ6YWdraG9sb3N0YmpjaG9lQnY1cFlKMm1tVFE0VTZzU3RVajZYMlJKVE9Xd290VCtuVl9vWWxVUDN5elp5cE9wcjlyQnloWjdPdjNOVTRJTVdFY084aHcyeFdKYlBoU1ByOVdza1g0N3pFeTVTTXdLdFc5SVl3eVo0bFcwaEI1NUZCbmlheldDNURQODBRX2ZjSytQd2dWXzlwZ0hDUE4wNFlEdUNHbjg5d0R3ZFpEUWdDVldzTnE4QT09L0dhc3Bhcl9SdWl6X19fUjMxMzY2LmpwZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvRlRIV2MwdDdXSEJrbUNqalp0RE1hdXhlQnFxTFVlbUlRQUwxWmh3UUk5MG9fUVQ2dUVUQzlRMmhlb0J6NE41eTlFQW9Jd3NfcmphX2pOKzQ0TEhueUUzblBpUllwVVMyTjlidXlIdW1rV0g3UjU2SXVaQXRmNHk1ayt0ZkFGTFFISmtIY0k0SlRNbStYTitnTWM3NFQxQjZua1pnTHVqb0dZcUREUGUreHdiS2VEK3FnazVXcEdaNFM4d2ZEQldTT1pSUk9PdVQzWEN3VURDTnBVeGpBWG8wZlZiK0p6R3lVZWxROWpKZFFRND0vR2FzcGFyX1J1aXpfX19SMzEzNjYuanBnIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1VoeWMrNHBhTUZCdDZGa1h4cG5pYWs2OEpZUGZNMmZoeTBwYkZISGxIU2pWQTVZUnhYSWtUQjMyUXJ4QnRyR3hGckRab3Nlbmxvd2doTnRXakdOVTk5VGR4X0NKMEI2ZlVQTFZSSzh4cG9zSF9XMG56S2NTVUVtcHVaN2gzUFo0YnpqV0hGcHZCbG8wV3d0NVlHcFRhbmV1d2VWM3hlR0U3UnA5bE0wNnN3VVU1b09nZWJzSWFFYVBhQUJSNDFNYlhEOHk3b2RsUGpIc21DK0JHZ2RscHlEX2MyN1AyaTN3RnhpZ3VwVit6UDQ9L0dhc3Bhcl9SdWl6X19fUjMxMzY2LmpwZyJ9fX0seyJsYWJlbCI6Ik1lbidzIFNwcmluZyBTdW1tZXIgMjAyNSIsIm5hbWUiOiJXVyAtIFRoZW1hdGljIE1lbidzIFNwcmluZyBTdW1tZXIgMjAyNSBGYXNoaW9uIFNob3ciLCJsaW5rIjoiL21zL21lbi1zcHJpbmctc3VtbWVyLTIwMjUtZmFzaGlvbi1zaG93LyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfTUZTLVNTMjUtTGluZXVwIDAwMSBEZWZhdWx0IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvZ0FWeXpxZThMamFuMFVNX256VDl3TVhOQVRYeDFYaUN5WmtEdnNCeXl5cWFybnpTdEVCNzVIOGE3R0F2Umh0Wl9CYUdETnZzbThBQ0lrSWJVVlVDSmxiTDgydER6MTZ1ZDJ3azc1Q0dEQXZkeENKTEk2bmh0SStuRmNLZDlPMll5V1krTHQrWkhPSmlUTlpvMm44Wjl0aEJvcFNPczlhQkVFOFhUK25jUk1EVjQ5NG8rQ1RJSE1udzNUZFhTQzBCeXdlVlVraTlWQUt3dkZIRTVoUXpBTzJtNHJGUzlTVzJSdzBUUmlrV0pOYkpIT3l1MW8zNnhOVUZrQnFVU2FmYnVkODZlUThqdnFSVm54WmhLV0lpNVE9PS9Qcm9tb0NvbXBvbmVudF9NRlMtU1MyNS1MaW5ldXBfMDAxX0RlZmF1bHQucG5nIiwidXJsU2V0Ijp7IjIwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9XMlRmcHlnSzRYQnIwT2ZWOGRncTVCVnkwTVpBZWhyUFdJUURJVnlpUWFDU29jOWt3UVZtVV8zdFNVcTRzK3M3OENJR0NiR0Z2K0RPZWRpN1ZjbHBqOEJtS2FaS3RfV1pLTnV6bGxGSFUrK3ZMSVNOY1MzbXFtUjdqMnBCVF9BUDRWb1lLOVYzODBTOUs5QzRQNGlhN0lma0RqNGpXc1hpRDc1ektkOUlTNjk4ZGJJM05hK296Vm9HdThDY1hWWm84THBrWEFIYVY0WjNMaVR3K2U0VGUzZ3hEOTdoS1g3NlFWYkRFYlJ1aFEyazJ5blBTWUVLNEl3Yk9iYUJjeU9EV3NjV0JnM2FhZEF3UUZwQktkU09CUT09L1Byb21vQ29tcG9uZW50X01GUy1TUzI1LUxpbmV1cF8wMDFfRGVmYXVsdC5wbmciLCI0MDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgveFUwbzR4OENaRDFRSDR4ZW1QUTNDbFpOY1lGVzRJWU9Wak
Parsing script:
async def parse_clothing_sections(html: str):
    soup = BeautifulSoup(html, 'html.parser')
    clothing_sections = []
    for section in soup.find_all('section'):
        if any((keyword in section.text.lower() for keyword in ['fashion', 'clothing', 'apparel', 'wear'])):
            clothing_sections.append(section)
    return clothing_sections
Results: []
Search result: AiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgveFUwbzR4OENaRDFRSDR4ZW1QUTNDbFpOY1lGVzRJWU9WaktYUVpWOFNHQktyTlhPeUVNSURYV28rNkpYM1AwU2hpdDlhQmwzWHQ2RWhJWVFUSHZ6QXZXNFVJZUI3ZGFsREphSmpTejJqYjBrdXZRdjZqSWxOYXVZQTNBRCtWWXZBa25fK3QzZ1NCdndDY01qMHRNcFBvQTlYckNiNm9yOG5LaGtVZ1RNSHlTTTliQ0syajd3VXpRRkFqNVp0MnZxb3FDd0ZzS0ZBN0oycENaTkpaK2orUkdWbGRmcWFNQXJHVmZvR3NKTGoxeGM1cUZRWUNWNnpZUGZSRV83eTIyeDhMT3VlOEF4RWlFbzNQYVJBd05NUFE9PS9Qcm9tb0NvbXBvbmVudF9NRlMtU1MyNS1MaW5ldXBfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiQ3J1aXNlIDIwMjUiLCJuYW1lIjoiVGhlbWF0aWMgLSBDcnVpc2UgMjAyNSBGYXNoaW9uIFNob3ciLCJsaW5rIjoiL21zL2NydWlzZS0yMDI1LWZhc2hpb24tc2hvdyIsImltYWdlIjp7InRpdGxlIjoiVGhlbWF0aWNfRlMtQ3J1aXNlLTI1IiwiZGVzY3JpcHRpb24iOiIiLCJ1cmwiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvZEdvNGxoeHFHNnFXMXExVDlFYUVJSzRBWVFNa3djelU5UF94TVZMaWFEOU5aNFNhVXJzbHdxR0Q1M0JOQzduN1ZrMVlhNzIrMkpCV0tUMWNtTV9iazAyZENZT1BqU0p2Z1pXMHljbkMya3ZzakpwdmhuMmFCM3E2UHJGc0tJYXo2ZDBkeUE0WGpSbFhWcUsrRTNlOF9NcEYxK0dlcExjX1dWdk05WkpwQ1UyWURKRTk1c2lJaW8wbVZLdUxlZ0JENmdpekVMdTY5X3R3aHVab1NhTklWY2w4Q0FFaENTZjJLRzdibmdUbGp5VWM2TSthMVNHVHhRYkUzaGMwclJWTWRfdERnUkxOUThnaUxicG42aUJaNkU5TGRxU09QeVlTSktCZG15dkdpbkk9L1Byb21vQ29tcG9uZW50X0ZTLUNydWlzZTI1LU1heTI0LUxpbmV1cF8wMDFfRGVmYXVsdC5wbmciLCJ1cmxTZXQiOnsiMjAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L1FGaCtDeWZ6aWRhWlBzTVh6ZWJJbXFfdUY4TFNXTTFIZ29IcUEyVHlYWjRFemw0aTkxK0psaVR1UU5GdWZFZEozR0E0RHZZZEMrYXpxVzduNjFiX0l2aGJmc1FCd2kySCtRam0zYVBlck5sbGkzTVF3bE8xb0tZU1BLNFVTb3crVXp5VlEyMXFMUWZ5UnQxX21RQWtBd1BxQW10V1VKRF9nOW1BTGh1YmczUzQwdWt0Y25wczExTk5NR0c0RU1MQnBxZzJzeUYzcGZQUGRwUmdla0FHSVllUUVzbE8wX3RhVGszQ2I3aXB5blVkYW1DSVNHQXBDZUQ0aUNJRWlvYzVaMlhUc0dqZzRoSlNHbjhfWHc1MHhvejNSbkpiQzRNVjA3Z2dTYnI1NTJFPS9Qcm9tb0NvbXBvbmVudF9GUy1DcnVpc2UyNS1NYXkyNC1MaW5ldXBfMDAxX0RlZmF1bHQucG5nIiwiNDAwIjoiaHR0cHM6Ly9tZWRpYS5ndWNjaS5jb20vZHluYW1pYy9iM2M4L0UreDBkSEdjd1UzOVNrQnVITG9KOEFqM0crbDdDTUpUMGdjdUZiTWdNUVlOVXQrZHc4dVVOZ3ZEZkZjQUtfdFFRTVliQXd4R3FKcUlkRGIrSl91ZjZBTm9hSXNTdXpLTW1DTUVJYmJqdDlXNDVUTEVoS20wWVRHaVRJZ21WTFpBUlJPQmxTczlJQ0p2bDN1cmxlOVFUeV84eHJCRUhPR1dSQ2Q5dFUrWFJPMzNYbUF1cytkbzRxVmdCZ3RFUmNYYU5hYkswYlZ6VzBEaTBBYjNQaXRPOHpyODEzMFRIOHYwelJSb3AyZDExY04zT0ZLU05GZWxueEVrSXYrTzZ3cE9ZMFRvYlV0X2lFNk1hdll0NCtSTWk5b1NHb0lmRFBYaHFjNHVKdk1IN1I4PS9Qcm9tb0NvbXBvbmVudF9GUy1DcnVpc2UyNS1NYXkyNC1MaW5ldXBfMDAxX0RlZmF1bHQucG5nIn19fSx7ImxhYmVsIjoiV29tZW4ncyBGYWxsIFdpbnRlciAyMDI0IiwibmFtZSI6IldXIFdvbWVuJ3MgRmFsbCBXaW50ZXIgMjAyNCBUaGVtYXRpYyIsImxpbmsiOiIvbXMvd29tZW4tZmFsbC13aW50ZXItMjQtZmFzaGlvbi1zaG93IiwiaW1hZ2UiOnsidGl0bGUiOiJUaGVtYXRpY19XRlcyNCBGYXNoaW9uIHNob3ciLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9GTGo1UjE0Mk5GZEVKZzNlV2hCZjRJc0tSX0pQRzllUkRnS1czeHZDNXNwdVNfQkJqZ3NOUFJGUkR2UW9qZ0R4X0tWV3BsQitIMkNMS0FMaU1zdm9PZUlrZ1VZeHQ2Z2pjX0VnR1BGZ3pNcXJRSnlUTXFpVHVOWDhmWU5DN3FKN3BwTks0NUJMcnhjMzN0ZUNJb3FHNU5MR2VVejI1Ym1OZkVjUWRselMyRnZjbktVQ0h4V2RFSXUrRUpQVWlrZ0FVc0QwbDB6c1JGcUdGTEJhMV9fTV9BPT0vVGhlbWF0aWMtV0ZTLUZXLUZFQjI0LnBuZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvcE1ZZmJQejJ3UE9hOVFGZEFJTjdKQW5PaHhrNF9HV2tWQ2FlSU1aQmlmQWZmRnFVZTJpSFBFMHF5TjhqRFVrMllGeTQ4MlBMVkExS2N3MEJMenh4b1hJcHRCcExwRTV6cHFwQU1MMSsxV3REY1lsRGxuczREQ3lveFZvSUxJRGRXTHVNY1Vpc2VpSFdEWmxYZHkzVVNubWhoajI0cFVTNDlKM09VMnZ3dXRlVGIySW05RVM4OWpZbXNhWk5DZmxWY1ZrcU9MK3ZNcU5xNU1DOEdNZlZ1dHZpZ3ZWa1B2Ynh6TUIyTTc5Z1lOaz0vVGhlbWF0aWMtV0ZTLUZXLUZFQjI0LnBuZyIsIjQwMCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC9WUWhMOU1EbHU1R2ZKN3JsWHpwUUVHMG92UDVQcldPRk4zbmJ1Nks1c2E0QUVfdlRjNitPSFgyMmdKTV91SV9WVlQxYjlFQldETVY0WF9YVXc0MW9HQVJObnVRZVFOUjhZUElBVmh6Q2lJb2U4V0tiS3NKVkFBS2VBN0xfVW1VczRiNWxmd19aVFdhTHN1ZitkYlVqZDJ4S2tZQllGa092U3RtbGgzZDFXQytYdVJvOV8rcFUwY2VxdGlWWl9kNm1QbDBnNThIbTBNVVlWSnRGQldiTVlSQkpIOTN2YVhXNEo5eUgxQjJla1V3PS9UaGVtYXRpYy1XRlMtRlctRkVCMjQucG5nIn19fSx7ImxhYmVsIjoiTWVuJ3MgRmFsbCBXaW50ZXIgMjAyNCIsIm5hbWUiOiJXVyAtIE1GVzI0IEZTIFRoZW1hdGljICIsImxpbmsiOiIvbXMvZ3VjY2ktYW5jb3JhLW1lbi1mYWxsLXdpbnRlci0yNCIsImltYWdlIjp7InRpdGxlIjoidGhlbWF0aWMtR3VjY2ktTWVuc0ZhbGxXaW50ZXItSmFuMjQiLCJkZXNjcmlwdGlvbiI6IiIsInVybCI6Imh0dHBzOi8vbWVkaWEuZ3VjY2kuY29tL2R5bmFtaWMvYjNjOC81bmRLTTdCbFdJbit3K08yMDFRVUVWbWtyMjRKRjhuVWdNRUVtSXk1dlJWZWc0Z25vZ2lzbGJwY1NpWEV1NUpXbE42UENiVWV0OWlUTWhnRTM0VkVMbFp0eWV6ckw1V0E5dEJJYUVrREp6RXdrZFRKellqNHc4dnl3aCt0MkY1RllHMmxVbWVBVGI5KzVPYl9WbzlOMjZsb2tNTlNlK1hVenk2aERLcWlVZm9CUFlTekxhcm9LU0czSCtXbU96dDMyY1RiRnJqQm5iSGJBcE4rZWFOdjB0ZVdza2FXZG44K2RtRDYwZGxtTE54eUFsbDNSVFdleFdib3lqbG5FakpCL3RoZW1hdGljLUd1Y2NpLU1lbnNGYWxsV2ludGVyLUphbjI0LnBuZyIsInVybFNldCI6eyIyMDAiOiJodHRwczovL21lZGlhLmd1Y2NpLmNvbS9keW5hbWljL2IzYzgvbXpSMjJfMWcwc1FJMFlQNU44ZzI2Rk11U1p4MjYrT1BZX0tWMnhYVE1IRHpGUjV0bWZxVllMVk5ob2tkSTBOd0U4cjFDYnJjN1RJNGc4dHV3ejJPZm16b1hRUzd1Y05HMkExNlJHbDBkNkVOenNXNVFSWGlZak5PbWpIclAzZTQxVjN4dDRDWW1PcmNtenVIU0dvREsyRHR4UWk4UUVCV2tseUtnWm92b2QzanNUTXNnZEduTm1ZWmdmYWpQNVBfTGlBaTNKdGZYbkVQUkMybTVfMGpPRThqbW1UTkxEY1RpUFk2M2Y1SnlCNXpLQVVKZFduOHhpQVV6MW5GWFRVai90aGVtYXRpYy1HdWNjaS1NZW5zRmFsbFdpbnRlci1KYW4yNC5wbmciLCI0MDAiOi